(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) //                      MITgcm UV
(PID.TID 0000.0001) //                      =========
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // execution environment starting up...
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // MITgcmUV version:  checkpoint69c
(PID.TID 0000.0001) // Build user:        tshahriar
(PID.TID 0000.0001) // Build host:        sverdrup.oden.utexas.edu
(PID.TID 0000.0001) // Build date:        Wed Jul  9 02:17:17 PM CDT 2025
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Execution Environment parameter file "eedata"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Example "eedata" file
(PID.TID 0000.0001) ># Lines beginning "#" are comments
(PID.TID 0000.0001) >#  nTx      :: No. threads per process in X
(PID.TID 0000.0001) >#  nTy      :: No. threads per process in Y
(PID.TID 0000.0001) ># debugMode :: print debug msg (sequence of S/R calls)
(PID.TID 0000.0001) > &EEPARMS
(PID.TID 0000.0001) > nTx=1,
(PID.TID 0000.0001) > nTy=1,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) ># Note: Some systems use & as the namelist terminator (as shown here).
(PID.TID 0000.0001) >#       Other systems use a / character.
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Computational Grid Specification ( see files "SIZE.h" )
(PID.TID 0000.0001) //                                  ( and "eedata"       )
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001)      nPx =    1 ; /* No. processes in X */
(PID.TID 0000.0001)      nPy =    1 ; /* No. processes in Y */
(PID.TID 0000.0001)      nSx =    1 ; /* No. tiles in X per process */
(PID.TID 0000.0001)      nSy =    1 ; /* No. tiles in Y per process */
(PID.TID 0000.0001)      sNx =   62 ; /* Tile size in X */
(PID.TID 0000.0001)      sNy =   62 ; /* Tile size in Y */
(PID.TID 0000.0001)      OLx =    4 ; /* Tile overlap distance in X */
(PID.TID 0000.0001)      OLy =    4 ; /* Tile overlap distance in Y */
(PID.TID 0000.0001)      nTx =    1 ; /* No. threads in X per process */
(PID.TID 0000.0001)      nTy =    1 ; /* No. threads in Y per process */
(PID.TID 0000.0001)       Nr =   31 ; /* No. levels in the vertical   */
(PID.TID 0000.0001)       Nx =   62 ; /* Total domain size in X ( = nPx*nSx*sNx ) */
(PID.TID 0000.0001)       Ny =   62 ; /* Total domain size in Y ( = nPy*nSy*sNy ) */
(PID.TID 0000.0001)   nTiles =    1 ; /* Total no. tiles per process ( = nSx*nSy ) */
(PID.TID 0000.0001)   nProcs =    1 ; /* Total no. processes ( = nPx*nPy ) */
(PID.TID 0000.0001) nThreads =    1 ; /* Total no. threads per process ( = nTx*nTy ) */
(PID.TID 0000.0001) usingMPI =    F ; /* Flag used to control whether MPI is in use */
(PID.TID 0000.0001)                   /*  note: To execute a program with MPI calls */
(PID.TID 0000.0001)                   /*  it must be launched appropriately e.g     */
(PID.TID 0000.0001)                   /*  "mpirun -np 64 ......"                    */
(PID.TID 0000.0001) useCoupler=   F ; /* Flag used to control communications with   */
(PID.TID 0000.0001)                   /*  other model components, through a coupler */
(PID.TID 0000.0001) useNest2W_parent =    F ;/* Control 2-W Nesting comm */
(PID.TID 0000.0001) useNest2W_child  =    F ;/* Control 2-W Nesting comm */
(PID.TID 0000.0001) debugMode =    F ; /* print debug msg. (sequence of S/R calls)  */
(PID.TID 0000.0001) printMapIncludesZeros=    F ; /* print zeros in Std.Output maps */
(PID.TID 0000.0001) maxLengthPrt1D=   65 /* maxLength of 1D array printed to StdOut */
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Mapping of tiles to threads
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // -o- Thread   1, tiles (   1:   1,   1:   1)
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile <-> Tile connectvity table
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile number: 000001 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //        EAST: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //       SOUTH: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //       NORTH: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  INI_PARMS: opening model parameter file "data"
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Model parameters
(PID.TID 0000.0001) ># Continuous equation parameters
(PID.TID 0000.0001) > &PARM01
(PID.TID 0000.0001) > tRef=23.,23.,23.,22.,21.,20.,19.,17.,16.,15.,14.,12.,11.,10.,9.,8.,
(PID.TID 0000.0001) >      7.,6.,6.,5.,5.,4.,4.,3.,3.,2.,2.,1.,1.,1.,1.,
(PID.TID 0000.0001) > sRef=31*34.5,
(PID.TID 0000.0001) > no_slip_sides=.TRUE.,
(PID.TID 0000.0001) > no_slip_bottom=.TRUE.,
(PID.TID 0000.0001) > bottomDragQuadratic=0.0021,
(PID.TID 0000.0001) > rhonil=1027.5,
(PID.TID 0000.0001) > rhoConstFresh=999.8,
(PID.TID 0000.0001) > eosType='JMD95Z',
(PID.TID 0000.0001) > hFacMinDr=50.,
(PID.TID 0000.0001) > hFacMin=0.3,
(PID.TID 0000.0001) > hFacInf=0.1,
(PID.TID 0000.0001) > hFacSup=5.,
(PID.TID 0000.0001) > implicitFreeSurface=.TRUE.,
(PID.TID 0000.0001) > implicitDiffusion=.TRUE.,
(PID.TID 0000.0001) > implicitViscosity=.TRUE.,
(PID.TID 0000.0001) > viscC4Leith=2.15,
(PID.TID 0000.0001) > viscC4Leithd=2.15,
(PID.TID 0000.0001) > viscA4GridMax=0.8,
(PID.TID 0000.0001) > useAreaViscLength=.TRUE.,
(PID.TID 0000.0001) > tempAdvScheme=33,
(PID.TID 0000.0001) > saltAdvScheme=33,
(PID.TID 0000.0001) > StaggerTimeStep=.TRUE.,
(PID.TID 0000.0001) > vectorInvariantMomentum=.TRUE.,
(PID.TID 0000.0001) > exactConserv=.TRUE.,
(PID.TID 0000.0001) > debuglevel=0,
(PID.TID 0000.0001) > useSingleCPUio=.TRUE.,
(PID.TID 0000.0001) > tempForcing = .TRUE.,
(PID.TID 0000.0001) > saltForcing = .FALSE.,
(PID.TID 0000.0001) > saltStepping=.TRUE.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Elliptic solver parameters
(PID.TID 0000.0001) > &PARM02
(PID.TID 0000.0001) > cg2dTargetResidual=1.E-5,
(PID.TID 0000.0001) > cg2dMaxIters=100,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Time stepping parameters
(PID.TID 0000.0001) > &PARM03
(PID.TID 0000.0001) > startTime=0.,
(PID.TID 0000.0001) > deltaT=1200.,
(PID.TID 0000.0001) >#-for longer run
(PID.TID 0000.0001) ># pChkptFreq=622080000.,
(PID.TID 0000.0001) ># chkptFreq=155520000.,
(PID.TID 0000.0001) ># ----------
(PID.TID 0000.0001) >#-for shorter run
(PID.TID 0000.0001) > pChkptFreq=31104000.,
(PID.TID 0000.0001) > chkptFreq=2592000.,
(PID.TID 0000.0001) >#------
(PID.TID 0000.0001) > dumpFreq=0,
(PID.TID 0000.0001) > monitorFreq=2592000.,
(PID.TID 0000.0001) > monitorSelect=2,
(PID.TID 0000.0001) > tauThetaClimRelax=2592000.,
(PID.TID 0000.0001) >#-run for 1 yrs
(PID.TID 0000.0001) > endTime = 31104000.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Gridding parameters
(PID.TID 0000.0001) > &PARM04
(PID.TID 0000.0001) > usingSphericalPolarGrid=.TRUE.,
(PID.TID 0000.0001) > delX=62*1.,
(PID.TID 0000.0001) > delY=62*1.,
(PID.TID 0000.0001) > xgOrigin=-1.,
(PID.TID 0000.0001) > ygOrigin=14.,
(PID.TID 0000.0001) > delR=10., 11.33, 12.83, 14.53, 16.45, 18.63, 21.1, 23.9, 27.07, 30.65,
(PID.TID 0000.0001) >      34.72, 39.32, 44.53, 50.43, 57.12, 64.69, 73.26, 82.97, 93.97,
(PID.TID 0000.0001) >      106.42, 120.53, 136.5, 154.59, 175.08, 198.29, 224.57, 254.34,
(PID.TID 0000.0001) >      288.05, 326.23, 369.47, 418.43,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) > &PARM05
(PID.TID 0000.0001) > bathyFile='bathy.bin',
(PID.TID 0000.0001) > zonalWindFile='wind.bin',
(PID.TID 0000.0001) > thetaClimFile='SST_relax.bin',
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM01
(PID.TID 0000.0001)  INI_PARMS ; read PARM01 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM02
(PID.TID 0000.0001)  INI_PARMS ; read PARM02 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM03
(PID.TID 0000.0001)  INI_PARMS ; read PARM03 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM04
(PID.TID 0000.0001)  INI_PARMS ; read PARM04 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM05
(PID.TID 0000.0001)  INI_PARMS ; read PARM05 : OK
(PID.TID 0000.0001)  INI_PARMS: finished reading file "data"
(PID.TID 0000.0001)  PACKAGES_BOOT: opening data.pkg
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.pkg
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.pkg"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Packages (lines beginning "#" are comments)
(PID.TID 0000.0001) > &PACKAGES
(PID.TID 0000.0001) > useDiagnostics=.TRUE.,
(PID.TID 0000.0001) > useGMRedi=.TRUE.,
(PID.TID 0000.0001) > useGrdchk=.TRUE.,
(PID.TID 0000.0001) >
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  PACKAGES_BOOT: finished reading data.pkg
(PID.TID 0000.0001)  PACKAGES_BOOT: On/Off package Summary
 --------  pkgs with a standard "usePKG" On/Off switch in "data.pkg":  --------
 pkg/gmredi               compiled   and   used ( useGMRedi                = T )
 pkg/autodiff             compiled   and   used ( useAUTODIFF              = T )
 pkg/grdchk               compiled   and   used ( useGrdchk                = T )
 pkg/ctrl                 compiled   and   used ( useCTRL                  = T )
 pkg/diagnostics          compiled   and   used ( useDiagnostics           = T )
 -------- pkgs without standard "usePKG" On/Off switch in "data.pkg":  --------
 pkg/generic_advdiff      compiled   and   used ( useGAD                   = T )
 pkg/mom_common           compiled   and   used ( momStepping              = T )
 pkg/mom_vecinv           compiled   and   used ( +vectorInvariantMomentum = T )
 pkg/mom_fluxform         compiled but not used ( & not vectorInvariantMom = F )
 pkg/monitor              compiled   and   used ( monitorFreq > 0.         = T )
 pkg/debug                compiled but not used ( debugMode                = F )
 pkg/rw                   compiled   and   used
 pkg/mdsio                compiled   and   used
 pkg/autodiff             compiled   and   used
 pkg/cost                 compiled   and   used
(PID.TID 0000.0001)  PACKAGES_BOOT: End of package Summary
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  GM_READPARMS: opening data.gmredi
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.gmredi
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.gmredi"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># GM+Redi package parameters:
(PID.TID 0000.0001) >#     GM_Small_Number  :: epsilon used in computing the slope
(PID.TID 0000.0001) >#     GM_slopeSqCutoff :: slope^2 cut-off value
(PID.TID 0000.0001) >
(PID.TID 0000.0001) >#-from MOM :
(PID.TID 0000.0001) ># GM_background_K: 	G & Mc.W  diffusion coefficient
(PID.TID 0000.0001) ># GM_maxSlope    :	max slope of isopycnals
(PID.TID 0000.0001) ># GM_Scrit       :	transition for scaling diffusion coefficient
(PID.TID 0000.0001) ># GM_Sd          :	half width scaling for diffusion coefficient
(PID.TID 0000.0001) ># GM_taper_scheme:	slope clipping or one of the tapering schemes
(PID.TID 0000.0001) ># GM_Kmin_horiz  :	horizontal diffusion minimum value
(PID.TID 0000.0001) >
(PID.TID 0000.0001) >#-Option parameters (needs to "define" options in GMREDI_OPTIONS.h")
(PID.TID 0000.0001) ># GM_isopycK     :	isopycnal diffusion coefficient (default=GM_background_K)
(PID.TID 0000.0001) ># GM_AdvForm     :	turn on GM Advective form       (default=Skew flux form)
(PID.TID 0000.0001) >
(PID.TID 0000.0001) > &GM_PARM01
(PID.TID 0000.0001) >  GM_Small_Number  = 1.D-20,
(PID.TID 0000.0001) >  GM_slopeSqCutoff = 1.D+08,
(PID.TID 0000.0001) >  GM_AdvForm         = .FALSE.,
(PID.TID 0000.0001) >#  GM_isopycK         = 1.1D+3,
(PID.TID 0000.0001) >#  GM_background_K    = 0.9D+3,
(PID.TID 0000.0001) >  GM_background_K    = 1.D+3,
(PID.TID 0000.0001) >  GM_taper_scheme    = 'dm95',
(PID.TID 0000.0001) >  GM_maxSlope        = 1.D-2,
(PID.TID 0000.0001) >  GM_Kmin_horiz      = 50.,
(PID.TID 0000.0001) >  GM_Scrit           = 4.D-3,
(PID.TID 0000.0001) >  GM_Sd              = 1.D-3,
(PID.TID 0000.0001) >#  GM_Visbeck_alpha   = 1.5D-2,
(PID.TID 0000.0001) >  GM_Visbeck_alpha   = 0.,
(PID.TID 0000.0001) >  GM_Visbeck_length  = 2.D+5,
(PID.TID 0000.0001) >  GM_Visbeck_depth   = 1.D+3,
(PID.TID 0000.0001) >  GM_Visbeck_maxval_K= 2.5D+3,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) >
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  GM_READPARMS: finished reading data.gmredi
(PID.TID 0000.0001) AUTODIFF_READPARMS: opening data.autodiff
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.autodiff
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.autodiff"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># =========================
(PID.TID 0000.0001) ># pkg AUTODIFF parameters :
(PID.TID 0000.0001) ># =========================
(PID.TID 0000.0001) >#  inAdExact :: get an exact adjoint (no approximation) (def=.True.)
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > &AUTODIFF_PARM01
(PID.TID 0000.0001) ># inAdExact = .FALSE.,
(PID.TID 0000.0001) ># useKPPinAdMode = .FALSE.,
(PID.TID 0000.0001) ># useGMRediInAdMode = .FALSE.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001) AUTODIFF_READPARMS: finished reading data.autodiff
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) // AUTODIFF parameters :
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) inAdExact = /* get an exact adjoint (no approximation) */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useApproxAdvectionInAdMode = /* approximate AD-advection */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dFullAdjoint = /* use full hand written cg2d adjoint (no approximation) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useKPPinAdMode = /* use KPP in adjoint mode */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useGMRediInAdMode = /* use GMRedi in adjoint mode */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useSEAICEinAdMode = /* use SEAICE in adjoint mode */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useGGL90inAdMode = /* use GGL90 in adjoint mode */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useSALT_PLUMEinAdMode = /* use SALT_PLUME in adjoint mode */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dumpAdVarExch = /* control adexch before dumpinp */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) mon_AdVarExch = /* control adexch before monitor */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscFacInFw = /* viscosity factor for forward model */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscFacInAd = /* viscosity factor for adjoint */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SIregFacInAd = /* sea ice factor for adjoint model */
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SIregFacInFw = /* sea ice factor for forward model */
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) 
(PID.TID 0000.0001) OPTIM_READPARMS: opening data.optim
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.optim
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.optim"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># ********************************
(PID.TID 0000.0001) ># Off-line optimization parameters
(PID.TID 0000.0001) ># ********************************
(PID.TID 0000.0001) > &OPTIM
(PID.TID 0000.0001) > optimcycle=0,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001) OPTIM_READPARMS: finished reading data.optim
(PID.TID 0000.0001) CTRL_READPARMS: opening data.ctrl
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.ctrl
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.ctrl"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># *********************
(PID.TID 0000.0001) ># ECCO controlvariables
(PID.TID 0000.0001) ># *********************
(PID.TID 0000.0001) > &CTRL_NML
(PID.TID 0000.0001) ># doSinglePrecTapelev=.TRUE.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># *********************
(PID.TID 0000.0001) ># names for ctrl_pack/unpack
(PID.TID 0000.0001) ># *********************
(PID.TID 0000.0001) > &CTRL_PACKNAMES
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># *********************
(PID.TID 0000.0001) ># names for CTRL_GENARR, CTRL_GENTIM
(PID.TID 0000.0001) ># *********************
(PID.TID 0000.0001) > &CTRL_NML_GENARR
(PID.TID 0000.0001) > xx_genarr3d_file(1)       = 'xx_theta',
(PID.TID 0000.0001) > xx_genarr3d_weight(1)     = 'ones_64b.bin',
(PID.TID 0000.0001) > xx_genarr3d_bounds(1:5,1) = -2.,-1.9,39.,40.,5.,
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > xx_genarr3d_file(2)       = 'xx_salt',
(PID.TID 0000.0001) > xx_genarr3d_weight(2)     = 'ones_64b.bin',
(PID.TID 0000.0001) > xx_genarr3d_bounds(1:5,2) = 29.,29.5,40.5,41.,5.,
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001) CTRL_READPARMS: finished reading data.ctrl
(PID.TID 0000.0001) read-write ctrl files from current run directory
(PID.TID 0000.0001) COST_READPARMS: opening data.cost
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.cost
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.cost"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># ******************
(PID.TID 0000.0001) ># cost function
(PID.TID 0000.0001) ># ******************
(PID.TID 0000.0001) > &COST_NML
(PID.TID 0000.0001) >  mult_atl = 1.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001) COST_READPARMS: finished reading data.cost
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // cost configuration  >>> START <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) lastinterval =   /* cost interval over which to average ( s ). */
(PID.TID 0000.0001)                 2.592000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cost_mask_file = /* file name of cost mask file */
(PID.TID 0000.0001)               ''
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // cost configuration  >>> END <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) GRDCHK_READPARMS: opening data.grdchk
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.grdchk
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.grdchk"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># *******************
(PID.TID 0000.0001) ># ECCO gradient check
(PID.TID 0000.0001) ># *******************
(PID.TID 0000.0001) > &GRDCHK_NML
(PID.TID 0000.0001) > grdchk_eps       = 1.d-5,
(PID.TID 0000.0001) ># nbeg             = 4,
(PID.TID 0000.0001) > iGloPos          = 4,
(PID.TID 0000.0001) > jGloPos          = 8,
(PID.TID 0000.0001) > kGloPos          = 1,
(PID.TID 0000.0001) > nstep            = 1,
(PID.TID 0000.0001) > nend             = 4,
(PID.TID 0000.0001) > grdchkvarname    = "xx_theta",
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001) GRDCHK_READPARMS: finished reading data.grdchk
(PID.TID 0000.0001)  DIAGNOSTICS_READPARMS: opening data.diagnostics
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.diagnostics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.diagnostics"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Diagnostic Package Choices
(PID.TID 0000.0001) >#--------------------
(PID.TID 0000.0001) >#  dumpAtLast (logical): always write output at the end of simulation (default=F)
(PID.TID 0000.0001) >#  diag_mnc   (logical): write to NetCDF files (default=useMNC)
(PID.TID 0000.0001) >#--for each output-stream:
(PID.TID 0000.0001) >#  fileName(n) : prefix of the output file name (max 80c long) for outp.stream n
(PID.TID 0000.0001) >#  frequency(n):< 0 : write snap-shot output every |frequency| seconds
(PID.TID 0000.0001) >#               > 0 : write time-average output every frequency seconds
(PID.TID 0000.0001) >#  timePhase(n)     : write at time = timePhase + multiple of |frequency|
(PID.TID 0000.0001) >#    averagingFreq  : frequency (in s) for periodic averaging interval
(PID.TID 0000.0001) >#    averagingPhase : phase     (in s) for periodic averaging interval
(PID.TID 0000.0001) >#    repeatCycle    : number of averaging intervals in 1 cycle
(PID.TID 0000.0001) >#  levels(:,n) : list of levels to write to file (Notes: declared as REAL)
(PID.TID 0000.0001) >#                when this entry is missing, select all common levels of this list
(PID.TID 0000.0001) >#  fields(:,n) : list of selected diagnostics fields (8.c) in outp.stream n
(PID.TID 0000.0001) >#                (see "available_diagnostics.log" file for the full list of diags)
(PID.TID 0000.0001) >#  missing_value(n) : missing value for real-type fields in output file "n"
(PID.TID 0000.0001) >#  fileFlags(n)     : specific code (8c string) for output file "n"
(PID.TID 0000.0001) >#--------------------
(PID.TID 0000.0001) > &DIAGNOSTICS_LIST
(PID.TID 0000.0001) >  fields(1:3,1)  = 'ETAN    ','TRELAX  ','MXLDEPTH',
(PID.TID 0000.0001) >  fileName(1) = 'surfDiag',
(PID.TID 0000.0001) >  frequency(1) = 432000.,
(PID.TID 0000.0001) >
(PID.TID 0000.0001) >  fields(1:12,2)  = 'THETA   ','PHIHYD  ',
(PID.TID 0000.0001) >                   'UVEL    ','VVEL    ','WVEL    ',
(PID.TID 0000.0001) >                   'THETASQ', 'UVELSQ', 'VVELSQ', 'WVELSQ',
(PID.TID 0000.0001) >                   'PhiVEL', 'PsiVEL', 'momKE'
(PID.TID 0000.0001) ># did not specify levels => all levels are selected
(PID.TID 0000.0001) >   fileName(2) = 'dynDiag',
(PID.TID 0000.0001) >  frequency(2) = 432000.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) >#---------------------------------------
(PID.TID 0000.0001) >#- Eddy-permitting run, diagnose vorticity (not computed when using uniform Ah)
(PID.TID 0000.0001) ># fields(1:2,3) = 'momVort3', 'momHDiv ',
(PID.TID 0000.0001) ># frequency(3) = 86400.,
(PID.TID 0000.0001) ># filename(3) = 'state_vort',
(PID.TID 0000.0001) ># &
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># GM diagnostics
(PID.TID 0000.0001) >#- Note: comment out this diagnostics list below if useGMRedi=.FALSE.
(PID.TID 0000.0001) >#        or you will get warnings messages in STDERR
(PID.TID 0000.0001) >  fields(1:2,3) = 'GM_PsiX ', 'GM_PsiY ',
(PID.TID 0000.0001) >  frequency(3) = 432000.,
(PID.TID 0000.0001) >  filename(3) = 'GM_diags',
(PID.TID 0000.0001) >
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Parameter for Diagnostics of per level statistics:
(PID.TID 0000.0001) >#--------------------
(PID.TID 0000.0001) >#  diagSt_mnc (logical): write stat-diags to NetCDF files (default=diag_mnc)
(PID.TID 0000.0001) >#  diagSt_regMaskFile : file containing the region-mask to read-in
(PID.TID 0000.0001) >#  nSetRegMskFile   : number of region-mask sets within the region-mask file
(PID.TID 0000.0001) >#  set_regMask(i)   : region-mask set-index that identifies the region "i"
(PID.TID 0000.0001) >#  val_regMask(i)   : region "i" identifier value in the region mask
(PID.TID 0000.0001) >#--for each output-stream:
(PID.TID 0000.0001) >#  stat_fName(n) : prefix of the output file name (max 80c long) for outp.stream n
(PID.TID 0000.0001) >#  stat_freq(n):< 0 : write snap-shot output every |stat_freq| seconds
(PID.TID 0000.0001) >#               > 0 : write time-average output every stat_freq seconds
(PID.TID 0000.0001) >#  stat_phase(n)    : write at time = stat_phase + multiple of |stat_freq|
(PID.TID 0000.0001) >#  stat_region(:,n) : list of "regions" (default: 1 region only=global)
(PID.TID 0000.0001) >#  stat_fields(:,n) : list of selected diagnostics fields (8.c) in outp.stream n
(PID.TID 0000.0001) >#                (see "available_diagnostics.log" file for the full list of diags)
(PID.TID 0000.0001) >#--------------------
(PID.TID 0000.0001) > &DIAG_STATIS_PARMS
(PID.TID 0000.0001) >  stat_fields(1:2,1) = 'THETA   ','TRELAX  ',
(PID.TID 0000.0001) >  stat_fName(1) = 'dynStDiag',
(PID.TID 0000.0001) >  stat_freq(1) = 432000.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001) S/R DIAGNOSTICS_READPARMS, read namelist "diagnostics_list": start
(PID.TID 0000.0001) S/R DIAGNOSTICS_READPARMS, read namelist "diagnostics_list": OK
(PID.TID 0000.0001) S/R DIAGNOSTICS_READPARMS, read namelist "DIAG_STATIS_PARMS": start
(PID.TID 0000.0001) S/R DIAGNOSTICS_READPARMS, read namelist "DIAG_STATIS_PARMS": OK
(PID.TID 0000.0001) -----------------------------------------------------
(PID.TID 0000.0001)  DIAGNOSTICS_READPARMS: global parameter summary:
(PID.TID 0000.0001)  diag_dBugLevel = /* level of printed debug messages */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  dumpAtLast = /* always write time-ave diags at the end */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  diag_mnc =   /* write NetCDF output files */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  useMissingValue = /* put MissingValue where mask = 0 */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  diagCG_maxIters = /* max number of iters in diag_cg2d */
(PID.TID 0000.0001)                     100
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  diagCG_resTarget = /* residual target for diag_cg2d */
(PID.TID 0000.0001)                 1.000000000000000E-05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  diagCG_pcOffDFac = /* preconditioner off-diagonal factor */
(PID.TID 0000.0001)                 9.611687812379854E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) -----------------------------------------------------
(PID.TID 0000.0001)  DIAGNOSTICS_READPARMS: active diagnostics summary:
(PID.TID 0000.0001) -----------------------------------------------------
(PID.TID 0000.0001) Creating Output Stream: surfDiag
(PID.TID 0000.0001) Output Frequency:     432000.000000 ; Phase:           0.000000
(PID.TID 0000.0001)  Averaging Freq.:     432000.000000 , Phase:           0.000000 , Cycle:   1
(PID.TID 0000.0001)  missing value: -9.990000000000E+02
(PID.TID 0000.0001)  Levels:    will be set later
(PID.TID 0000.0001)  Fields:    ETAN     TRELAX   MXLDEPTH
(PID.TID 0000.0001) Creating Output Stream: dynDiag
(PID.TID 0000.0001) Output Frequency:     432000.000000 ; Phase:           0.000000
(PID.TID 0000.0001)  Averaging Freq.:     432000.000000 , Phase:           0.000000 , Cycle:   1
(PID.TID 0000.0001)  missing value: -9.990000000000E+02
(PID.TID 0000.0001)  Levels:    will be set later
(PID.TID 0000.0001)  Fields:    THETA    PHIHYD   UVEL     VVEL     WVEL     THETASQ  UVELSQ   VVELSQ   WVELSQ   PhiVEL
(PID.TID 0000.0001)  Fields:    PsiVEL   momKE
(PID.TID 0000.0001) -----------------------------------------------------
(PID.TID 0000.0001)  DIAGNOSTICS_READPARMS: statistics diags. summary:
(PID.TID 0000.0001) Creating Stats. Output Stream: dynStDiag
(PID.TID 0000.0001) Output Frequency:     432000.000000 ; Phase:           0.000000
(PID.TID 0000.0001)  Regions:   0
(PID.TID 0000.0001)  Fields:    THETA    TRELAX
(PID.TID 0000.0001) -----------------------------------------------------
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SET_PARMS: done
(PID.TID 0000.0001) Enter INI_VERTICAL_GRID: setInterFDr=    T ; setCenterDr=    F
(PID.TID 0000.0001) %MON XC_max                       =   6.0500000000000E+01
(PID.TID 0000.0001) %MON XC_min                       =  -5.0000000000000E-01
(PID.TID 0000.0001) %MON XC_mean                      =   3.0000000000000E+01
(PID.TID 0000.0001) %MON XC_sd                        =   1.7895530168173E+01
(PID.TID 0000.0001) %MON XG_max                       =   6.0000000000000E+01
(PID.TID 0000.0001) %MON XG_min                       =  -1.0000000000000E+00
(PID.TID 0000.0001) %MON XG_mean                      =   2.9500000000000E+01
(PID.TID 0000.0001) %MON XG_sd                        =   1.7895530168173E+01
(PID.TID 0000.0001) %MON DXC_max                      =   1.0763620848898E+05
(PID.TID 0000.0001) %MON DXC_min                      =   2.7836616228646E+04
(PID.TID 0000.0001) %MON DXC_mean                     =   7.4835486957243E+04
(PID.TID 0000.0001) %MON DXC_sd                       =   2.4080389995677E+04
(PID.TID 0000.0001) %MON DXF_max                      =   1.0763620848898E+05
(PID.TID 0000.0001) %MON DXF_min                      =   2.7836616228646E+04
(PID.TID 0000.0001) %MON DXF_mean                     =   7.4835486957243E+04
(PID.TID 0000.0001) %MON DXF_sd                       =   2.4080389995677E+04
(PID.TID 0000.0001) %MON DXG_max                      =   1.0787502725165E+05
(PID.TID 0000.0001) %MON DXG_min                      =   2.8774847489886E+04
(PID.TID 0000.0001) %MON DXG_mean                     =   7.5485691984677E+04
(PID.TID 0000.0001) %MON DXG_sd                       =   2.3877575243700E+04
(PID.TID 0000.0001) %MON DXV_max                      =   1.0787502725165E+05
(PID.TID 0000.0001) %MON DXV_min                      =   2.8774847489886E+04
(PID.TID 0000.0001) %MON DXV_mean                     =   7.5485691984677E+04
(PID.TID 0000.0001) %MON DXV_sd                       =   2.3877575243700E+04
(PID.TID 0000.0001) %MON YC_max                       =   7.5500000000000E+01
(PID.TID 0000.0001) %MON YC_min                       =   1.4500000000000E+01
(PID.TID 0000.0001) %MON YC_mean                      =   4.5000000000000E+01
(PID.TID 0000.0001) %MON YC_sd                        =   1.7895530168173E+01
(PID.TID 0000.0001) %MON YG_max                       =   7.5000000000000E+01
(PID.TID 0000.0001) %MON YG_min                       =   1.4000000000000E+01
(PID.TID 0000.0001) %MON YG_mean                      =   4.4500000000000E+01
(PID.TID 0000.0001) %MON YG_sd                        =   1.7895530168173E+01
(PID.TID 0000.0001) %MON DYC_max                      =   1.1117747335204E+05
(PID.TID 0000.0001) %MON DYC_min                      =   1.1117747335204E+05
(PID.TID 0000.0001) %MON DYC_mean                     =   1.1117747335203E+05
(PID.TID 0000.0001) %MON DYC_sd                       =   6.1554601415992E-09
(PID.TID 0000.0001) %MON DYF_max                      =   1.1117747335204E+05
(PID.TID 0000.0001) %MON DYF_min                      =   1.1117747335204E+05
(PID.TID 0000.0001) %MON DYF_mean                     =   1.1117747335203E+05
(PID.TID 0000.0001) %MON DYF_sd                       =   6.1554601415992E-09
(PID.TID 0000.0001) %MON DYG_max                      =   1.1117747335204E+05
(PID.TID 0000.0001) %MON DYG_min                      =   1.1117747335204E+05
(PID.TID 0000.0001) %MON DYG_mean                     =   1.1117747335203E+05
(PID.TID 0000.0001) %MON DYG_sd                       =   6.1554601415992E-09
(PID.TID 0000.0001) %MON DYU_max                      =   1.1117747335204E+05
(PID.TID 0000.0001) %MON DYU_min                      =   1.1117747335204E+05
(PID.TID 0000.0001) %MON DYU_mean                     =   1.1117747335203E+05
(PID.TID 0000.0001) %MON DYU_sd                       =   6.1554601415992E-09
(PID.TID 0000.0001) %MON RA_max                       =   1.1966569815247E+10
(PID.TID 0000.0001) %MON RA_min                       =   3.0947653786454E+09
(PID.TID 0000.0001) %MON RA_mean                      =   8.3199147564140E+09
(PID.TID 0000.0001) %MON RA_sd                        =   2.6771629371464E+09
(PID.TID 0000.0001) %MON RAW_max                      =   1.1966569815247E+10
(PID.TID 0000.0001) %MON RAW_min                      =   3.0947653786454E+09
(PID.TID 0000.0001) %MON RAW_mean                     =   8.3199147564140E+09
(PID.TID 0000.0001) %MON RAW_sd                       =   2.6771629371464E+09
(PID.TID 0000.0001) %MON RAS_max                      =   1.1993120744872E+10
(PID.TID 0000.0001) %MON RAS_min                      =   3.1990742357492E+09
(PID.TID 0000.0001) %MON RAS_mean                     =   8.3922019910189E+09
(PID.TID 0000.0001) %MON RAS_sd                       =   2.6546147916555E+09
(PID.TID 0000.0001) %MON RAZ_max                      =   1.1993120744872E+10
(PID.TID 0000.0001) %MON RAZ_min                      =   3.1990742357492E+09
(PID.TID 0000.0001) %MON RAZ_mean                     =   8.3922019910189E+09
(PID.TID 0000.0001) %MON RAZ_sd                       =   2.6546147916555E+09
(PID.TID 0000.0001) %MON AngleCS_max                  =   1.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_min                  =   1.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_mean                 =   1.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_sd                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_max                  =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_min                  =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_mean                 =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_sd                   =   0.0000000000000E+00
(PID.TID 0000.0001) GAD_INIT_FIXED: GAD_OlMinSize=  2  0  1
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) // GAD parameters :
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) tempAdvScheme =   /* Temp. Horiz.Advection scheme selector */
(PID.TID 0000.0001)                      33
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempVertAdvScheme =   /* Temp. Vert. Advection scheme selector */
(PID.TID 0000.0001)                      33
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempMultiDimAdvec =   /* use Muti-Dim Advec method for Temp */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempSOM_Advection = /* use 2nd Order Moment Advection for Temp */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforthGt = /* apply Adams-Bashforth extrapolation on Gt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforth_T = /* apply Adams-Bashforth extrapolation on Temp */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltAdvScheme =   /* Salt. Horiz.advection scheme selector */
(PID.TID 0000.0001)                      33
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltVertAdvScheme =   /* Salt. Vert. Advection scheme selector */
(PID.TID 0000.0001)                      33
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltMultiDimAdvec =   /* use Muti-Dim Advec method for Salt */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltSOM_Advection = /* use 2nd Order Moment Advection for Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforthGs = /* apply Adams-Bashforth extrapolation on Gs */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforth_S = /* apply Adams-Bashforth extrapolation on Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) CTRL_INIT_FIXED: ivar=   2 = number of CTRL variables defined
(PID.TID 0000.0001) 
(PID.TID 0000.0001) ctrl-wet 1:    nvarlength =       164576
(PID.TID 0000.0001) ctrl-wet 2: surface wet C =         2892
(PID.TID 0000.0001) ctrl-wet 3: surface wet W =         2832
(PID.TID 0000.0001) ctrl-wet 4: surface wet S =         2832
(PID.TID 0000.0001) ctrl-wet 5: 3D wet points =        82288
(PID.TID 0000.0001) ctrl-wet 6: no recs for ivar =     1           1
(PID.TID 0000.0001) ctrl-wet 6: no recs for ivar =     2           1
(PID.TID 0000.0001) ctrl-wet 6: no recs for ivar =     3           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for ivar =     4           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for ivar =     5           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for ivar =     6           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for ivar =     7           0
(PID.TID 0000.0001) ctrl-wet -------------------------------------------------
(PID.TID 0000.0001) ctrl-wet 13: global nvarlength for Nr =   31      164576
(PID.TID 0000.0001) ctrl-wet -------------------------------------------------
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=    1        2892        2832        2832
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=    2        2892        2832        2832
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=    3        2892        2832        2832
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=    4        2892        2832        2832
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=    5        2892        2832        2832
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=    6        2892        2832        2832
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=    7        2892        2832        2832
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=    8        2676        2618        2618
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=    9        2660        2602        2602
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=   10        2644        2586        2586
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=   11        2632        2574        2574
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=   12        2632        2574        2574
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=   13        2624        2566        2566
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=   14        2608        2550        2550
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=   15        2608        2550        2550
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=   16        2600        2542        2542
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=   17        2600        2542        2542
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=   18        2600        2542        2542
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=   19        2584        2526        2526
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=   20        2584        2526        2526
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=   21        2584        2526        2526
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=   22        2584        2526        2526
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=   23        2576        2518        2518
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=   24        2576        2518        2518
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=   25        2568        2510        2510
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=   26        2536        2480        2480
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=   27        2528        2472        2472
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=   28        2528        2472        2472
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=   29        2512        2456        2456
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=   30        2504        2448        2448
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W k=   31        2496        2440        2440
(PID.TID 0000.0001) ctrl-wet -------------------------------------------------
(PID.TID 0000.0001) ctrl_init_wet: no. of control variables:            2
(PID.TID 0000.0001) ctrl_init_wet: control vector length:          164576
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // control vector configuration  >>> START <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  Total number of ocean points per tile:
(PID.TID 0000.0001)  --------------------------------------
(PID.TID 0000.0001)  sNx*sNy*Nr =   119164
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  Number of ocean points per tile:
(PID.TID 0000.0001)  --------------------------------
(PID.TID 0000.0001)  bi,bj,#(c/s/w): 001 001   82288   80488   80488
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  -> 3d control, genarr3d no.  1 is in use
(PID.TID 0000.0001)       file       = xx_theta
(PID.TID 0000.0001)       ncvartype  = Arr3D
(PID.TID 0000.0001)       index      =     1  (use this for pkg/grdchk)
(PID.TID 0000.0001)       ncvarindex =     1
(PID.TID 0000.0001)       weight     = ones_64b.bin
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  -> 3d control, genarr3d no.  2 is in use
(PID.TID 0000.0001)       file       = xx_salt
(PID.TID 0000.0001)       ncvartype  = Arr3D
(PID.TID 0000.0001)       index      =     2  (use this for pkg/grdchk)
(PID.TID 0000.0001)       ncvarindex =     2
(PID.TID 0000.0001)       weight     = ones_64b.bin
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // control vector configuration  >>> END <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) ------------------------------------------------------------
(PID.TID 0000.0001) DIAGNOSTICS_SET_LEVELS: done
(PID.TID 0000.0001)  Total Nb of available Diagnostics: ndiagt=   230
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #    23 ETAN
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #    89 TRELAX
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #    76 MXLDEPTH
(PID.TID 0000.0001) SETDIAG: Allocate 31 x  1 Levels for Diagnostic #    26 THETA
(PID.TID 0000.0001) SETDIAG: Allocate 31 x  1 Levels for Diagnostic #    71 PHIHYD
(PID.TID 0000.0001) SETDIAG: Allocate 31 x  1 Levels for Diagnostic #    30 UVEL
(PID.TID 0000.0001) SETDIAG: Allocate 31 x  1 Levels for Diagnostic #    31 VVEL
(PID.TID 0000.0001) SETDIAG: Allocate 31 x  1 Levels for Diagnostic #    32 WVEL
(PID.TID 0000.0001) SETDIAG: Allocate 31 x  1 Levels for Diagnostic #    33 THETASQ
(PID.TID 0000.0001) SETDIAG: Allocate 31 x  1 Levels for Diagnostic #    36 UVELSQ
(PID.TID 0000.0001) SETDIAG: Allocate 31 x  1 Levels for Diagnostic #    37 VVELSQ
(PID.TID 0000.0001) SETDIAG: Allocate 31 x  1 Levels for Diagnostic #    38 WVELSQ
(PID.TID 0000.0001) SETDIAG: Diag #    48 PhiVEL   processed from Diag #    45 UVELMASS
(PID.TID 0000.0001) SETDIAG: Allocate 31 x  1 Levels for Diagnostic #    45 UVELMASS
(PID.TID 0000.0001) SETDIAG: Allocate 31 x  1 Levels for Mate Diag. #    46 VVELMASS
(PID.TID 0000.0001) SETDIAG: Diag #    49 PsiVEL   processed from Diag #    48 PhiVEL
(PID.TID 0000.0001) - NOTE - SETDIAG:  Diagnostic  #    48 PhiVEL   is already set
(PID.TID 0000.0001) SETDIAG: Allocate 31 x  1 Levels for Diagnostic #   168 momKE
(PID.TID 0000.0001)   space allocated for all diagnostics:     375 levels
(PID.TID 0000.0001)   set mate pointer for diag #    30  UVEL     , Parms: UUR     MR , mate:    31
(PID.TID 0000.0001)   set mate pointer for diag #    31  VVEL     , Parms: VVR     MR , mate:    30
(PID.TID 0000.0001)   set mate pointer for diag #    36  UVELSQ   , Parms: UURP    MR , mate:    37
(PID.TID 0000.0001)   set mate pointer for diag #    37  VVELSQ   , Parms: VVRP    MR , mate:    36
(PID.TID 0000.0001)   set mate pointer for diag #    45  UVELMASS , Parms: UUr     MR , mate:    46
(PID.TID 0000.0001)   set mate pointer for diag #    46  VVELMASS , Parms: VVr     MR , mate:    45
(PID.TID 0000.0001) DIAGNOSTICS_SET_POINTERS: Set levels for Outp.Stream: surfDiag
(PID.TID 0000.0001)  Levels:       1.
(PID.TID 0000.0001) DIAGNOSTICS_SET_POINTERS: Set levels for Outp.Stream: dynDiag
(PID.TID 0000.0001)  Levels:       1.   2.   3.   4.   5.   6.   7.   8.   9.  10.  11.  12.  13.  14.  15.  16.  17.  18.  19.  20.
(PID.TID 0000.0001)  Levels:      21.  22.  23.  24.  25.  26.  27.  28.  29.  30.  31.
(PID.TID 0000.0001) DIAGNOSTICS_SET_POINTERS: done, use     375 levels (numDiags =     620 )
(PID.TID 0000.0001) ------------------------------------------------------------
(PID.TID 0000.0001) DIAGSTATS_SET_REGIONS: define no region
(PID.TID 0000.0001) ------------------------------------------------------------
(PID.TID 0000.0001) SETDIAG: Allocate 31 Levels for Stats-Diag #    26 THETA
(PID.TID 0000.0001) SETDIAG: Allocate  1 Levels for Stats-Diag #    89 TRELAX
(PID.TID 0000.0001)   space allocated for all stats-diags:      32 levels
(PID.TID 0000.0001) DIAGSTATS_SET_POINTERS: done, use      32 levels (diagSt_size=     310 )
(PID.TID 0000.0001) ------------------------------------------------------------
(PID.TID 0000.0001) %MON fCori_max                    =   1.4119704352640E-04
(PID.TID 0000.0001) %MON fCori_min                    =   3.6516038314991E-05
(PID.TID 0000.0001) %MON fCori_mean                   =   9.8169098090287E-05
(PID.TID 0000.0001) %MON fCori_sd                     =   3.1588625445689E-05
(PID.TID 0000.0001) %MON fCoriG_max                   =   1.4087300867102E-04
(PID.TID 0000.0001) %MON fCoriG_min                   =   3.5282486883545E-05
(PID.TID 0000.0001) %MON fCoriG_mean                  =   9.7308683992512E-05
(PID.TID 0000.0001) %MON fCoriG_sd                    =   3.1852455422807E-05
(PID.TID 0000.0001) %MON fCoriCos_max                 =   1.4119704352640E-04
(PID.TID 0000.0001) %MON fCoriCos_min                 =   3.6516038314991E-05
(PID.TID 0000.0001) %MON fCoriCos_mean                =   9.8169098090291E-05
(PID.TID 0000.0001) %MON fCoriCos_sd                  =   3.1588625445688E-05
(PID.TID 0000.0001) INI_CG2D: CG2D normalisation factor =  8.6024439359483882E-05
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model configuration
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // "Physical" paramters ( PARM01 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) buoyancyRelation = /* Type of relation to get Buoyancy */
(PID.TID 0000.0001)               'OCEANIC'
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fluidIsAir   =  /* fluid major constituent is Air */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fluidIsWater =  /* fluid major constituent is Water */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingPCoords =  /* use p (or p*) vertical coordinate */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingZCoords =  /* use z (or z*) vertical coordinate */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tRef =   /* Reference temperature profile ( oC or K ) */
(PID.TID 0000.0001)     3 @  2.300000000000000E+01,             /* K =  1:  3 */
(PID.TID 0000.0001)                 2.200000000000000E+01,      /* K =  4 */
(PID.TID 0000.0001)                 2.100000000000000E+01,      /* K =  5 */
(PID.TID 0000.0001)                 2.000000000000000E+01,      /* K =  6 */
(PID.TID 0000.0001)                 1.900000000000000E+01,      /* K =  7 */
(PID.TID 0000.0001)                 1.700000000000000E+01,      /* K =  8 */
(PID.TID 0000.0001)                 1.600000000000000E+01,      /* K =  9 */
(PID.TID 0000.0001)                 1.500000000000000E+01,      /* K = 10 */
(PID.TID 0000.0001)                 1.400000000000000E+01,      /* K = 11 */
(PID.TID 0000.0001)                 1.200000000000000E+01,      /* K = 12 */
(PID.TID 0000.0001)                 1.100000000000000E+01,      /* K = 13 */
(PID.TID 0000.0001)                 1.000000000000000E+01,      /* K = 14 */
(PID.TID 0000.0001)                 9.000000000000000E+00,      /* K = 15 */
(PID.TID 0000.0001)                 8.000000000000000E+00,      /* K = 16 */
(PID.TID 0000.0001)                 7.000000000000000E+00,      /* K = 17 */
(PID.TID 0000.0001)     2 @  6.000000000000000E+00,             /* K = 18: 19 */
(PID.TID 0000.0001)     2 @  5.000000000000000E+00,             /* K = 20: 21 */
(PID.TID 0000.0001)     2 @  4.000000000000000E+00,             /* K = 22: 23 */
(PID.TID 0000.0001)     2 @  3.000000000000000E+00,             /* K = 24: 25 */
(PID.TID 0000.0001)     2 @  2.000000000000000E+00,             /* K = 26: 27 */
(PID.TID 0000.0001)     4 @  1.000000000000000E+00              /* K = 28: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sRef =   /* Reference salinity profile ( g/kg ) */
(PID.TID 0000.0001)    31 @  3.450000000000000E+01              /* K =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoRef =   /* Density vertical profile from (Ref,sRef)( kg/m^3 ) */
(PID.TID 0000.0001)                 1.023577572005954E+03,      /* K =  1 */
(PID.TID 0000.0001)                 1.023623549263207E+03,      /* K =  2 */
(PID.TID 0000.0001)                 1.023675613276342E+03,      /* K =  3 */
(PID.TID 0000.0001)                 1.024018569869809E+03,      /* K =  4 */
(PID.TID 0000.0001)                 1.024361629697283E+03,      /* K =  5 */
(PID.TID 0000.0001)                 1.024705804444866E+03,      /* K =  6 */
(PID.TID 0000.0001)                 1.025052271508737E+03,      /* K =  7 */
(PID.TID 0000.0001)                 1.025645661964391E+03,      /* K =  8 */
(PID.TID 0000.0001)                 1.025992592411289E+03,      /* K =  9 */
(PID.TID 0000.0001)                 1.026346361931734E+03,      /* K = 10 */
(PID.TID 0000.0001)                 1.026709001157942E+03,      /* K = 11 */
(PID.TID 0000.0001)                 1.027282846338663E+03,      /* K = 12 */
(PID.TID 0000.0001)                 1.027661721921800E+03,      /* K = 13 */
(PID.TID 0000.0001)                 1.028057401528922E+03,      /* K = 14 */
(PID.TID 0000.0001)                 1.028473375249018E+03,      /* K = 15 */
(PID.TID 0000.0001)                 1.028913616650366E+03,      /* K = 16 */
(PID.TID 0000.0001)                 1.029382636686713E+03,      /* K = 17 */
(PID.TID 0000.0001)                 1.029885606645691E+03,      /* K = 18 */
(PID.TID 0000.0001)                 1.030290072892818E+03,      /* K = 19 */
(PID.TID 0000.0001)                 1.030888016683447E+03,      /* K = 20 */
(PID.TID 0000.0001)                 1.031407239662327E+03,      /* K = 21 */
(PID.TID 0000.0001)                 1.032129670505891E+03,      /* K = 22 */
(PID.TID 0000.0001)                 1.032795424975157E+03,      /* K = 23 */
(PID.TID 0000.0001)                 1.033679764328331E+03,      /* K = 24 */
(PID.TID 0000.0001)                 1.034532122852911E+03,      /* K = 25 */
(PID.TID 0000.0001)                 1.035625595542812E+03,      /* K = 26 */
(PID.TID 0000.0001)                 1.036714659799745E+03,      /* K = 27 */
(PID.TID 0000.0001)                 1.038076228708180E+03,      /* K = 28 */
(PID.TID 0000.0001)                 1.039464021739831E+03,      /* K = 29 */
(PID.TID 0000.0001)                 1.041023891510315E+03,      /* K = 30 */
(PID.TID 0000.0001)                 1.042775365441382E+03       /* K = 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dBdrRef = /* Vertical grad. of reference buoyancy [(m/s/r)^2] */
(PID.TID 0000.0001)     3 @  0.000000000000000E+00,             /* K =  1:  3 */
(PID.TID 0000.0001)                 1.981426362570402E-04,      /* K =  4 */
(PID.TID 0000.0001)                 1.701092979003860E-04,      /* K =  5 */
(PID.TID 0000.0001)                 1.458715085243869E-04,      /* K =  6 */
(PID.TID 0000.0001)                 1.249125719785483E-04,      /* K =  7 */
(PID.TID 0000.0001)                 2.099649801856568E-04,      /* K =  8 */
(PID.TID 0000.0001)                 8.792303423357168E-05,      /* K =  9 */
(PID.TID 0000.0001)                 7.484001221613001E-05,      /* K = 10 */
(PID.TID 0000.0001)                 6.358666111189054E-05,      /* K = 11 */
(PID.TID 0000.0001)                 1.054006897248987E-04,      /* K = 12 */
(PID.TID 0000.0001)                 4.344210601996791E-05,      /* K = 13 */
(PID.TID 0000.0001)                 3.656879805711143E-05,      /* K = 14 */
(PID.TID 0000.0001)                 3.069973543024333E-05,      /* K = 15 */
(PID.TID 0000.0001)                 2.570018494684971E-05,      /* K = 16 */
(PID.TID 0000.0001)                 2.145254771255852E-05,      /* K = 17 */
(PID.TID 0000.0001)                 1.785089392823324E-05,      /* K = 18 */
(PID.TID 0000.0001)                 0.000000000000000E+00,      /* K = 19 */
(PID.TID 0000.0001)                 1.329610664296088E-05,      /* K = 20 */
(PID.TID 0000.0001)                 0.000000000000000E+00,      /* K = 21 */
(PID.TID 0000.0001)                 9.975032051112675E-06,      /* K = 22 */
(PID.TID 0000.0001)                 0.000000000000000E+00,      /* K = 23 */
(PID.TID 0000.0001)                 7.572079405734685E-06,      /* K = 24 */
(PID.TID 0000.0001)                 0.000000000000000E+00,      /* K = 25 */
(PID.TID 0000.0001)                 5.849104430055921E-06,      /* K = 26 */
(PID.TID 0000.0001)                 0.000000000000000E+00,      /* K = 27 */
(PID.TID 0000.0001)                 4.627878774813460E-06,      /* K = 28 */
(PID.TID 0000.0001)     3 @  0.000000000000000E+00              /* K = 29: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useStrainTensionVisc= /* Use StrainTension Form of Viscous Operator */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useVariableVisc = /* Use variable horizontal viscosity */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useHarmonicVisc = /* Use harmonic horizontal viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useBiharmonicVisc= /* Use biharmonic horiz.  viscosity */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useSmag3D = /* Use isotropic 3-D Smagorinsky viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscAh  =   /* Lateral harmonic viscosity ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscAhMax = /* Maximum lateral harmonic viscosity ( m^2/s ) */
(PID.TID 0000.0001)                 1.000000000000000E+21
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscAhGrid = /* Grid dependent lateral harmonic viscosity ( non-dim. ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useFullLeith = /* Use Full Form of Leith Viscosity on/off flag*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useAreaViscLength = /* Use area for visc length instead of geom. mean*/
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscC2leith = /* Leith harmonic visc. factor (on grad(vort),non-dim.) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscC2leithD = /* Leith harmonic viscosity factor (on grad(div),non-dim.)*/
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscC2LeithQG = /* QG Leith harmonic viscosity factor (non-dim.)*/
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscC2smag = /* Smagorinsky harmonic viscosity factor (non-dim.) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscA4  =   /* Lateral biharmonic viscosity ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscA4Max = /* Maximum biharmonic viscosity ( m^2/s ) */
(PID.TID 0000.0001)                 1.000000000000000E+21
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscA4Grid = /* Grid dependent biharmonic viscosity ( non-dim. ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscC4leith = /* Leith biharm viscosity factor (on grad(vort), non-dim.)*/
(PID.TID 0000.0001)                 2.150000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscC4leithD = /* Leith biharm viscosity factor (on grad(div), non-dim.) */
(PID.TID 0000.0001)                 2.150000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscC4Smag = /* Smagorinsky biharm viscosity factor (non-dim) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) no_slip_sides =  /* Viscous BCs: No-slip sides */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sideDragFactor = /* side-drag scaling factor (non-dim) */
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscArNr = /* vertical profile of vertical viscosity ( m^2/s )*/
(PID.TID 0000.0001)    31 @  0.000000000000000E+00              /* K =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) no_slip_bottom =  /* Viscous BCs: No-slip bottom */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomVisc_pCell = /* Partial-cell in bottom Visc. BC */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomDragLinear = /* linear bottom-drag coefficient ( m/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomDragQuadratic = /* quadratic bottom-drag coefficient (-) */
(PID.TID 0000.0001)                 2.100000000000000E-03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectBotDragQuadr = /* select quadratic bottom drag options */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKhT =   /* Laplacian diffusion of heat laterally ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffK4T =   /* Biharmonic diffusion of heat laterally ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKhS =   /* Laplacian diffusion of salt laterally ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffK4S =   /* Biharmonic diffusion of salt laterally ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrNrT = /* vertical profile of vertical diffusion of Temp ( m^2/s )*/
(PID.TID 0000.0001)    31 @  0.000000000000000E+00              /* K =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrNrS = /* vertical profile of vertical diffusion of Salt ( m^2/s )*/
(PID.TID 0000.0001)    31 @  0.000000000000000E+00              /* K =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79surf = /* Surface diffusion for Bryan and Lewis 79 ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79deep = /* Deep diffusion for Bryan and Lewis 1979 ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79scl = /* Depth scale for Bryan and Lewis 1979 ( m ) */
(PID.TID 0000.0001)                 2.000000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79Ho = /* Turning depth for Bryan and Lewis 1979 ( m ) */
(PID.TID 0000.0001)                -2.000000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ivdc_kappa = /* Implicit Vertical Diffusivity for Convection ( m^2/s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hMixCriteria=  /* Criteria for mixed-layer diagnostic */
(PID.TID 0000.0001)                -8.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dRhoSmall =  /* Parameter for mixed-layer diagnostic */
(PID.TID 0000.0001)                 1.000000000000000E-06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hMixSmooth=  /* Smoothing parameter for mixed-layer diagnostic */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) eosType =  /* Type of Equation of State */
(PID.TID 0000.0001)               'JMD95Z'
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) eosRefP0 = /* Reference atmospheric pressure for EOS ( Pa ) */
(PID.TID 0000.0001)                 1.013250000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectP_inEOS_Zc = /* select pressure to use in EOS (0,1,2,3) */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     0= -g*rhoConst*z ; 1= pRef (from tRef,sRef); 2= Hyd P ; 3= Hyd+NH P
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) surf_pRef = /* Surface reference pressure ( Pa ) */
(PID.TID 0000.0001)                 1.013250000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) HeatCapacity_Cp =  /* Specific heat capacity ( J/kg/K ) */
(PID.TID 0000.0001)                 3.994000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) celsius2K = /* 0 degree Celsius converted to Kelvin ( K ) */
(PID.TID 0000.0001)                 2.731500000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoConst  = /* Reference density (Boussinesq)  ( kg/m^3 ) */
(PID.TID 0000.0001)                 1.027500000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoFacC = /* normalized Reference density @ cell-Center (-) */
(PID.TID 0000.0001)    31 @  1.000000000000000E+00              /* K =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoFacF = /* normalized Reference density @ W-Interface (-) */
(PID.TID 0000.0001)    32 @  1.000000000000000E+00              /* K =  1: 32 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoConstFresh = /* Fresh-water reference density ( kg/m^3 ) */
(PID.TID 0000.0001)                 9.998000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravity =   /* Gravitational acceleration ( m/s^2 ) */
(PID.TID 0000.0001)                 9.810000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gBaro =   /* Barotropic gravity ( m/s^2 ) */
(PID.TID 0000.0001)                 9.810000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravFacC = /* gravity factor (vs surf.) @ cell-Center (-) */
(PID.TID 0000.0001)    31 @  1.000000000000000E+00              /* K =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravFacF = /* gravity factor (vs surf.) @ W-Interface (-) */
(PID.TID 0000.0001)    32 @  1.000000000000000E+00              /* K =  1: 32 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rotationPeriod =   /* Rotation Period ( s ) */
(PID.TID 0000.0001)                 8.616400000000000E+04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) omega =   /* Angular velocity ( rad/s ) */
(PID.TID 0000.0001)                 7.292123516990375E-05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) f0 =   /* Reference coriolis parameter ( 1/s ) */
(PID.TID 0000.0001)                 1.000000000000000E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) beta =   /* Beta ( 1/(m.s) ) */
(PID.TID 0000.0001)                 9.999999999999999E-12
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fPrime =   /* Second coriolis parameter ( 1/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rigidLid =   /* Rigid lid on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitFreeSurface =   /* Implicit free surface on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) freeSurfFac =   /* Implicit free surface factor */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicSurfPress =  /* Surface Pressure implicit factor (0-1) */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicDiv2DFlow =  /* Barot. Flow Div. implicit factor (0-1) */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) uniformLin_PhiSurf = /* use uniform Bo_surf on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) uniformFreeSurfLev = /* free-surface level-index is uniform */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sIceLoadFac =  /* scale factor for sIceLoad (0-1) */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacMin =   /* minimum partial cell factor (hFac) */
(PID.TID 0000.0001)                 3.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacMinDr = /* minimum partial cell thickness ( m) */
(PID.TID 0000.0001)                 5.000000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) exactConserv =  /* Exact Volume Conservation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) linFSConserveTr = /* Tracer correction for Lin Free Surface on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nonlinFreeSurf = /* Non-linear Free Surf. options (-1,0,1,2,3)*/
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)      -1,0= Off ; 1,2,3= On, 2=+rescale gU,gV, 3=+update cg2d solv.
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacInf =   /* lower threshold for hFac (nonlinFreeSurf only)*/
(PID.TID 0000.0001)                 1.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacSup =   /* upper threshold for hFac (nonlinFreeSurf only)*/
(PID.TID 0000.0001)                 5.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) select_rStar = /* r* Vertical coord. options (=0 r coord.; >0 uses r*)*/
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useRealFreshWaterFlux = /* Real Fresh Water Flux on/off flag*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) temp_EvPrRn = /* Temp. of Evap/Prec/R (UNSET=use local T)(oC)*/
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) salt_EvPrRn = /* Salin. of Evap/Prec/R (UNSET=use local S)(g/kg)*/
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectAddFluid = /* option for mass source/sink of fluid (=0: off) */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) temp_addMass = /* Temp. of addMass array (UNSET=use local T)(oC)*/
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) salt_addMass = /* Salin. of addMass array (UNSET=use local S)(g/kg)*/
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) convertFW2Salt = /* convert F.W. Flux to Salt Flux (-1=use local S)(g/kg)*/
(PID.TID 0000.0001)                 3.500000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) use3Dsolver = /* use 3-D pressure solver on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nonHydrostatic =  /* Non-Hydrostatic on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nh_Am2 = /* Non-Hydrostatic terms scaling factor */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitNHPress = /* Non-Hyd Pressure implicit factor (0-1)*/
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectNHfreeSurf = /* Non-Hyd (free-)Surface option */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) quasiHydrostatic = /* Quasi-Hydrostatic on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) calc_wVelocity = /* vertical velocity calculation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momStepping =  /* Momentum equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) vectorInvariantMomentum= /* Vector-Invariant Momentum on/off */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momAdvection =  /* Momentum advection on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momViscosity =  /* Momentum viscosity on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momImplVertAdv= /* Momentum implicit vert. advection on/off*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitViscosity = /* Implicit viscosity on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectImplicitDrag= /* Implicit bot Drag options (0,1,2)*/
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     0= Expl. ; 1= Impl. on provis. Vel ; 2= Fully Impl (with surf.P)
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectMetricTerms= /* Metric-Terms on/off flag (=0/1) */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useNHMTerms = /* Non-Hydrostatic Metric-Terms on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectCoriMap = /* Coriolis Map options (0,1,2,3)*/
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     0= f-Plane ; 1= Beta-Plane ; 2= Spherical ; 3= read from file
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) select3dCoriScheme= /* 3-D Coriolis on/off flag (=0/1) */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useCoriolis =  /* Coriolis on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useCDscheme =  /* CD scheme on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectCoriScheme= /* Scheme selector for Coriolis-Term */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)    = 0 : original discretization (simple averaging, no hFac)
(PID.TID 0000.0001)    = 1 : Wet-point averaging (Jamar & Ozer 1986)
(PID.TID 0000.0001)    = 2 : hFac weighted average (Angular Mom. conserving)
(PID.TID 0000.0001)    = 3 : energy conserving scheme using hFac weighted average
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useAbsVorticity= /* V.I Works with f+zeta in Coriolis */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectVortScheme= /* V.I Scheme selector for Vorticity-Term */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)    = 0 : enstrophy (Shallow-Water Eq.) conserving scheme by Sadourny, JAS 75
(PID.TID 0000.0001)    = 1 : same as 0 with modified hFac
(PID.TID 0000.0001)    = 2 : energy conserving scheme (used by Sadourny in JAS 75 paper)
(PID.TID 0000.0001)    = 3 : energy (general) and enstrophy (2D, nonDiv.) conserving scheme
(PID.TID 0000.0001)          from Sadourny (Burridge & Haseler, ECMWF Rep.4, 1977)
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useJamartMomAdv= /* V.I Non-linear terms Jamart flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) upwindVorticity= /* V.I Upwind bias vorticity flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) highOrderVorticity= /* V.I High order vort. advect. flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) upwindShear= /* V.I Upwind vertical Shear advection flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectKEscheme= /* V.I Kinetic Energy scheme selector */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momForcing =  /* Momentum forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momTidalForcing = /* Momentum Tidal forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momPressureForcing =  /* Momentum pressure term on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitIntGravWave= /* Implicit Internal Gravity Wave flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) staggerTimeStep =    /* Stagger time stepping on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doResetHFactors = /* reset thickness factors @ each time-step */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) multiDimAdvection =  /* enable/disable Multi-Dim Advection */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useMultiDimAdvec =   /* Multi-Dim Advection is/is-not used */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitDiffusion = /* Implicit Diffusion on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempStepping =  /* Temperature equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempAdvection = /* Temperature advection on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempImplVertAdv = /* Temp. implicit vert. advection on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempForcing  =  /* Temperature forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doThetaClimRelax = /* apply SST relaxation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempIsActiveTr = /* Temp. is a dynamically Active Tracer */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltStepping =  /* Salinity equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltAdvection = /* Salinity advection on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltImplVertAdv = /* Sali. implicit vert. advection on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltForcing  =  /* Salinity forcing on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doSaltClimRelax = /* apply SSS relaxation on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltIsActiveTr = /* Salt  is a dynamically Active Tracer */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  readBinaryPrec = /* Precision used for reading binary files */
(PID.TID 0000.0001)                      32
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) writeBinaryPrec = /* Precision used for writing binary files */
(PID.TID 0000.0001)                      32
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  rwSuffixType =   /* select format of mds file suffix */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)    = 0 : myIter (I10.10) ;   = 1 : 100*myTime (100th sec) ;
(PID.TID 0000.0001)    = 2 : myTime (seconds);   = 3 : myTime/360 (10th of hr);
(PID.TID 0000.0001)    = 4 : myTime/3600 (hours)
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  globalFiles = /* write "global" (=not per tile) files */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  useSingleCpuIO = /* only master MPI process does I/O */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  useSingleCpuInput = /* only master process reads input */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) /* debLev[*]  : level of debug & auxiliary message printing */
(PID.TID 0000.0001) debLevZero =  0 ; /* level of disabled aux. msg printing */
(PID.TID 0000.0001)    debLevA =  1 ; /* level of minimum  aux. msg printing */
(PID.TID 0000.0001)    debLevB =  2 ; /* level of low aux. print (report read-file opening)*/
(PID.TID 0000.0001)    debLevC =  3 ; /* level of moderate debug prt (most pkgs debug msg) */
(PID.TID 0000.0001)    debLevD =  4 ; /* level of enhanced debug prt (add DEBUG_STATS prt) */
(PID.TID 0000.0001)    debLevE =  5 ; /* level of extensive debug printing */
(PID.TID 0000.0001) debugLevel =  /* select debug printing level */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  plotLevel =  /* select PLOT_FIELD printing level */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Elliptic solver(s) paramters ( PARM02 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) cg2dMaxIters =   /* Upper limit on 2d con. grad iterations  */
(PID.TID 0000.0001)                     100
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dMinItersNSA =   /* Minimum number of iterations of 2d con. grad solver  */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dUseMinResSol= /* use cg2d last-iter(=0) / min-resid.(=1) solution */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dTargetResidual =   /* 2d con. grad target residual  */
(PID.TID 0000.0001)                 1.000000000000000E-05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dTargetResWunit =   /* CG2d target residual [W units] */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dPreCondFreq =   /* Freq. for updating cg2d preconditioner */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useSRCGSolver =  /* use single reduction CG solver(s) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useNSACGSolver =  /* use not-self-adjoint CG solver */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) printResidualFreq = /* Freq. for printing CG residual */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Time stepping paramters ( PARM03 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) deltaTMom =   /* Momentum equation timestep ( s ) */
(PID.TID 0000.0001)                 1.200000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deltaTFreeSurf = /* FreeSurface equation timestep ( s ) */
(PID.TID 0000.0001)                 1.200000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dTtracerLev =  /* Tracer equation timestep ( s ) */
(PID.TID 0000.0001)    31 @  1.200000000000000E+03              /* K =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deltaTClock  =   /* Model clock timestep ( s ) */
(PID.TID 0000.0001)                 1.200000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cAdjFreq =   /* Convective adjustment interval ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momForcingOutAB = /* =1: take Momentum Forcing out of Adams-Bash. stepping */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tracForcingOutAB = /* =1: take T,S,pTr Forcing out of Adams-Bash. stepping */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momDissip_In_AB = /* put Dissipation Tendency in Adams-Bash. stepping */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doAB_onGtGs = /* apply AB on Tendencies (rather than on T,S)*/
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) abEps =   /* Adams-Bashforth-2 stabilizing weight */
(PID.TID 0000.0001)                 1.000000000000000E-02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) applyExchUV_early = /* Apply EXCH to U,V earlier in time-step */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickupStrictlyMatch= /* stop if pickup do not strictly match */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nIter0   =   /* Run starting timestep number */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nTimeSteps = /* Number of timesteps */
(PID.TID 0000.0001)                   25920
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nEndIter =   /* Run ending timestep number */
(PID.TID 0000.0001)                   25920
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) baseTime =   /* Model base time ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) startTime =  /* Run start time ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) endTime  =   /* Integration ending time ( s ) */
(PID.TID 0000.0001)                 3.110400000000000E+07
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pChkPtFreq = /* Permanent restart/pickup file interval ( s ) */
(PID.TID 0000.0001)                 3.110400000000000E+07
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) chkPtFreq  = /* Rolling restart/pickup file interval ( s ) */
(PID.TID 0000.0001)                 2.592000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickup_write_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickup_read_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) writePickupAtEnd =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dumpFreq =   /* Model state write out interval ( s ). */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dumpInitAndLast= /* write out Initial & Last iter. model state */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) snapshot_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitorFreq =   /* Monitor output interval ( s ). */
(PID.TID 0000.0001)                 2.592000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitorSelect = /* select group of variables to monitor */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitor_stdio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) externForcingPeriod =   /* forcing period (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) externForcingCycle =   /* period of the cyle (s). */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tauThetaClimRelax =   /* relaxation time scale (s) */
(PID.TID 0000.0001)                 2.592000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tauSaltClimRelax =   /* relaxation time scale (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) latBandClimRelax =   /* max. Lat. where relaxation */
(PID.TID 0000.0001)                 1.800000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Gridding paramters ( PARM04 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) usingCartesianGrid = /* Cartesian coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingCylindricalGrid = /* Cylindrical coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingSphericalPolarGrid = /* Spherical coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingCurvilinearGrid = /* Curvilinear coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useMin4hFacEdges = /* set hFacW,S as minimum of adjacent hFacC factor */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) interViscAr_pCell = /* account for partial-cell in interior vert. viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) interDiffKr_pCell = /* account for partial-cell in interior vert. diffusion */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pCellMix_select = /* option to enhance mixing near surface & bottom */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectSigmaCoord = /* Hybrid-Sigma Vert. Coordinate option */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rSigmaBnd = /* r/sigma transition ( units of r ==  m ) */
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rkSign =   /* index orientation relative to vertical coordinate */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravitySign = /* gravity orientation relative to vertical coordinate */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) seaLev_Z =  /* reference height of sea-level [m] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) top_Pres =  /* reference pressure at the top [Pa] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) mass2rUnit = /* convert mass per unit area [kg/m2] to r-units [m] */
(PID.TID 0000.0001)                 9.732360097323601E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rUnit2mass = /* convert r-units [m] to mass per unit area [kg/m2] */
(PID.TID 0000.0001)                 1.027500000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) drC =   /* C spacing ( units of r ) */
(PID.TID 0000.0001)                 5.000000000000000E+00,      /* K =  1 */
(PID.TID 0000.0001)                 1.066500000000000E+01,      /* K =  2 */
(PID.TID 0000.0001)                 1.208000000000000E+01,      /* K =  3 */
(PID.TID 0000.0001)                 1.368000000000000E+01,      /* K =  4 */
(PID.TID 0000.0001)                 1.549000000000000E+01,      /* K =  5 */
(PID.TID 0000.0001)                 1.754000000000000E+01,      /* K =  6 */
(PID.TID 0000.0001)                 1.986500000000000E+01,      /* K =  7 */
(PID.TID 0000.0001)                 2.250000000000000E+01,      /* K =  8 */
(PID.TID 0000.0001)                 2.548500000000000E+01,      /* K =  9 */
(PID.TID 0000.0001)                 2.886000000000000E+01,      /* K = 10 */
(PID.TID 0000.0001)                 3.268500000000000E+01,      /* K = 11 */
(PID.TID 0000.0001)                 3.702000000000000E+01,      /* K = 12 */
(PID.TID 0000.0001)                 4.192500000000000E+01,      /* K = 13 */
(PID.TID 0000.0001)                 4.748000000000000E+01,      /* K = 14 */
(PID.TID 0000.0001)                 5.377500000000000E+01,      /* K = 15 */
(PID.TID 0000.0001)                 6.090500000000000E+01,      /* K = 16 */
(PID.TID 0000.0001)                 6.897499999999999E+01,      /* K = 17 */
(PID.TID 0000.0001)                 7.811500000000001E+01,      /* K = 18 */
(PID.TID 0000.0001)                 8.847000000000000E+01,      /* K = 19 */
(PID.TID 0000.0001)                 1.001950000000000E+02,      /* K = 20 */
(PID.TID 0000.0001)                 1.134750000000000E+02,      /* K = 21 */
(PID.TID 0000.0001)                 1.285150000000000E+02,      /* K = 22 */
(PID.TID 0000.0001)                 1.455450000000000E+02,      /* K = 23 */
(PID.TID 0000.0001)                 1.648350000000000E+02,      /* K = 24 */
(PID.TID 0000.0001)                 1.866850000000000E+02,      /* K = 25 */
(PID.TID 0000.0001)                 2.114300000000000E+02,      /* K = 26 */
(PID.TID 0000.0001)                 2.394550000000000E+02,      /* K = 27 */
(PID.TID 0000.0001)                 2.711950000000000E+02,      /* K = 28 */
(PID.TID 0000.0001)                 3.071400000000000E+02,      /* K = 29 */
(PID.TID 0000.0001)                 3.478500000000000E+02,      /* K = 30 */
(PID.TID 0000.0001)                 3.939500000000000E+02,      /* K = 31 */
(PID.TID 0000.0001)                 2.092150000000000E+02       /* K = 32 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) drF =   /* W spacing ( units of r ) */
(PID.TID 0000.0001)                 1.000000000000000E+01,      /* K =  1 */
(PID.TID 0000.0001)                 1.133000000000000E+01,      /* K =  2 */
(PID.TID 0000.0001)                 1.283000000000000E+01,      /* K =  3 */
(PID.TID 0000.0001)                 1.453000000000000E+01,      /* K =  4 */
(PID.TID 0000.0001)                 1.645000000000000E+01,      /* K =  5 */
(PID.TID 0000.0001)                 1.863000000000000E+01,      /* K =  6 */
(PID.TID 0000.0001)                 2.110000000000000E+01,      /* K =  7 */
(PID.TID 0000.0001)                 2.390000000000000E+01,      /* K =  8 */
(PID.TID 0000.0001)                 2.707000000000000E+01,      /* K =  9 */
(PID.TID 0000.0001)                 3.065000000000000E+01,      /* K = 10 */
(PID.TID 0000.0001)                 3.472000000000000E+01,      /* K = 11 */
(PID.TID 0000.0001)                 3.932000000000000E+01,      /* K = 12 */
(PID.TID 0000.0001)                 4.453000000000000E+01,      /* K = 13 */
(PID.TID 0000.0001)                 5.043000000000000E+01,      /* K = 14 */
(PID.TID 0000.0001)                 5.712000000000000E+01,      /* K = 15 */
(PID.TID 0000.0001)                 6.469000000000000E+01,      /* K = 16 */
(PID.TID 0000.0001)                 7.326000000000001E+01,      /* K = 17 */
(PID.TID 0000.0001)                 8.297000000000000E+01,      /* K = 18 */
(PID.TID 0000.0001)                 9.397000000000000E+01,      /* K = 19 */
(PID.TID 0000.0001)                 1.064200000000000E+02,      /* K = 20 */
(PID.TID 0000.0001)                 1.205300000000000E+02,      /* K = 21 */
(PID.TID 0000.0001)                 1.365000000000000E+02,      /* K = 22 */
(PID.TID 0000.0001)                 1.545900000000000E+02,      /* K = 23 */
(PID.TID 0000.0001)                 1.750800000000000E+02,      /* K = 24 */
(PID.TID 0000.0001)                 1.982900000000000E+02,      /* K = 25 */
(PID.TID 0000.0001)                 2.245700000000000E+02,      /* K = 26 */
(PID.TID 0000.0001)                 2.543400000000000E+02,      /* K = 27 */
(PID.TID 0000.0001)                 2.880500000000000E+02,      /* K = 28 */
(PID.TID 0000.0001)                 3.262300000000000E+02,      /* K = 29 */
(PID.TID 0000.0001)                 3.694700000000000E+02,      /* K = 30 */
(PID.TID 0000.0001)                 4.184300000000000E+02       /* K = 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) delX = /* U spacing ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    62 @  1.000000000000000E+00              /* I =  1: 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) delY = /* V spacing ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    62 @  1.000000000000000E+00              /* J =  1: 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) xgOrigin = /* X-axis origin of West  edge (cartesian: m, lat-lon: deg) */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ygOrigin = /* Y-axis origin of South edge (cartesian: m, lat-lon: deg) */
(PID.TID 0000.0001)                 1.400000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rSphere =  /* Radius ( ignored - cartesian, m - spherical ) */
(PID.TID 0000.0001)                 6.370000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepAtmosphere = /* Deep/Shallow Atmosphere flag (True/False) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) xC =  /* xC(:,1,:,1) : P-point X coord ( deg. or m if cartesian) */
(PID.TID 0000.0001)                -5.000000000000000E-01,      /* I =  1 */
(PID.TID 0000.0001)                 5.000000000000000E-01,      /* I =  2 */
(PID.TID 0000.0001)                 1.500000000000000E+00,      /* I =  3 */
(PID.TID 0000.0001)                 2.500000000000000E+00,      /* I =  4 */
(PID.TID 0000.0001)                 3.500000000000000E+00,      /* I =  5 */
(PID.TID 0000.0001)                 4.500000000000000E+00,      /* I =  6 */
(PID.TID 0000.0001)                 5.500000000000000E+00,      /* I =  7 */
(PID.TID 0000.0001)                 6.500000000000000E+00,      /* I =  8 */
(PID.TID 0000.0001)                 7.500000000000000E+00,      /* I =  9 */
(PID.TID 0000.0001)                 8.500000000000000E+00,      /* I = 10 */
(PID.TID 0000.0001)                 9.500000000000000E+00,      /* I = 11 */
(PID.TID 0000.0001)                 1.050000000000000E+01,      /* I = 12 */
(PID.TID 0000.0001)                 1.150000000000000E+01,      /* I = 13 */
(PID.TID 0000.0001)                 1.250000000000000E+01,      /* I = 14 */
(PID.TID 0000.0001)                 1.350000000000000E+01,      /* I = 15 */
(PID.TID 0000.0001)                 1.450000000000000E+01,      /* I = 16 */
(PID.TID 0000.0001)                 1.550000000000000E+01,      /* I = 17 */
(PID.TID 0000.0001)                 1.650000000000000E+01,      /* I = 18 */
(PID.TID 0000.0001)                 1.750000000000000E+01,      /* I = 19 */
(PID.TID 0000.0001)                 1.850000000000000E+01,      /* I = 20 */
(PID.TID 0000.0001)                 1.950000000000000E+01,      /* I = 21 */
(PID.TID 0000.0001)                 2.050000000000000E+01,      /* I = 22 */
(PID.TID 0000.0001)                 2.150000000000000E+01,      /* I = 23 */
(PID.TID 0000.0001)                 2.250000000000000E+01,      /* I = 24 */
(PID.TID 0000.0001)                 2.350000000000000E+01,      /* I = 25 */
(PID.TID 0000.0001)                 2.450000000000000E+01,      /* I = 26 */
(PID.TID 0000.0001)                 2.550000000000000E+01,      /* I = 27 */
(PID.TID 0000.0001)                 2.650000000000000E+01,      /* I = 28 */
(PID.TID 0000.0001)                 2.750000000000000E+01,      /* I = 29 */
(PID.TID 0000.0001)                 2.850000000000000E+01,      /* I = 30 */
(PID.TID 0000.0001)                 2.950000000000000E+01,      /* I = 31 */
(PID.TID 0000.0001)                 3.050000000000000E+01,      /* I = 32 */
(PID.TID 0000.0001)                 3.150000000000000E+01,      /* I = 33 */
(PID.TID 0000.0001)                 3.250000000000000E+01,      /* I = 34 */
(PID.TID 0000.0001)                 3.350000000000000E+01,      /* I = 35 */
(PID.TID 0000.0001)                 3.450000000000000E+01,      /* I = 36 */
(PID.TID 0000.0001)                 3.550000000000000E+01,      /* I = 37 */
(PID.TID 0000.0001)                 3.650000000000000E+01,      /* I = 38 */
(PID.TID 0000.0001)                 3.750000000000000E+01,      /* I = 39 */
(PID.TID 0000.0001)                 3.850000000000000E+01,      /* I = 40 */
(PID.TID 0000.0001)                 3.950000000000000E+01,      /* I = 41 */
(PID.TID 0000.0001)                 4.050000000000000E+01,      /* I = 42 */
(PID.TID 0000.0001)                 4.150000000000000E+01,      /* I = 43 */
(PID.TID 0000.0001)                 4.250000000000000E+01,      /* I = 44 */
(PID.TID 0000.0001)                 4.350000000000000E+01,      /* I = 45 */
(PID.TID 0000.0001)                 4.450000000000000E+01,      /* I = 46 */
(PID.TID 0000.0001)                 4.550000000000000E+01,      /* I = 47 */
(PID.TID 0000.0001)                 4.650000000000000E+01,      /* I = 48 */
(PID.TID 0000.0001)                 4.750000000000000E+01,      /* I = 49 */
(PID.TID 0000.0001)                 4.850000000000000E+01,      /* I = 50 */
(PID.TID 0000.0001)                 4.950000000000000E+01,      /* I = 51 */
(PID.TID 0000.0001)                 5.050000000000000E+01,      /* I = 52 */
(PID.TID 0000.0001)                 5.150000000000000E+01,      /* I = 53 */
(PID.TID 0000.0001)                 5.250000000000000E+01,      /* I = 54 */
(PID.TID 0000.0001)                 5.350000000000000E+01,      /* I = 55 */
(PID.TID 0000.0001)                 5.450000000000000E+01,      /* I = 56 */
(PID.TID 0000.0001)                 5.550000000000000E+01,      /* I = 57 */
(PID.TID 0000.0001)                 5.650000000000000E+01,      /* I = 58 */
(PID.TID 0000.0001)                 5.750000000000000E+01,      /* I = 59 */
(PID.TID 0000.0001)                 5.850000000000000E+01,      /* I = 60 */
(PID.TID 0000.0001)                 5.950000000000000E+01,      /* I = 61 */
(PID.TID 0000.0001)                 6.050000000000000E+01       /* I = 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) yC =  /* yC(1,:,1,:) : P-point Y coord ( deg. or m if cartesian) */
(PID.TID 0000.0001)                 1.450000000000000E+01,      /* J =  1 */
(PID.TID 0000.0001)                 1.550000000000000E+01,      /* J =  2 */
(PID.TID 0000.0001)                 1.650000000000000E+01,      /* J =  3 */
(PID.TID 0000.0001)                 1.750000000000000E+01,      /* J =  4 */
(PID.TID 0000.0001)                 1.850000000000000E+01,      /* J =  5 */
(PID.TID 0000.0001)                 1.950000000000000E+01,      /* J =  6 */
(PID.TID 0000.0001)                 2.050000000000000E+01,      /* J =  7 */
(PID.TID 0000.0001)                 2.150000000000000E+01,      /* J =  8 */
(PID.TID 0000.0001)                 2.250000000000000E+01,      /* J =  9 */
(PID.TID 0000.0001)                 2.350000000000000E+01,      /* J = 10 */
(PID.TID 0000.0001)                 2.450000000000000E+01,      /* J = 11 */
(PID.TID 0000.0001)                 2.550000000000000E+01,      /* J = 12 */
(PID.TID 0000.0001)                 2.650000000000000E+01,      /* J = 13 */
(PID.TID 0000.0001)                 2.750000000000000E+01,      /* J = 14 */
(PID.TID 0000.0001)                 2.850000000000000E+01,      /* J = 15 */
(PID.TID 0000.0001)                 2.950000000000000E+01,      /* J = 16 */
(PID.TID 0000.0001)                 3.050000000000000E+01,      /* J = 17 */
(PID.TID 0000.0001)                 3.150000000000000E+01,      /* J = 18 */
(PID.TID 0000.0001)                 3.250000000000000E+01,      /* J = 19 */
(PID.TID 0000.0001)                 3.350000000000000E+01,      /* J = 20 */
(PID.TID 0000.0001)                 3.450000000000000E+01,      /* J = 21 */
(PID.TID 0000.0001)                 3.550000000000000E+01,      /* J = 22 */
(PID.TID 0000.0001)                 3.650000000000000E+01,      /* J = 23 */
(PID.TID 0000.0001)                 3.750000000000000E+01,      /* J = 24 */
(PID.TID 0000.0001)                 3.850000000000000E+01,      /* J = 25 */
(PID.TID 0000.0001)                 3.950000000000000E+01,      /* J = 26 */
(PID.TID 0000.0001)                 4.050000000000000E+01,      /* J = 27 */
(PID.TID 0000.0001)                 4.150000000000000E+01,      /* J = 28 */
(PID.TID 0000.0001)                 4.250000000000000E+01,      /* J = 29 */
(PID.TID 0000.0001)                 4.350000000000000E+01,      /* J = 30 */
(PID.TID 0000.0001)                 4.450000000000000E+01,      /* J = 31 */
(PID.TID 0000.0001)                 4.550000000000000E+01,      /* J = 32 */
(PID.TID 0000.0001)                 4.650000000000000E+01,      /* J = 33 */
(PID.TID 0000.0001)                 4.750000000000000E+01,      /* J = 34 */
(PID.TID 0000.0001)                 4.850000000000000E+01,      /* J = 35 */
(PID.TID 0000.0001)                 4.950000000000000E+01,      /* J = 36 */
(PID.TID 0000.0001)                 5.050000000000000E+01,      /* J = 37 */
(PID.TID 0000.0001)                 5.150000000000000E+01,      /* J = 38 */
(PID.TID 0000.0001)                 5.250000000000000E+01,      /* J = 39 */
(PID.TID 0000.0001)                 5.350000000000000E+01,      /* J = 40 */
(PID.TID 0000.0001)                 5.450000000000000E+01,      /* J = 41 */
(PID.TID 0000.0001)                 5.550000000000000E+01,      /* J = 42 */
(PID.TID 0000.0001)                 5.650000000000000E+01,      /* J = 43 */
(PID.TID 0000.0001)                 5.750000000000000E+01,      /* J = 44 */
(PID.TID 0000.0001)                 5.850000000000000E+01,      /* J = 45 */
(PID.TID 0000.0001)                 5.950000000000000E+01,      /* J = 46 */
(PID.TID 0000.0001)                 6.050000000000000E+01,      /* J = 47 */
(PID.TID 0000.0001)                 6.150000000000000E+01,      /* J = 48 */
(PID.TID 0000.0001)                 6.250000000000000E+01,      /* J = 49 */
(PID.TID 0000.0001)                 6.350000000000000E+01,      /* J = 50 */
(PID.TID 0000.0001)                 6.450000000000000E+01,      /* J = 51 */
(PID.TID 0000.0001)                 6.550000000000000E+01,      /* J = 52 */
(PID.TID 0000.0001)                 6.650000000000000E+01,      /* J = 53 */
(PID.TID 0000.0001)                 6.750000000000000E+01,      /* J = 54 */
(PID.TID 0000.0001)                 6.850000000000000E+01,      /* J = 55 */
(PID.TID 0000.0001)                 6.950000000000000E+01,      /* J = 56 */
(PID.TID 0000.0001)                 7.050000000000000E+01,      /* J = 57 */
(PID.TID 0000.0001)                 7.150000000000000E+01,      /* J = 58 */
(PID.TID 0000.0001)                 7.250000000000000E+01,      /* J = 59 */
(PID.TID 0000.0001)                 7.350000000000000E+01,      /* J = 60 */
(PID.TID 0000.0001)                 7.450000000000000E+01,      /* J = 61 */
(PID.TID 0000.0001)                 7.550000000000000E+01       /* J = 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rcoord = /* P-point R coordinate (  units of r ) */
(PID.TID 0000.0001)                -5.000000000000000E+00,      /* K =  1 */
(PID.TID 0000.0001)                -1.566500000000000E+01,      /* K =  2 */
(PID.TID 0000.0001)                -2.774500000000000E+01,      /* K =  3 */
(PID.TID 0000.0001)                -4.142500000000000E+01,      /* K =  4 */
(PID.TID 0000.0001)                -5.691499999999999E+01,      /* K =  5 */
(PID.TID 0000.0001)                -7.445499999999998E+01,      /* K =  6 */
(PID.TID 0000.0001)                -9.431999999999999E+01,      /* K =  7 */
(PID.TID 0000.0001)                -1.168200000000000E+02,      /* K =  8 */
(PID.TID 0000.0001)                -1.423050000000000E+02,      /* K =  9 */
(PID.TID 0000.0001)                -1.711650000000000E+02,      /* K = 10 */
(PID.TID 0000.0001)                -2.038500000000000E+02,      /* K = 11 */
(PID.TID 0000.0001)                -2.408700000000000E+02,      /* K = 12 */
(PID.TID 0000.0001)                -2.827950000000000E+02,      /* K = 13 */
(PID.TID 0000.0001)                -3.302750000000000E+02,      /* K = 14 */
(PID.TID 0000.0001)                -3.840500000000000E+02,      /* K = 15 */
(PID.TID 0000.0001)                -4.449550000000000E+02,      /* K = 16 */
(PID.TID 0000.0001)                -5.139300000000001E+02,      /* K = 17 */
(PID.TID 0000.0001)                -5.920450000000001E+02,      /* K = 18 */
(PID.TID 0000.0001)                -6.805150000000001E+02,      /* K = 19 */
(PID.TID 0000.0001)                -7.807100000000000E+02,      /* K = 20 */
(PID.TID 0000.0001)                -8.941850000000001E+02,      /* K = 21 */
(PID.TID 0000.0001)                -1.022700000000000E+03,      /* K = 22 */
(PID.TID 0000.0001)                -1.168245000000000E+03,      /* K = 23 */
(PID.TID 0000.0001)                -1.333080000000000E+03,      /* K = 24 */
(PID.TID 0000.0001)                -1.519765000000000E+03,      /* K = 25 */
(PID.TID 0000.0001)                -1.731195000000000E+03,      /* K = 26 */
(PID.TID 0000.0001)                -1.970650000000000E+03,      /* K = 27 */
(PID.TID 0000.0001)                -2.241845000000000E+03,      /* K = 28 */
(PID.TID 0000.0001)                -2.548985000000000E+03,      /* K = 29 */
(PID.TID 0000.0001)                -2.896835000000000E+03,      /* K = 30 */
(PID.TID 0000.0001)                -3.290785000000000E+03       /* K = 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rF =   /* W-Interf. R coordinate (  units of r ) */
(PID.TID 0000.0001)                 0.000000000000000E+00,      /* K =  1 */
(PID.TID 0000.0001)                -1.000000000000000E+01,      /* K =  2 */
(PID.TID 0000.0001)                -2.133000000000000E+01,      /* K =  3 */
(PID.TID 0000.0001)                -3.416000000000000E+01,      /* K =  4 */
(PID.TID 0000.0001)                -4.869000000000000E+01,      /* K =  5 */
(PID.TID 0000.0001)                -6.514000000000000E+01,      /* K =  6 */
(PID.TID 0000.0001)                -8.377000000000000E+01,      /* K =  7 */
(PID.TID 0000.0001)                -1.048700000000000E+02,      /* K =  8 */
(PID.TID 0000.0001)                -1.287700000000000E+02,      /* K =  9 */
(PID.TID 0000.0001)                -1.558400000000000E+02,      /* K = 10 */
(PID.TID 0000.0001)                -1.864900000000000E+02,      /* K = 11 */
(PID.TID 0000.0001)                -2.212100000000000E+02,      /* K = 12 */
(PID.TID 0000.0001)                -2.605300000000000E+02,      /* K = 13 */
(PID.TID 0000.0001)                -3.050600000000001E+02,      /* K = 14 */
(PID.TID 0000.0001)                -3.554900000000001E+02,      /* K = 15 */
(PID.TID 0000.0001)                -4.126100000000001E+02,      /* K = 16 */
(PID.TID 0000.0001)                -4.773000000000001E+02,      /* K = 17 */
(PID.TID 0000.0001)                -5.505600000000001E+02,      /* K = 18 */
(PID.TID 0000.0001)                -6.335300000000001E+02,      /* K = 19 */
(PID.TID 0000.0001)                -7.275000000000001E+02,      /* K = 20 */
(PID.TID 0000.0001)                -8.339200000000001E+02,      /* K = 21 */
(PID.TID 0000.0001)                -9.544500000000000E+02,      /* K = 22 */
(PID.TID 0000.0001)                -1.090950000000000E+03,      /* K = 23 */
(PID.TID 0000.0001)                -1.245540000000000E+03,      /* K = 24 */
(PID.TID 0000.0001)                -1.420620000000000E+03,      /* K = 25 */
(PID.TID 0000.0001)                -1.618910000000000E+03,      /* K = 26 */
(PID.TID 0000.0001)                -1.843480000000000E+03,      /* K = 27 */
(PID.TID 0000.0001)                -2.097820000000000E+03,      /* K = 28 */
(PID.TID 0000.0001)                -2.385870000000000E+03,      /* K = 29 */
(PID.TID 0000.0001)                -2.712100000000000E+03,      /* K = 30 */
(PID.TID 0000.0001)                -3.081570000000000E+03,      /* K = 31 */
(PID.TID 0000.0001)                -3.500000000000000E+03       /* K = 32 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepFacC = /* deep-model grid factor @ cell-Center (-) */
(PID.TID 0000.0001)    31 @  1.000000000000000E+00              /* K =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepFacF = /* deep-model grid factor @ W-Interface (-) */
(PID.TID 0000.0001)    32 @  1.000000000000000E+00              /* K =  1: 32 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rotateGrid = /* use rotated grid ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) phiEuler = /* Euler angle, rotation about original z-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) thetaEuler = /* Euler angle, rotation about new x-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) psiEuler = /* Euler angle, rotation about new z-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxF =  /* dxF(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    62 @  1.076362084889763E+05              /* I =  1: 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxF =  /* dxF(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 1.076362084889763E+05,      /* J =  1 */
(PID.TID 0000.0001)                 1.071339990328148E+05,      /* J =  2 */
(PID.TID 0000.0001)                 1.065991555227175E+05,      /* J =  3 */
(PID.TID 0000.0001)                 1.060318408771987E+05,      /* J =  4 */
(PID.TID 0000.0001)                 1.054322279057952E+05,      /* J =  5 */
(PID.TID 0000.0001)                 1.048004992564268E+05,      /* J =  6 */
(PID.TID 0000.0001)                 1.041368473597596E+05,      /* J =  7 */
(PID.TID 0000.0001)                 1.034414743705903E+05,      /* J =  8 */
(PID.TID 0000.0001)                 1.027145921062676E+05,      /* J =  9 */
(PID.TID 0000.0001)                 1.019564219821708E+05,      /* J = 10 */
(PID.TID 0000.0001)                 1.011671949442642E+05,      /* J = 11 */
(PID.TID 0000.0001)                 1.003471513987490E+05,      /* J = 12 */
(PID.TID 0000.0001)                 9.949654113883297E+04,      /* J = 13 */
(PID.TID 0000.0001)                 9.861562326864146E+04,      /* J = 14 */
(PID.TID 0000.0001)                 9.770466612429130E+04,      /* J = 15 */
(PID.TID 0000.0001)                 9.676394719215337E+04,      /* J = 16 */
(PID.TID 0000.0001)                 9.579375302432729E+04,      /* J = 17 */
(PID.TID 0000.0001)                 9.479437915135507E+04,      /* J = 18 */
(PID.TID 0000.0001)                 9.376612999219958E+04,      /* J = 19 */
(PID.TID 0000.0001)                 9.270931876151556E+04,      /* J = 20 */
(PID.TID 0000.0001)                 9.162426737424145E+04,      /* J = 21 */
(PID.TID 0000.0001)                 9.051130634754094E+04,      /* J = 22 */
(PID.TID 0000.0001)                 8.937077470012424E+04,      /* J = 23 */
(PID.TID 0000.0001)                 8.820301984897976E+04,      /* J = 24 */
(PID.TID 0000.0001)                 8.700839750354746E+04,      /* J = 25 */
(PID.TID 0000.0001)                 8.578727155736629E+04,      /* J = 26 */
(PID.TID 0000.0001)                 8.454001397722879E+04,      /* J = 27 */
(PID.TID 0000.0001)                 8.326700468987631E+04,      /* J = 28 */
(PID.TID 0000.0001)                 8.196863146626971E+04,      /* J = 29 */
(PID.TID 0000.0001)                 8.064528980347053E+04,      /* J = 30 */
(PID.TID 0000.0001)                 7.929738280416874E+04,      /* J = 31 */
(PID.TID 0000.0001)                 7.792532105389380E+04,      /* J = 32 */
(PID.TID 0000.0001)                 7.652952249594631E+04,      /* J = 33 */
(PID.TID 0000.0001)                 7.511041230408842E+04,      /* J = 34 */
(PID.TID 0000.0001)                 7.366842275303182E+04,      /* J = 35 */
(PID.TID 0000.0001)                 7.220399308676260E+04,      /* J = 36 */
(PID.TID 0000.0001)                 7.071756938474336E+04,      /* J = 37 */
(PID.TID 0000.0001)                 6.920960442603305E+04,      /* J = 38 */
(PID.TID 0000.0001)                 6.768055755136609E+04,      /* J = 39 */
(PID.TID 0000.0001)                 6.613089452323270E+04,      /* J = 40 */
(PID.TID 0000.0001)                 6.456108738400316E+04,      /* J = 41 */
(PID.TID 0000.0001)                 6.297161431213917E+04,      /* J = 42 */
(PID.TID 0000.0001)                 6.136295947653597E+04,      /* J = 43 */
(PID.TID 0000.0001)                 5.973561288903989E+04,      /* J = 44 */
(PID.TID 0000.0001)                 5.809007025518592E+04,      /* J = 45 */
(PID.TID 0000.0001)                 5.642683282320108E+04,      /* J = 46 */
(PID.TID 0000.0001)                 5.474640723131929E+04,      /* J = 47 */
(PID.TID 0000.0001)                 5.304930535345447E+04,      /* J = 48 */
(PID.TID 0000.0001)                 5.133604414327884E+04,      /* J = 49 */
(PID.TID 0000.0001)                 4.960714547675374E+04,      /* J = 50 */
(PID.TID 0000.0001)                 4.786313599316124E+04,      /* J = 51 */
(PID.TID 0000.0001)                 4.610454693468459E+04,      /* J = 52 */
(PID.TID 0000.0001)                 4.433191398458685E+04,      /* J = 53 */
(PID.TID 0000.0001)                 4.254577710403652E+04,      /* J = 54 */
(PID.TID 0000.0001)                 4.074668036763009E+04,      /* J = 55 */
(PID.TID 0000.0001)                 3.893517179766173E+04,      /* J = 56 */
(PID.TID 0000.0001)                 3.711180319719033E+04,      /* J = 57 */
(PID.TID 0000.0001)                 3.527712998195496E+04,      /* J = 58 */
(PID.TID 0000.0001)                 3.343171101118984E+04,      /* J = 59 */
(PID.TID 0000.0001)                 3.157610841739049E+04,      /* J = 60 */
(PID.TID 0000.0001)                 2.971088743508254E+04,      /* J = 61 */
(PID.TID 0000.0001)                 2.783661622864603E+04       /* J = 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyF =  /* dyF(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    62 @  1.111774733520388E+05              /* I =  1: 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyF =  /* dyF(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    62 @  1.111774733520388E+05              /* J =  1: 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxG =  /* dxG(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    62 @  1.078750272516468E+05              /* I =  1: 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxG =  /* dxG(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 1.078750272516468E+05,      /* J =  1 */
(PID.TID 0000.0001)                 1.073891928122990E+05,      /* J =  2 */
(PID.TID 0000.0001)                 1.068706465845181E+05,      /* J =  3 */
(PID.TID 0000.0001)                 1.063195465225083E+05,      /* J =  4 */
(PID.TID 0000.0001)                 1.057360604966873E+05,      /* J =  5 */
(PID.TID 0000.0001)                 1.051203662425507E+05,      /* J =  6 */
(PID.TID 0000.0001)                 1.044726513065328E+05,      /* J =  7 */
(PID.TID 0000.0001)                 1.037931129888776E+05,      /* J =  8 */
(PID.TID 0000.0001)                 1.030819582835396E+05,      /* J =  9 */
(PID.TID 0000.0001)                 1.023394038151311E+05,      /* J = 10 */
(PID.TID 0000.0001)                 1.015656757729363E+05,      /* J = 11 */
(PID.TID 0000.0001)                 1.007610098420124E+05,      /* J = 12 */
(PID.TID 0000.0001)                 9.992565113139673E+04,      /* J = 13 */
(PID.TID 0000.0001)                 9.905985409944496E+04,      /* J = 14 */
(PID.TID 0000.0001)                 9.816388247632013E+04,      /* J = 15 */
(PID.TID 0000.0001)                 9.723800918365814E+04,      /* J = 16 */
(PID.TID 0000.0001)                 9.628251625143306E+04,      /* J = 17 */
(PID.TID 0000.0001)                 9.529769473204810E+04,      /* J = 18 */
(PID.TID 0000.0001)                 9.428384461167829E+04,      /* J = 19 */
(PID.TID 0000.0001)                 9.324127471889161E+04,      /* J = 20 */
(PID.TID 0000.0001)                 9.217030263057708E+04,      /* J = 21 */
(PID.TID 0000.0001)                 9.107125457520749E+04,      /* J = 22 */
(PID.TID 0000.0001)                 8.994446533346726E+04,      /* J = 23 */
(PID.TID 0000.0001)                 8.879027813627482E+04,      /* J = 24 */
(PID.TID 0000.0001)                 8.760904456023136E+04,      /* J = 25 */
(PID.TID 0000.0001)                 8.640112442052698E+04,      /* J = 26 */
(PID.TID 0000.0001)                 8.516688566133760E+04,      /* J = 27 */
(PID.TID 0000.0001)                 8.390670424374563E+04,      /* J = 28 */
(PID.TID 0000.0001)                 8.262096403121852E+04,      /* J = 29 */
(PID.TID 0000.0001)                 8.131005667268026E+04,      /* J = 30 */
(PID.TID 0000.0001)                 7.997438148321131E+04,      /* J = 31 */
(PID.TID 0000.0001)                 7.861434532241333E+04,      /* J = 32 */
(PID.TID 0000.0001)                 7.723036247047588E+04,      /* J = 33 */
(PID.TID 0000.0001)                 7.582285450198260E+04,      /* J = 34 */
(PID.TID 0000.0001)                 7.439225015749552E+04,      /* J = 35 */
(PID.TID 0000.0001)                 7.293898521295658E+04,      /* J = 36 */
(PID.TID 0000.0001)                 7.146350234694594E+04,      /* J = 37 */
(PID.TID 0000.0001)                 6.996625100583793E+04,      /* J = 38 */
(PID.TID 0000.0001)                 6.844768726689526E+04,      /* J = 39 */
(PID.TID 0000.0001)                 6.690827369934345E+04,      /* J = 40 */
(PID.TID 0000.0001)                 6.534847922346782E+04,      /* J = 41 */
(PID.TID 0000.0001)                 6.376877896777580E+04,      /* J = 42 */
(PID.TID 0000.0001)                 6.216965412426815E+04,      /* J = 43 */
(PID.TID 0000.0001)                 6.055159180186329E+04,      /* J = 44 */
(PID.TID 0000.0001)                 5.891508487801914E+04,      /* J = 45 */
(PID.TID 0000.0001)                 5.726063184859791E+04,      /* J = 46 */
(PID.TID 0000.0001)                 5.558873667601941E+04,      /* J = 47 */
(PID.TID 0000.0001)                 5.389990863574919E+04,      /* J = 48 */
(PID.TID 0000.0001)                 5.219466216116838E+04,      /* J = 49 */
(PID.TID 0000.0001)                 5.047351668687224E+04,      /* J = 50 */
(PID.TID 0000.0001)                 4.873699649044534E+04,      /* J = 51 */
(PID.TID 0000.0001)                 4.698563053276157E+04,      /* J = 52 */
(PID.TID 0000.0001)                 4.521995229685750E+04,      /* J = 53 */
(PID.TID 0000.0001)                 4.344049962542827E+04,      /* J = 54 */
(PID.TID 0000.0001)                 4.164781455699559E+04,      /* J = 55 */
(PID.TID 0000.0001)                 3.984244316079742E+04,      /* J = 56 */
(PID.TID 0000.0001)                 3.802493537045004E+04,      /* J = 57 */
(PID.TID 0000.0001)                 3.619584481643300E+04,      /* J = 58 */
(PID.TID 0000.0001)                 3.435572865744785E+04,      /* J = 59 */
(PID.TID 0000.0001)                 3.250514741070222E+04,      /* J = 60 */
(PID.TID 0000.0001)                 3.064466478117086E+04,      /* J = 61 */
(PID.TID 0000.0001)                 2.877484748988563E+04       /* J = 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyG =  /* dyG(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    62 @  1.111774733520388E+05              /* I =  1: 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyG =  /* dyG(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    62 @  1.111774733520388E+05              /* J =  1: 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxC =  /* dxC(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    62 @  1.076362084889763E+05              /* I =  1: 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxC =  /* dxC(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 1.076362084889763E+05,      /* J =  1 */
(PID.TID 0000.0001)                 1.071339990328148E+05,      /* J =  2 */
(PID.TID 0000.0001)                 1.065991555227175E+05,      /* J =  3 */
(PID.TID 0000.0001)                 1.060318408771987E+05,      /* J =  4 */
(PID.TID 0000.0001)                 1.054322279057952E+05,      /* J =  5 */
(PID.TID 0000.0001)                 1.048004992564268E+05,      /* J =  6 */
(PID.TID 0000.0001)                 1.041368473597596E+05,      /* J =  7 */
(PID.TID 0000.0001)                 1.034414743705903E+05,      /* J =  8 */
(PID.TID 0000.0001)                 1.027145921062676E+05,      /* J =  9 */
(PID.TID 0000.0001)                 1.019564219821708E+05,      /* J = 10 */
(PID.TID 0000.0001)                 1.011671949442642E+05,      /* J = 11 */
(PID.TID 0000.0001)                 1.003471513987490E+05,      /* J = 12 */
(PID.TID 0000.0001)                 9.949654113883297E+04,      /* J = 13 */
(PID.TID 0000.0001)                 9.861562326864146E+04,      /* J = 14 */
(PID.TID 0000.0001)                 9.770466612429130E+04,      /* J = 15 */
(PID.TID 0000.0001)                 9.676394719215337E+04,      /* J = 16 */
(PID.TID 0000.0001)                 9.579375302432729E+04,      /* J = 17 */
(PID.TID 0000.0001)                 9.479437915135507E+04,      /* J = 18 */
(PID.TID 0000.0001)                 9.376612999219958E+04,      /* J = 19 */
(PID.TID 0000.0001)                 9.270931876151556E+04,      /* J = 20 */
(PID.TID 0000.0001)                 9.162426737424145E+04,      /* J = 21 */
(PID.TID 0000.0001)                 9.051130634754094E+04,      /* J = 22 */
(PID.TID 0000.0001)                 8.937077470012424E+04,      /* J = 23 */
(PID.TID 0000.0001)                 8.820301984897976E+04,      /* J = 24 */
(PID.TID 0000.0001)                 8.700839750354746E+04,      /* J = 25 */
(PID.TID 0000.0001)                 8.578727155736629E+04,      /* J = 26 */
(PID.TID 0000.0001)                 8.454001397722879E+04,      /* J = 27 */
(PID.TID 0000.0001)                 8.326700468987631E+04,      /* J = 28 */
(PID.TID 0000.0001)                 8.196863146626971E+04,      /* J = 29 */
(PID.TID 0000.0001)                 8.064528980347053E+04,      /* J = 30 */
(PID.TID 0000.0001)                 7.929738280416874E+04,      /* J = 31 */
(PID.TID 0000.0001)                 7.792532105389380E+04,      /* J = 32 */
(PID.TID 0000.0001)                 7.652952249594631E+04,      /* J = 33 */
(PID.TID 0000.0001)                 7.511041230408842E+04,      /* J = 34 */
(PID.TID 0000.0001)                 7.366842275303182E+04,      /* J = 35 */
(PID.TID 0000.0001)                 7.220399308676260E+04,      /* J = 36 */
(PID.TID 0000.0001)                 7.071756938474336E+04,      /* J = 37 */
(PID.TID 0000.0001)                 6.920960442603305E+04,      /* J = 38 */
(PID.TID 0000.0001)                 6.768055755136609E+04,      /* J = 39 */
(PID.TID 0000.0001)                 6.613089452323270E+04,      /* J = 40 */
(PID.TID 0000.0001)                 6.456108738400316E+04,      /* J = 41 */
(PID.TID 0000.0001)                 6.297161431213917E+04,      /* J = 42 */
(PID.TID 0000.0001)                 6.136295947653597E+04,      /* J = 43 */
(PID.TID 0000.0001)                 5.973561288903989E+04,      /* J = 44 */
(PID.TID 0000.0001)                 5.809007025518592E+04,      /* J = 45 */
(PID.TID 0000.0001)                 5.642683282320108E+04,      /* J = 46 */
(PID.TID 0000.0001)                 5.474640723131929E+04,      /* J = 47 */
(PID.TID 0000.0001)                 5.304930535345447E+04,      /* J = 48 */
(PID.TID 0000.0001)                 5.133604414327884E+04,      /* J = 49 */
(PID.TID 0000.0001)                 4.960714547675374E+04,      /* J = 50 */
(PID.TID 0000.0001)                 4.786313599316124E+04,      /* J = 51 */
(PID.TID 0000.0001)                 4.610454693468459E+04,      /* J = 52 */
(PID.TID 0000.0001)                 4.433191398458685E+04,      /* J = 53 */
(PID.TID 0000.0001)                 4.254577710403652E+04,      /* J = 54 */
(PID.TID 0000.0001)                 4.074668036763009E+04,      /* J = 55 */
(PID.TID 0000.0001)                 3.893517179766173E+04,      /* J = 56 */
(PID.TID 0000.0001)                 3.711180319719033E+04,      /* J = 57 */
(PID.TID 0000.0001)                 3.527712998195496E+04,      /* J = 58 */
(PID.TID 0000.0001)                 3.343171101118984E+04,      /* J = 59 */
(PID.TID 0000.0001)                 3.157610841739049E+04,      /* J = 60 */
(PID.TID 0000.0001)                 2.971088743508254E+04,      /* J = 61 */
(PID.TID 0000.0001)                 2.783661622864603E+04       /* J = 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyC =  /* dyC(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    62 @  1.111774733520388E+05              /* I =  1: 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyC =  /* dyC(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    62 @  1.111774733520388E+05              /* J =  1: 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxV =  /* dxV(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    62 @  1.078750272516468E+05              /* I =  1: 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxV =  /* dxV(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 1.078750272516468E+05,      /* J =  1 */
(PID.TID 0000.0001)                 1.073891928122990E+05,      /* J =  2 */
(PID.TID 0000.0001)                 1.068706465845181E+05,      /* J =  3 */
(PID.TID 0000.0001)                 1.063195465225083E+05,      /* J =  4 */
(PID.TID 0000.0001)                 1.057360604966873E+05,      /* J =  5 */
(PID.TID 0000.0001)                 1.051203662425507E+05,      /* J =  6 */
(PID.TID 0000.0001)                 1.044726513065328E+05,      /* J =  7 */
(PID.TID 0000.0001)                 1.037931129888776E+05,      /* J =  8 */
(PID.TID 0000.0001)                 1.030819582835396E+05,      /* J =  9 */
(PID.TID 0000.0001)                 1.023394038151311E+05,      /* J = 10 */
(PID.TID 0000.0001)                 1.015656757729363E+05,      /* J = 11 */
(PID.TID 0000.0001)                 1.007610098420124E+05,      /* J = 12 */
(PID.TID 0000.0001)                 9.992565113139673E+04,      /* J = 13 */
(PID.TID 0000.0001)                 9.905985409944496E+04,      /* J = 14 */
(PID.TID 0000.0001)                 9.816388247632013E+04,      /* J = 15 */
(PID.TID 0000.0001)                 9.723800918365814E+04,      /* J = 16 */
(PID.TID 0000.0001)                 9.628251625143306E+04,      /* J = 17 */
(PID.TID 0000.0001)                 9.529769473204810E+04,      /* J = 18 */
(PID.TID 0000.0001)                 9.428384461167829E+04,      /* J = 19 */
(PID.TID 0000.0001)                 9.324127471889161E+04,      /* J = 20 */
(PID.TID 0000.0001)                 9.217030263057708E+04,      /* J = 21 */
(PID.TID 0000.0001)                 9.107125457520749E+04,      /* J = 22 */
(PID.TID 0000.0001)                 8.994446533346726E+04,      /* J = 23 */
(PID.TID 0000.0001)                 8.879027813627482E+04,      /* J = 24 */
(PID.TID 0000.0001)                 8.760904456023136E+04,      /* J = 25 */
(PID.TID 0000.0001)                 8.640112442052698E+04,      /* J = 26 */
(PID.TID 0000.0001)                 8.516688566133760E+04,      /* J = 27 */
(PID.TID 0000.0001)                 8.390670424374563E+04,      /* J = 28 */
(PID.TID 0000.0001)                 8.262096403121852E+04,      /* J = 29 */
(PID.TID 0000.0001)                 8.131005667268026E+04,      /* J = 30 */
(PID.TID 0000.0001)                 7.997438148321131E+04,      /* J = 31 */
(PID.TID 0000.0001)                 7.861434532241333E+04,      /* J = 32 */
(PID.TID 0000.0001)                 7.723036247047588E+04,      /* J = 33 */
(PID.TID 0000.0001)                 7.582285450198260E+04,      /* J = 34 */
(PID.TID 0000.0001)                 7.439225015749552E+04,      /* J = 35 */
(PID.TID 0000.0001)                 7.293898521295658E+04,      /* J = 36 */
(PID.TID 0000.0001)                 7.146350234694594E+04,      /* J = 37 */
(PID.TID 0000.0001)                 6.996625100583793E+04,      /* J = 38 */
(PID.TID 0000.0001)                 6.844768726689526E+04,      /* J = 39 */
(PID.TID 0000.0001)                 6.690827369934345E+04,      /* J = 40 */
(PID.TID 0000.0001)                 6.534847922346782E+04,      /* J = 41 */
(PID.TID 0000.0001)                 6.376877896777580E+04,      /* J = 42 */
(PID.TID 0000.0001)                 6.216965412426815E+04,      /* J = 43 */
(PID.TID 0000.0001)                 6.055159180186329E+04,      /* J = 44 */
(PID.TID 0000.0001)                 5.891508487801914E+04,      /* J = 45 */
(PID.TID 0000.0001)                 5.726063184859791E+04,      /* J = 46 */
(PID.TID 0000.0001)                 5.558873667601941E+04,      /* J = 47 */
(PID.TID 0000.0001)                 5.389990863574919E+04,      /* J = 48 */
(PID.TID 0000.0001)                 5.219466216116838E+04,      /* J = 49 */
(PID.TID 0000.0001)                 5.047351668687224E+04,      /* J = 50 */
(PID.TID 0000.0001)                 4.873699649044534E+04,      /* J = 51 */
(PID.TID 0000.0001)                 4.698563053276157E+04,      /* J = 52 */
(PID.TID 0000.0001)                 4.521995229685750E+04,      /* J = 53 */
(PID.TID 0000.0001)                 4.344049962542827E+04,      /* J = 54 */
(PID.TID 0000.0001)                 4.164781455699559E+04,      /* J = 55 */
(PID.TID 0000.0001)                 3.984244316079742E+04,      /* J = 56 */
(PID.TID 0000.0001)                 3.802493537045004E+04,      /* J = 57 */
(PID.TID 0000.0001)                 3.619584481643300E+04,      /* J = 58 */
(PID.TID 0000.0001)                 3.435572865744785E+04,      /* J = 59 */
(PID.TID 0000.0001)                 3.250514741070222E+04,      /* J = 60 */
(PID.TID 0000.0001)                 3.064466478117086E+04,      /* J = 61 */
(PID.TID 0000.0001)                 2.877484748988563E+04       /* J = 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyU =  /* dyU(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    62 @  1.111774733520388E+05              /* I =  1: 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyU =  /* dyU(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    62 @  1.111774733520388E+05              /* J =  1: 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rA  =  /* rA (:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)    62 @  1.196656981524733E+10              /* I =  1: 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rA  =  /* rA (1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)                 1.196656981524733E+10,      /* J =  1 */
(PID.TID 0000.0001)                 1.191073614548694E+10,      /* J =  2 */
(PID.TID 0000.0001)                 1.185127435011474E+10,      /* J =  3 */
(PID.TID 0000.0001)                 1.178820254176960E+10,      /* J =  4 */
(PID.TID 0000.0001)                 1.172153993273539E+10,      /* J =  5 */
(PID.TID 0000.0001)                 1.165130682908854E+10,      /* J =  6 */
(PID.TID 0000.0001)                 1.157752462451282E+10,      /* J =  7 */
(PID.TID 0000.0001)                 1.150021579378240E+10,      /* J =  8 */
(PID.TID 0000.0001)                 1.141940388591624E+10,      /* J =  9 */
(PID.TID 0000.0001)                 1.133511351700411E+10,      /* J = 10 */
(PID.TID 0000.0001)                 1.124737036270893E+10,      /* J = 11 */
(PID.TID 0000.0001)                 1.115620115044562E+10,      /* J = 12 */
(PID.TID 0000.0001)                 1.106163365123932E+10,      /* J = 13 */
(PID.TID 0000.0001)                 1.096369667126643E+10,      /* J = 14 */
(PID.TID 0000.0001)                 1.086242004307971E+10,      /* J = 15 */
(PID.TID 0000.0001)                 1.075783461652121E+10,      /* J = 16 */
(PID.TID 0000.0001)                 1.064997224932518E+10,      /* J = 17 */
(PID.TID 0000.0001)                 1.053886579741327E+10,      /* J = 18 */
(PID.TID 0000.0001)                 1.042454910488719E+10,      /* J = 19 */
(PID.TID 0000.0001)                 1.030705699371901E+10,      /* J = 20 */
(PID.TID 0000.0001)                 1.018642525314361E+10,      /* J = 21 */
(PID.TID 0000.0001)                 1.006269062875826E+10,      /* J = 22 */
(PID.TID 0000.0001)                 9.935890811327726E+09,      /* J = 23 */
(PID.TID 0000.0001)                 9.806064425305017E+09,      /* J = 24 */
(PID.TID 0000.0001)                 9.673251017064857E+09,      /* J = 25 */
(PID.TID 0000.0001)                 9.537491042857967E+09,      /* J = 26 */
(PID.TID 0000.0001)                 9.398825856487764E+09,      /* J = 27 */
(PID.TID 0000.0001)                 9.257297696713127E+09,      /* J = 28 */
(PID.TID 0000.0001)                 9.112949674382658E+09,      /* J = 29 */
(PID.TID 0000.0001)                 8.965825759302095E+09,      /* J = 30 */
(PID.TID 0000.0001)                 8.815970766841616E+09,      /* J = 31 */
(PID.TID 0000.0001)                 8.663430344283134E+09,      /* J = 32 */
(PID.TID 0000.0001)                 8.508250956917325E+09,      /* J = 33 */
(PID.TID 0000.0001)                 8.350479873888739E+09,      /* J = 34 */
(PID.TID 0000.0001)                 8.190165153797634E+09,      /* J = 35 */
(PID.TID 0000.0001)                 8.027355630060758E+09,      /* J = 36 */
(PID.TID 0000.0001)                 7.862100896036314E+09,      /* J = 37 */
(PID.TID 0000.0001)                 7.694451289916993E+09,      /* J = 38 */
(PID.TID 0000.0001)                 7.524457879396867E+09,      /* J = 39 */
(PID.TID 0000.0001)                 7.352172446115701E+09,      /* J = 40 */
(PID.TID 0000.0001)                 7.177647469885461E+09,      /* J = 41 */
(PID.TID 0000.0001)                 7.000936112704228E+09,      /* J = 42 */
(PID.TID 0000.0001)                 6.822092202563635E+09,      /* J = 43 */
(PID.TID 0000.0001)                 6.641170217051002E+09,      /* J = 44 */
(PID.TID 0000.0001)                 6.458225266755869E+09,      /* J = 45 */
(PID.TID 0000.0001)                 6.273313078481994E+09,      /* J = 46 */
(PID.TID 0000.0001)                 6.086489978273873E+09,      /* J = 47 */
(PID.TID 0000.0001)                 5.897812874256844E+09,      /* J = 48 */
(PID.TID 0000.0001)                 5.707339239305150E+09,      /* J = 49 */
(PID.TID 0000.0001)                 5.515127093532865E+09,      /* J = 50 */
(PID.TID 0000.0001)                 5.321234986621662E+09,      /* J = 51 */
(PID.TID 0000.0001)                 5.125721979985523E+09,      /* J = 52 */
(PID.TID 0000.0001)                 4.928647628780381E+09,      /* J = 53 */
(PID.TID 0000.0001)                 4.730071963762583E+09,      /* J = 54 */
(PID.TID 0000.0001)                 4.530055473003219E+09,      /* J = 55 */
(PID.TID 0000.0001)                 4.328659083463440E+09,      /* J = 56 */
(PID.TID 0000.0001)                 4.125944142434158E+09,      /* J = 57 */
(PID.TID 0000.0001)                 3.921972398849850E+09,      /* J = 58 */
(PID.TID 0000.0001)                 3.716805984480110E+09,      /* J = 59 */
(PID.TID 0000.0001)                 3.510507395001996E+09,      /* J = 60 */
(PID.TID 0000.0001)                 3.303139470964198E+09,      /* J = 61 */
(PID.TID 0000.0001)                 3.094765378645439E+09       /* J = 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAw =  /* rAw(:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)    62 @  1.196656981524733E+10              /* I =  1: 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAw =  /* rAw(1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)                 1.196656981524733E+10,      /* J =  1 */
(PID.TID 0000.0001)                 1.191073614548694E+10,      /* J =  2 */
(PID.TID 0000.0001)                 1.185127435011474E+10,      /* J =  3 */
(PID.TID 0000.0001)                 1.178820254176960E+10,      /* J =  4 */
(PID.TID 0000.0001)                 1.172153993273539E+10,      /* J =  5 */
(PID.TID 0000.0001)                 1.165130682908854E+10,      /* J =  6 */
(PID.TID 0000.0001)                 1.157752462451282E+10,      /* J =  7 */
(PID.TID 0000.0001)                 1.150021579378240E+10,      /* J =  8 */
(PID.TID 0000.0001)                 1.141940388591624E+10,      /* J =  9 */
(PID.TID 0000.0001)                 1.133511351700411E+10,      /* J = 10 */
(PID.TID 0000.0001)                 1.124737036270893E+10,      /* J = 11 */
(PID.TID 0000.0001)                 1.115620115044562E+10,      /* J = 12 */
(PID.TID 0000.0001)                 1.106163365123932E+10,      /* J = 13 */
(PID.TID 0000.0001)                 1.096369667126643E+10,      /* J = 14 */
(PID.TID 0000.0001)                 1.086242004307971E+10,      /* J = 15 */
(PID.TID 0000.0001)                 1.075783461652121E+10,      /* J = 16 */
(PID.TID 0000.0001)                 1.064997224932518E+10,      /* J = 17 */
(PID.TID 0000.0001)                 1.053886579741327E+10,      /* J = 18 */
(PID.TID 0000.0001)                 1.042454910488719E+10,      /* J = 19 */
(PID.TID 0000.0001)                 1.030705699371901E+10,      /* J = 20 */
(PID.TID 0000.0001)                 1.018642525314361E+10,      /* J = 21 */
(PID.TID 0000.0001)                 1.006269062875826E+10,      /* J = 22 */
(PID.TID 0000.0001)                 9.935890811327726E+09,      /* J = 23 */
(PID.TID 0000.0001)                 9.806064425305017E+09,      /* J = 24 */
(PID.TID 0000.0001)                 9.673251017064857E+09,      /* J = 25 */
(PID.TID 0000.0001)                 9.537491042857967E+09,      /* J = 26 */
(PID.TID 0000.0001)                 9.398825856487764E+09,      /* J = 27 */
(PID.TID 0000.0001)                 9.257297696713127E+09,      /* J = 28 */
(PID.TID 0000.0001)                 9.112949674382658E+09,      /* J = 29 */
(PID.TID 0000.0001)                 8.965825759302095E+09,      /* J = 30 */
(PID.TID 0000.0001)                 8.815970766841616E+09,      /* J = 31 */
(PID.TID 0000.0001)                 8.663430344283134E+09,      /* J = 32 */
(PID.TID 0000.0001)                 8.508250956917325E+09,      /* J = 33 */
(PID.TID 0000.0001)                 8.350479873888739E+09,      /* J = 34 */
(PID.TID 0000.0001)                 8.190165153797634E+09,      /* J = 35 */
(PID.TID 0000.0001)                 8.027355630060758E+09,      /* J = 36 */
(PID.TID 0000.0001)                 7.862100896036314E+09,      /* J = 37 */
(PID.TID 0000.0001)                 7.694451289916993E+09,      /* J = 38 */
(PID.TID 0000.0001)                 7.524457879396867E+09,      /* J = 39 */
(PID.TID 0000.0001)                 7.352172446115701E+09,      /* J = 40 */
(PID.TID 0000.0001)                 7.177647469885461E+09,      /* J = 41 */
(PID.TID 0000.0001)                 7.000936112704228E+09,      /* J = 42 */
(PID.TID 0000.0001)                 6.822092202563635E+09,      /* J = 43 */
(PID.TID 0000.0001)                 6.641170217051002E+09,      /* J = 44 */
(PID.TID 0000.0001)                 6.458225266755869E+09,      /* J = 45 */
(PID.TID 0000.0001)                 6.273313078481994E+09,      /* J = 46 */
(PID.TID 0000.0001)                 6.086489978273873E+09,      /* J = 47 */
(PID.TID 0000.0001)                 5.897812874256844E+09,      /* J = 48 */
(PID.TID 0000.0001)                 5.707339239305150E+09,      /* J = 49 */
(PID.TID 0000.0001)                 5.515127093532865E+09,      /* J = 50 */
(PID.TID 0000.0001)                 5.321234986621662E+09,      /* J = 51 */
(PID.TID 0000.0001)                 5.125721979985523E+09,      /* J = 52 */
(PID.TID 0000.0001)                 4.928647628780381E+09,      /* J = 53 */
(PID.TID 0000.0001)                 4.730071963762583E+09,      /* J = 54 */
(PID.TID 0000.0001)                 4.530055473003219E+09,      /* J = 55 */
(PID.TID 0000.0001)                 4.328659083463440E+09,      /* J = 56 */
(PID.TID 0000.0001)                 4.125944142434158E+09,      /* J = 57 */
(PID.TID 0000.0001)                 3.921972398849850E+09,      /* J = 58 */
(PID.TID 0000.0001)                 3.716805984480110E+09,      /* J = 59 */
(PID.TID 0000.0001)                 3.510507395001996E+09,      /* J = 60 */
(PID.TID 0000.0001)                 3.303139470964198E+09,      /* J = 61 */
(PID.TID 0000.0001)                 3.094765378645439E+09       /* J = 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAs =  /* rAs(:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)    62 @  1.199312074487231E+10              /* I =  1: 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAs =  /* rAs(1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)                 1.199312074487231E+10,      /* J =  1 */
(PID.TID 0000.0001)                 1.193910758500046E+10,      /* J =  2 */
(PID.TID 0000.0001)                 1.188145765730164E+10,      /* J =  3 */
(PID.TID 0000.0001)                 1.182018852250200E+10,      /* J =  4 */
(PID.TID 0000.0001)                 1.175531884377377E+10,      /* J =  5 */
(PID.TID 0000.0001)                 1.168686838104932E+10,      /* J =  6 */
(PID.TID 0000.0001)                 1.161485798500282E+10,      /* J =  7 */
(PID.TID 0000.0001)                 1.153930959069846E+10,      /* J =  8 */
(PID.TID 0000.0001)                 1.146024621090888E+10,      /* J =  9 */
(PID.TID 0000.0001)                 1.137769192910560E+10,      /* J = 10 */
(PID.TID 0000.0001)                 1.129167189212255E+10,      /* J = 11 */
(PID.TID 0000.0001)                 1.120221230249629E+10,      /* J = 12 */
(PID.TID 0000.0001)                 1.110934041048438E+10,      /* J = 13 */
(PID.TID 0000.0001)                 1.101308450576488E+10,      /* J = 14 */
(PID.TID 0000.0001)                 1.091347390881877E+10,      /* J = 15 */
(PID.TID 0000.0001)                 1.081053896199886E+10,      /* J = 16 */
(PID.TID 0000.0001)                 1.070431102028693E+10,      /* J = 17 */
(PID.TID 0000.0001)                 1.059482244174344E+10,      /* J = 18 */
(PID.TID 0000.0001)                 1.048210657764984E+10,      /* J = 19 */
(PID.TID 0000.0001)                 1.036619776235002E+10,      /* J = 20 */
(PID.TID 0000.0001)                 1.024713130279239E+10,      /* J = 21 */
(PID.TID 0000.0001)                 1.012494346777366E+10,      /* J = 22 */
(PID.TID 0000.0001)                 9.999671476892084E+09,      /* J = 23 */
(PID.TID 0000.0001)                 9.871353489209755E+09,      /* J = 24 */
(PID.TID 0000.0001)                 9.740028591628536E+09,      /* J = 25 */
(PID.TID 0000.0001)                 9.605736786984652E+09,      /* J = 26 */
(PID.TID 0000.0001)                 9.468518981862513E+09,      /* J = 27 */
(PID.TID 0000.0001)                 9.328416974134933E+09,      /* J = 28 */
(PID.TID 0000.0001)                 9.185473440230581E+09,      /* J = 29 */
(PID.TID 0000.0001)                 9.039731922134653E+09,      /* J = 30 */
(PID.TID 0000.0001)                 8.891236814125528E+09,      /* J = 31 */
(PID.TID 0000.0001)                 8.740033349251320E+09,      /* J = 32 */
(PID.TID 0000.0001)                 8.586167585552389E+09,      /* J = 33 */
(PID.TID 0000.0001)                 8.429686392030848E+09,      /* J = 34 */
(PID.TID 0000.0001)                 8.270637434373945E+09,      /* J = 35 */
(PID.TID 0000.0001)                 8.109069160435303E+09,      /* J = 36 */
(PID.TID 0000.0001)                 7.945030785475936E+09,      /* J = 37 */
(PID.TID 0000.0001)                 7.778572277174043E+09,      /* J = 38 */
(PID.TID 0000.0001)                 7.609744340403865E+09,      /* J = 39 */
(PID.TID 0000.0001)                 7.438598401790304E+09,      /* J = 40 */
(PID.TID 0000.0001)                 7.265186594044338E+09,      /* J = 41 */
(PID.TID 0000.0001)                 7.089561740082285E+09,      /* J = 42 */
(PID.TID 0000.0001)                 6.911777336936083E+09,      /* J = 43 */
(PID.TID 0000.0001)                 6.731887539457176E+09,      /* J = 44 */
(PID.TID 0000.0001)                 6.549947143820458E+09,      /* J = 45 */
(PID.TID 0000.0001)                 6.366011570833056E+09,      /* J = 46 */
(PID.TID 0000.0001)                 6.180136849052222E+09,      /* J = 47 */
(PID.TID 0000.0001)                 5.992379597718760E+09,      /* J = 48 */
(PID.TID 0000.0001)                 5.802797009510403E+09,      /* J = 49 */
(PID.TID 0000.0001)                 5.611446833120007E+09,      /* J = 50 */
(PID.TID 0000.0001)                 5.418387355664783E+09,      /* J = 51 */
(PID.TID 0000.0001)                 5.223677384932224E+09,      /* J = 52 */
(PID.TID 0000.0001)                 5.027376231465073E+09,      /* J = 53 */
(PID.TID 0000.0001)                 4.829543690496597E+09,      /* J = 54 */
(PID.TID 0000.0001)                 4.630240023735217E+09,      /* J = 55 */
(PID.TID 0000.0001)                 4.429525941008306E+09,      /* J = 56 */
(PID.TID 0000.0001)                 4.227462581770208E+09,      /* J = 57 */
(PID.TID 0000.0001)                 4.024111496477147E+09,      /* J = 58 */
(PID.TID 0000.0001)                 3.819534627839939E+09,      /* J = 59 */
(PID.TID 0000.0001)                 3.613794291954373E+09,      /* J = 60 */
(PID.TID 0000.0001)                 3.406953159319860E+09,      /* J = 61 */
(PID.TID 0000.0001)                 3.199074235749182E+09       /* J = 62 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) globalArea = /* Integrated horizontal Area (m^2) */
(PID.TID 0000.0001)                 2.440046518395721E+13
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End of Model config. summary
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) == Packages configuration : Check & print summary ==
(PID.TID 0000.0001) 
(PID.TID 0000.0001) GMREDI_CHECK: #define GMREDI
(PID.TID 0000.0001) GM_AdvForm =     /* if FALSE => use SkewFlux Form */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) GM_InMomAsStress = /* if TRUE => apply as Eddy Stress */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) GM_AdvSeparate = /* Calc Bolus & Euler Adv. separately */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) GM_ExtraDiag =   /* Tensor Extra Diag (line 1&2) non 0 */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) GM_isopycK =    /* Background Isopyc. Diffusivity [m^2/s] */
(PID.TID 0000.0001)                 1.000000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) GM_advec*K =    /* Backg. GM-Advec(=Bolus) Diffusivity [m^2/s] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) GM_skewflx*K =  /* Background GM_SkewFlx Diffusivity [m^2/s] */
(PID.TID 0000.0001)                 1.000000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) GM_isoFac_calcK = /* Fraction of dynamic K added to Redi tensor */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) GM_Kmin_horiz = /* Minimum Horizontal Diffusivity [m^2/s] */
(PID.TID 0000.0001)                 5.000000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) GM_Visbeck_alpha = /* Visbeck alpha coeff. [-] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) GM_Small_Number =  /* epsilon used in slope calc */
(PID.TID 0000.0001)                 9.999999999999999E-21
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) GM_slopeSqCutoff = /* Slope^2 cut-off value */
(PID.TID 0000.0001)                 1.000000000000000E+08
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) GM_taper_scheme =  /* Type of Tapering/Clipping scheme */
(PID.TID 0000.0001)               'dm95                                    '
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) GM_maxSlope =  /* Maximum Slope (Tapering/Clipping) */
(PID.TID 0000.0001)                 1.000000000000000E-02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) GM_facTrL2dz = /* Minimum Trans.Layer Thick. (factor of dz) */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) GM_facTrL2ML = /* Max.Trans.Layer Thick. (factor of MxL Depth)*/
(PID.TID 0000.0001)                 5.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) GM_maxTransLay = /* Maximum Transition Layer Thickness [m] */
(PID.TID 0000.0001)                 5.000000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) GM_UseBVP = /* if TRUE => use bvp a la Ferrari et al. (2010) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) GM_BVP_ModeNumber = /* Vertical mode number for BVP wave speed */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) GM_BVP_cMin = /* Minimum wave speed for BVP [m/s] */
(PID.TID 0000.0001)                 1.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) GM_useSubMeso = /* if TRUE => use Sub-Meso param. (B.Fox-Kemper) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) subMeso_Ceff = /* efficiency coeff. of Mixed-Layer Eddies [-] */
(PID.TID 0000.0001)                 7.000000000000001E-02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) subMeso_invTau = /* inverse of Sub-Meso mixing time-scale [/s] */
(PID.TID 0000.0001)                 2.000000000000000E-06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) subMeso_LfMin = /* minimum length-scale "Lf" [m] */
(PID.TID 0000.0001)                 1.000000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) subMeso_Lmax = /* maximum grid-scale length [m] */
(PID.TID 0000.0001)                 1.100000000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) GM_useLeithQG = /* if TRUE => add QG Leith viscosity to GMRedi tensor */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) GM_useGEOM = /* using GEOMETRIC */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) CTRL_CHECK:  --> Starts to check CTRL set-up
(PID.TID 0000.0001) CTRL_CHECK:  <-- Ends Normally
(PID.TID 0000.0001) 
(PID.TID 0000.0001) COST_CHECK: #define ALLOW_COST
(PID.TID 0000.0001) GRDCHK_CHECK: grdchk package
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Gradient check configuration  >>> START <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001)   grdchkvarindex :                      1
(PID.TID 0000.0001)   matching CTRL xx_file:       "xx_theta"
(PID.TID 0000.0001)   eps =                         1.000E-05
(PID.TID 0000.0001)   First location:                       0
(PID.TID 0000.0001)   Last location:                        4
(PID.TID 0000.0001)   Increment:                            1
(PID.TID 0000.0001)   grdchkWhichProc:                      0
(PID.TID 0000.0001)   iLocTile =      1 ,   jLocTile =      1
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Gradient check configuration  >>> END <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) GAD_CHECK: #define ALLOW_GENERIC_ADVDIFF
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Check Model config. (CONFIG_CHECK):
(PID.TID 0000.0001) // CONFIG_CHECK : Normal End
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) Start initial hydrostatic pressure computation
(PID.TID 0000.0001) Pressure is predetermined for buoyancyRelation OCEANIC
(PID.TID 0000.0001) 
(PID.TID 0000.0001) DIAGSTATS_INI_IO: open file: dynStDiag.0000000000.txt , unit=     9
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     0
(PID.TID 0000.0001) %MON time_secondsf                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_wvel_max             =  -0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.3000000000000E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =   1.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   4.0799558546244E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.6722746748116E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.4500000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.4500000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4500000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   1.2079226507922E-13
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON pe_b_mean                    =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ke_max                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ke_mean                      =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ke_vol                       =   7.5744557036543E+16
(PID.TID 0000.0001) %MON vort_r_min                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON vort_r_max                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON vort_a_mean                  =   9.3555569952478E-05
(PID.TID 0000.0001) %MON vort_a_sd                    =   2.5193989267263E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =   9.7478626213494E-05
(PID.TID 0000.0001) %MON vort_p_sd                    =   3.9497926395612E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   0.0000000000000E+00
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   0.0000000000000E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =   0.00000000000000E+00  9.39971892369837E-04
 cg2d: Sum(rhs),rhsMax =   1.52655665885959E-15  2.49251898139421E-03
 cg2d: Sum(rhs),rhsMax =  -7.34134975033385E-15  4.28445462902603E-03
 cg2d: Sum(rhs),rhsMax =  -5.41233724504764E-16  6.02406791961946E-03
 cg2d: Sum(rhs),rhsMax =   1.48631107421693E-14  8.05529736580132E-03
 cg2d: Sum(rhs),rhsMax =  -4.03149735817010E-15  1.00620519432849E-02
 cg2d: Sum(rhs),rhsMax =  -7.50441375707567E-15  1.18376455794608E-02
 cg2d: Sum(rhs),rhsMax =   2.32990710058445E-14  1.32520276170039E-02
 cg2d: Sum(rhs),rhsMax =  -1.81018394718180E-15  1.42030339277927E-02
 cg2d: Sum(rhs),rhsMax =  -4.36499794642664E-14  1.46317773061484E-02
 cg2d: Sum(rhs),rhsMax =   7.16371406639382E-14  1.45336819660483E-02
 cg2d: Sum(rhs),rhsMax =  -4.19525525430231E-14  1.39606836162018E-02
 cg2d: Sum(rhs),rhsMax =   9.25509668903146E-14  1.32273077077143E-02
 cg2d: Sum(rhs),rhsMax =  -6.22869811284232E-14  1.34310334042690E-02
 cg2d: Sum(rhs),rhsMax =  -1.58706381370166E-13  1.33832759503059E-02
 cg2d: Sum(rhs),rhsMax =   2.99656133240234E-14  1.31033113023586E-02
 cg2d: Sum(rhs),rhsMax =  -1.00065788988246E-13  1.27322885728239E-02
 cg2d: Sum(rhs),rhsMax =   2.42436279385139E-14  1.25738388205265E-02
 cg2d: Sum(rhs),rhsMax =  -8.05614255861009E-14  1.22468714269474E-02
 cg2d: Sum(rhs),rhsMax =  -9.05751168511770E-14  1.17743589891377E-02
 cg2d: Sum(rhs),rhsMax =  -3.66614724689462E-13  1.11901682234819E-02
 cg2d: Sum(rhs),rhsMax =  -1.42247325030098E-14  1.05377768327036E-02
 cg2d: Sum(rhs),rhsMax =   8.86582474102227E-14  9.86828360013730E-03
 cg2d: Sum(rhs),rhsMax =   1.91882967848223E-13  9.23760901974053E-03
 cg2d: Sum(rhs),rhsMax =   4.41239926540771E-14  9.02311208405431E-03
 cg2d: Sum(rhs),rhsMax =  -2.12458522996783E-13  9.29470923683547E-03
 cg2d: Sum(rhs),rhsMax =   2.88605944698261E-13  9.70096987455403E-03
 cg2d: Sum(rhs),rhsMax =  -8.06507638451137E-14  1.02242085216637E-02
 cg2d: Sum(rhs),rhsMax =   1.62786450985664E-13  1.08398491501080E-02
 cg2d: Sum(rhs),rhsMax =  -6.70574706873595E-14  1.15184039166407E-02
 cg2d: Sum(rhs),rhsMax =   1.36252120697122E-13  1.22305042072479E-02
 cg2d: Sum(rhs),rhsMax =  -1.46063716677247E-13  1.32262395272113E-02
 cg2d: Sum(rhs),rhsMax =  -1.58414947826202E-13  1.42023275196142E-02
 cg2d: Sum(rhs),rhsMax =   1.28785870856518E-13  1.51096002571400E-02
 cg2d: Sum(rhs),rhsMax =  -1.73416836446449E-13  1.59058178345435E-02
 cg2d: Sum(rhs),rhsMax =  -2.10352568696948E-13  1.65585895999930E-02
 cg2d: Sum(rhs),rhsMax =   1.64285252068908E-13  1.70473627405743E-02
 cg2d: Sum(rhs),rhsMax =  -7.80139841616290E-14  1.77504831748359E-02
 cg2d: Sum(rhs),rhsMax =  -7.19840853591336E-14  1.85347186473299E-02
 cg2d: Sum(rhs),rhsMax =   1.97758476261356E-15  1.90997935371924E-02
 cg2d: Sum(rhs),rhsMax =  -3.24358595538143E-13  1.94339743009357E-02
 cg2d: Sum(rhs),rhsMax =   1.08822673094977E-13  1.95404093192500E-02
 cg2d: Sum(rhs),rhsMax =  -6.20684059704502E-15  1.94358908663585E-02
 cg2d: Sum(rhs),rhsMax =   4.18727552631282E-14  1.91488284205635E-02
 cg2d: Sum(rhs),rhsMax =  -1.49640716484711E-13  1.87166780559249E-02
 cg2d: Sum(rhs),rhsMax =  -1.17562209966948E-13  1.81830620897991E-02
 cg2d: Sum(rhs),rhsMax =   4.31599200823030E-14  1.75948064997751E-02
 cg2d: Sum(rhs),rhsMax =   4.15452394708637E-13  1.69990764393233E-02
 cg2d: Sum(rhs),rhsMax =  -1.62501956335603E-13  1.64407501879348E-02
 cg2d: Sum(rhs),rhsMax =   5.33947885905661E-14  1.61420343244460E-02
 cg2d: Sum(rhs),rhsMax =  -3.43336470365330E-14  1.63669475055915E-02
 cg2d: Sum(rhs),rhsMax =  -1.04284636481822E-13  1.66380638067012E-02
 cg2d: Sum(rhs),rhsMax =   3.99749677804095E-14  1.70243585508746E-02
 cg2d: Sum(rhs),rhsMax =  -4.98344421284713E-13  1.74695865983336E-02
 cg2d: Sum(rhs),rhsMax =   6.41500741416223E-14  1.79409970407798E-02
 cg2d: Sum(rhs),rhsMax =   1.33018596137902E-13  1.84165496744326E-02
 cg2d: Sum(rhs),rhsMax =   1.03556052621911E-13  1.88758577424441E-02
 cg2d: Sum(rhs),rhsMax =   1.68309810533174E-13  1.93014587140958E-02
 cg2d: Sum(rhs),rhsMax =  -2.92030288839840E-13  1.96797765391770E-02
 cg2d: Sum(rhs),rhsMax =   1.22159227178287E-13  2.00017242433969E-02
 cg2d: Sum(rhs),rhsMax =  -7.89784904142721E-14  2.02629451673212E-02
 cg2d: Sum(rhs),rhsMax =   3.50428019935123E-13  2.04636424174480E-02
 cg2d: Sum(rhs),rhsMax =  -4.41452430166578E-13  2.08593917286613E-02
 cg2d: Sum(rhs),rhsMax =  -1.91652249625918E-14  2.14685602634276E-02
 cg2d: Sum(rhs),rhsMax =  -5.43190492585666E-13  2.19756860859822E-02
 cg2d: Sum(rhs),rhsMax =  -6.65439925384703E-14  2.23671481686461E-02
 cg2d: Sum(rhs),rhsMax =  -2.35020336525338E-14  2.26367717386609E-02
 cg2d: Sum(rhs),rhsMax =  -2.99572866513387E-13  2.27859219972438E-02
 cg2d: Sum(rhs),rhsMax =   9.95453719454531E-14  2.28231029603479E-02
 cg2d: Sum(rhs),rhsMax =  -7.69315167126194E-14  2.27631197314661E-02
 cg2d: Sum(rhs),rhsMax =  -6.36296570988293E-15  2.26258604143890E-02
 cg2d: Sum(rhs),rhsMax =  -2.46178077922821E-13  2.24348087761721E-02
 cg2d: Sum(rhs),rhsMax =   3.53959916932212E-13  2.22153869422895E-02
 cg2d: Sum(rhs),rhsMax =  -3.40748262939172E-13  2.19932679613519E-02
 cg2d: Sum(rhs),rhsMax =  -3.98812927127068E-13  2.17927666273619E-02
 cg2d: Sum(rhs),rhsMax =   3.71799813159157E-13  2.17110916206155E-02
 cg2d: Sum(rhs),rhsMax =  -9.34669008856304E-14  2.19131102319514E-02
 cg2d: Sum(rhs),rhsMax =  -1.20334298081559E-13  2.21409905136054E-02
 cg2d: Sum(rhs),rhsMax =  -1.56055723898874E-14  2.23742749418954E-02
 cg2d: Sum(rhs),rhsMax =   1.11639864019963E-13  2.26078833347111E-02
 cg2d: Sum(rhs),rhsMax =  -2.58973398281626E-13  2.28377094239617E-02
 cg2d: Sum(rhs),rhsMax =   6.39210906427934E-14  2.30609261472734E-02
 cg2d: Sum(rhs),rhsMax =   5.05775976655798E-14  2.32760926560155E-02
 cg2d: Sum(rhs),rhsMax =   7.51759765549309E-14  2.34831085912699E-02
 cg2d: Sum(rhs),rhsMax =  -2.60604038349044E-13  2.36831470206194E-02
 cg2d: Sum(rhs),rhsMax =  -2.32300290115006E-13  2.39225435650210E-02
 cg2d: Sum(rhs),rhsMax =   1.79606329808735E-13  2.43924393089875E-02
 cg2d: Sum(rhs),rhsMax =  -4.51083614905201E-13  2.48521858365282E-02
 cg2d: Sum(rhs),rhsMax =  -5.11431175187482E-13  2.52894871037889E-02
 cg2d: Sum(rhs),rhsMax =   6.96068203076550E-13  2.56944462502999E-02
 cg2d: Sum(rhs),rhsMax =   3.38451489056979E-13  2.60598843773204E-02
 cg2d: Sum(rhs),rhsMax =  -5.74609804182558E-14  2.63814138317105E-02
 cg2d: Sum(rhs),rhsMax =   5.93206039845029E-14  2.66573937577751E-02
 cg2d: Sum(rhs),rhsMax =  -7.91658405496776E-14  2.68887070693619E-02
 cg2d: Sum(rhs),rhsMax =   4.59701721133854E-13  2.70784305939058E-02
 cg2d: Sum(rhs),rhsMax =   7.29763471873923E-14  2.72313879676459E-02
 cg2d: Sum(rhs),rhsMax =   2.16354711923827E-14  2.73536751772465E-02
 cg2d: Sum(rhs),rhsMax =  -5.92775828422987E-13  2.74521602799552E-02
 cg2d: Sum(rhs),rhsMax =   1.52343415660283E-13  2.75340044068912E-02
 cg2d: Sum(rhs),rhsMax =   1.16455456389275E-13  2.76062317589073E-02
 cg2d: Sum(rhs),rhsMax =   6.43513020648356E-14  2.76753570707126E-02
 cg2d: Sum(rhs),rhsMax =  -1.35995381622678E-13  2.77662086660052E-02
 cg2d: Sum(rhs),rhsMax =   5.16739429023971E-14  2.79829488140543E-02
 cg2d: Sum(rhs),rhsMax =   2.47253606477926E-13  2.81794367994525E-02
 cg2d: Sum(rhs),rhsMax =   5.60107515923391E-14  2.83557894568451E-02
 cg2d: Sum(rhs),rhsMax =  -7.44890260584441E-14  2.85134041011848E-02
 cg2d: Sum(rhs),rhsMax =  -3.02452507483508E-13  2.86548723191471E-02
 cg2d: Sum(rhs),rhsMax =  -6.99509894452888E-14  2.87838166139028E-02
 cg2d: Sum(rhs),rhsMax =   2.81191736561937E-13  2.89046581565448E-02
 cg2d: Sum(rhs),rhsMax =  -3.95440624689769E-13  2.90223316585369E-02
 cg2d: Sum(rhs),rhsMax =  -1.71564151774106E-13  2.91419659216113E-02
 cg2d: Sum(rhs),rhsMax =  -1.63265234665033E-13  2.92685525240232E-02
 cg2d: Sum(rhs),rhsMax =   3.92533228144032E-13  2.94066242159211E-02
 cg2d: Sum(rhs),rhsMax =  -5.16531262206854E-14  2.95626925793413E-02
 cg2d: Sum(rhs),rhsMax =  -8.12336309330419E-14  2.97778224090806E-02
 cg2d: Sum(rhs),rhsMax =  -3.79224429636338E-13  2.99960206357922E-02
 cg2d: Sum(rhs),rhsMax =   1.40575051599257E-13  3.02161807554215E-02
 cg2d: Sum(rhs),rhsMax =   2.70075628527877E-13  3.04373626492309E-02
 cg2d: Sum(rhs),rhsMax =  -3.76983166905376E-13  3.06587481855805E-02
 cg2d: Sum(rhs),rhsMax =  -3.61655150271645E-14  3.08795990808330E-02
 cg2d: Sum(rhs),rhsMax =  -3.18904624929672E-13  3.11417659449007E-02
 cg2d: Sum(rhs),rhsMax =  -7.12471748265386E-13  3.14168470135621E-02
 cg2d: Sum(rhs),rhsMax =   4.21815360418520E-14  3.16916739655422E-02
 cg2d: Sum(rhs),rhsMax =  -1.66158753422962E-13  3.19611682763160E-02
 cg2d: Sum(rhs),rhsMax =  -2.29552488129059E-13  3.22205334793098E-02
 cg2d: Sum(rhs),rhsMax =   6.07111583228459E-13  3.24655279757755E-02
 cg2d: Sum(rhs),rhsMax =   1.11473330566270E-13  3.26927038977188E-02
 cg2d: Sum(rhs),rhsMax =   1.02876041019329E-13  3.28995839463641E-02
 cg2d: Sum(rhs),rhsMax =   1.44238787580520E-13  3.30847745517792E-02
 cg2d: Sum(rhs),rhsMax =  -2.28775332011821E-14  3.32480236438522E-02
 cg2d: Sum(rhs),rhsMax =  -5.38805111638396E-14  3.33902137948323E-02
 cg2d: Sum(rhs),rhsMax =  -3.97036570287668E-13  3.35132954504894E-02
 cg2d: Sum(rhs),rhsMax =  -2.56468457582315E-13  3.36201638070380E-02
 cg2d: Sum(rhs),rhsMax =   5.35196886808365E-14  3.37144769458440E-02
 cg2d: Sum(rhs),rhsMax =  -3.97085142544995E-13  3.38004392254025E-02
 cg2d: Sum(rhs),rhsMax =  -1.44738387941601E-13  3.38825782394801E-02
 cg2d: Sum(rhs),rhsMax =   3.66373598126302E-14  3.39655053892646E-02
 cg2d: Sum(rhs),rhsMax =  -1.69524116966357E-13  3.40904747223139E-02
 cg2d: Sum(rhs),rhsMax =   2.71074829250040E-13  3.42333989642905E-02
 cg2d: Sum(rhs),rhsMax =   2.22787066572749E-13  3.43811296124105E-02
 cg2d: Sum(rhs),rhsMax =   3.40623362848902E-13  3.45354758779694E-02
 cg2d: Sum(rhs),rhsMax =  -1.13457854222787E-13  3.46980016236988E-02
 cg2d: Sum(rhs),rhsMax =  -1.05609965217468E-13  3.48699592078029E-02
 cg2d: Sum(rhs),rhsMax =  -1.47187817489680E-13  3.50522329790644E-02
 cg2d: Sum(rhs),rhsMax =   4.75522399234762E-14  3.52452923110389E-02
 cg2d: Sum(rhs),rhsMax =  -2.81233369925360E-14  3.54491568478054E-02
 cg2d: Sum(rhs),rhsMax =  -1.54674884011996E-13  3.56633786186505E-02
 cg2d: Sum(rhs),rhsMax =   6.04308270091281E-14  3.58870453257439E-02
 cg2d: Sum(rhs),rhsMax =  -4.82246187427648E-13  3.61188098342888E-02
 cg2d: Sum(rhs),rhsMax =   2.92224577869149E-13  3.63569378312089E-02
 cg2d: Sum(rhs),rhsMax =   2.97740998522755E-13  3.65993319162786E-02
 cg2d: Sum(rhs),rhsMax =  -3.87537224533219E-14  3.68435623376536E-02
 cg2d: Sum(rhs),rhsMax =   1.03486663682872E-13  3.70872490551086E-02
 cg2d: Sum(rhs),rhsMax =  -1.31346322707060E-13  3.73280516440930E-02
 cg2d: Sum(rhs),rhsMax =   2.01227923213310E-13  3.75637395725450E-02
 cg2d: Sum(rhs),rhsMax =  -1.73076830645158E-13  3.77922655020513E-02
 cg2d: Sum(rhs),rhsMax =  -1.16621989842969E-13  3.80118444430071E-02
 cg2d: Sum(rhs),rhsMax =  -1.39381561847784E-13  3.82210281674076E-02
 cg2d: Sum(rhs),rhsMax =  -5.75005321135080E-13  3.84187707166590E-02
 cg2d: Sum(rhs),rhsMax =  -1.02765018716866E-14  3.86044730979758E-02
 cg2d: Sum(rhs),rhsMax =   5.57033585923961E-13  3.87780035505387E-02
 cg2d: Sum(rhs),rhsMax =   1.85892967685675E-14  3.89396964375084E-02
 cg2d: Sum(rhs),rhsMax =  -3.65735219887142E-13  3.90903320021420E-02
 cg2d: Sum(rhs),rhsMax =   4.05966926741996E-13  3.92310829279670E-02
 cg2d: Sum(rhs),rhsMax =  -2.22946661132539E-13  3.93634508414341E-02
 cg2d: Sum(rhs),rhsMax =   2.90115154122361E-13  3.94891886752530E-02
 cg2d: Sum(rhs),rhsMax =   6.54754028772686E-14  3.96102137038587E-02
 cg2d: Sum(rhs),rhsMax =   3.76934594648048E-13  3.97285159210387E-02
 cg2d: Sum(rhs),rhsMax =  -7.08669234406045E-14  3.98460662378732E-02
 cg2d: Sum(rhs),rhsMax =  -1.32338584535319E-13  3.99647309084155E-02
 cg2d: Sum(rhs),rhsMax =   4.36067848497146E-13  4.00861903111500E-02
 cg2d: Sum(rhs),rhsMax =   4.17166301502903E-14  4.02183926097648E-02
 cg2d: Sum(rhs),rhsMax =   6.07361383409000E-14  4.03851913512296E-02
 cg2d: Sum(rhs),rhsMax =   1.83159043487535E-13  4.05557346803240E-02
 cg2d: Sum(rhs),rhsMax =  -3.35481642466107E-13  4.07294110209327E-02
 cg2d: Sum(rhs),rhsMax =  -1.15463194561016E-14  4.09054890678118E-02
 cg2d: Sum(rhs),rhsMax =   5.88577797611123E-13  4.10831745986904E-02
 cg2d: Sum(rhs),rhsMax =   3.54646867428698E-13  4.12616638436331E-02
 cg2d: Sum(rhs),rhsMax =   3.38611083616769E-13  4.14401870039713E-02
 cg2d: Sum(rhs),rhsMax =   4.43464709398711E-14  4.16180439383798E-02
 cg2d: Sum(rhs),rhsMax =  -3.75401099095285E-13  4.17946340804645E-02
 cg2d: Sum(rhs),rhsMax =  -1.39929734466193E-13  4.19694729618129E-02
 cg2d: Sum(rhs),rhsMax =  -1.64757096854373E-13  4.21422065694563E-02
 cg2d: Sum(rhs),rhsMax =  -9.29395449489334E-14  4.23126137049415E-02
 cg2d: Sum(rhs),rhsMax =   3.62765373296270E-14  4.24805955608189E-02
 cg2d: Sum(rhs),rhsMax =  -6.41778297172380E-14  4.26461641059956E-02
 cg2d: Sum(rhs),rhsMax =  -2.64156752027844E-13  4.28094279646740E-02
 cg2d: Sum(rhs),rhsMax =   1.62973801121069E-13  4.29705768126937E-02
 cg2d: Sum(rhs),rhsMax =  -2.56725196656760E-13  4.31298644247672E-02
 cg2d: Sum(rhs),rhsMax =  -4.30142033103209E-14  4.32875911173845E-02
 cg2d: Sum(rhs),rhsMax =  -4.67056948671996E-14  4.34440725949053E-02
 cg2d: Sum(rhs),rhsMax =   2.80227230309293E-13  4.35994856637992E-02
 cg2d: Sum(rhs),rhsMax =   7.67857999406374E-14  4.37541055955819E-02
 cg2d: Sum(rhs),rhsMax =  -3.08190972742040E-13  4.39083304038594E-02
 cg2d: Sum(rhs),rhsMax =  -1.17413023748014E-13  4.40625806672501E-02
 cg2d: Sum(rhs),rhsMax =   2.47094011918136E-13  4.42172511770035E-02
 cg2d: Sum(rhs),rhsMax =   1.40804035098085E-13  4.43726835382416E-02
 cg2d: Sum(rhs),rhsMax =   2.95236057823445E-13  4.45291595258653E-02
 cg2d: Sum(rhs),rhsMax =  -4.00936228661664E-13  4.46869078786114E-02
 cg2d: Sum(rhs),rhsMax =   4.45060654996610E-14  4.48461153420849E-02
 cg2d: Sum(rhs),rhsMax =   4.35339264637236E-13  4.50069456342505E-02
 cg2d: Sum(rhs),rhsMax =   9.55208134811869E-14  4.51695504734290E-02
 cg2d: Sum(rhs),rhsMax =   1.19723675418015E-13  4.53340722041226E-02
 cg2d: Sum(rhs),rhsMax =   3.36085326235747E-13  4.55006344353273E-02
 cg2d: Sum(rhs),rhsMax =   7.72090724687757E-14  4.56693334307133E-02
 cg2d: Sum(rhs),rhsMax =   6.53990750443256E-14  4.58402253991619E-02
 cg2d: Sum(rhs),rhsMax =  -2.33112140701763E-13  4.60133179304049E-02
 cg2d: Sum(rhs),rhsMax =   3.04402336670506E-13  4.61885658280330E-02
 cg2d: Sum(rhs),rhsMax =   1.37868882976733E-13  4.63658707189007E-02
 cg2d: Sum(rhs),rhsMax =   2.08548456281932E-13  4.65450829595942E-02
 cg2d: Sum(rhs),rhsMax =   3.55729334877708E-13  4.67260036631635E-02
 cg2d: Sum(rhs),rhsMax =   4.88775686591225E-14  4.69083896312820E-02
 cg2d: Sum(rhs),rhsMax =  -7.46486206182340E-14  4.70919550355638E-02
 cg2d: Sum(rhs),rhsMax =  -3.26488835966643E-13  4.72763745226234E-02
 cg2d: Sum(rhs),rhsMax =  -1.08607567383956E-13  4.74612899435379E-02
 cg2d: Sum(rhs),rhsMax =   3.50219853118006E-13  4.76463167557520E-02
 cg2d: Sum(rhs),rhsMax =  -2.05009620390939E-13  4.78310543448300E-02
 cg2d: Sum(rhs),rhsMax =  -3.48610029732299E-14  4.80150988526392E-02
 cg2d: Sum(rhs),rhsMax =  -6.93056723122254E-14  4.81980536016640E-02
 cg2d: Sum(rhs),rhsMax =  -2.12302397883946E-13  4.83795338181984E-02
 cg2d: Sum(rhs),rhsMax =   1.92831861589582E-13  4.85591812567254E-02
 cg2d: Sum(rhs),rhsMax =   1.45272682772202E-13  4.87366768551413E-02
 cg2d: Sum(rhs),rhsMax =  -9.86710713135608E-14  4.89117490999524E-02
 cg2d: Sum(rhs),rhsMax =   3.34857142014755E-13  4.90841793176655E-02
 cg2d: Sum(rhs),rhsMax =   1.16781584402759E-13  4.92538073390153E-02
 cg2d: Sum(rhs),rhsMax =  -4.89212836907171E-13  4.94205341002270E-02
 cg2d: Sum(rhs),rhsMax =  -2.48551179637957E-14  4.95843225605472E-02
 cg2d: Sum(rhs),rhsMax =   4.76271799776384E-13  4.97451941910353E-02
 cg2d: Sum(rhs),rhsMax =   1.05387920612543E-13  4.99032252723506E-02
 cg2d: Sum(rhs),rhsMax =   1.69260438998009E-13  5.00585398507761E-02
 cg2d: Sum(rhs),rhsMax =   2.22065421606743E-13  5.02113017503506E-02
 cg2d: Sum(rhs),rhsMax =  -7.49400541621981E-15  5.03617053764603E-02
 cg2d: Sum(rhs),rhsMax =  -2.04142258652951E-13  5.05099661474995E-02
 cg2d: Sum(rhs),rhsMax =   2.74349987172684E-13  5.06563094731778E-02
 cg2d: Sum(rhs),rhsMax =  -9.37930288991140E-14  5.08009606675534E-02
 cg2d: Sum(rhs),rhsMax =   5.08620923156400E-14  5.09441393892574E-02
 cg2d: Sum(rhs),rhsMax =   2.75057754350883E-14  5.10860468511954E-02
 cg2d: Sum(rhs),rhsMax =  -9.61827839596197E-13  5.12268549499395E-02
 cg2d: Sum(rhs),rhsMax =  -7.67032271031809E-13  5.13667056452569E-02
 cg2d: Sum(rhs),rhsMax =   1.74034398003897E-13  5.15057083501043E-02
 cg2d: Sum(rhs),rhsMax =   7.98944244095878E-14  5.16439401433556E-02
 cg2d: Sum(rhs),rhsMax =  -9.16627884706145E-15  5.17814537022947E-02
 cg2d: Sum(rhs),rhsMax =   2.81261125500976E-13  5.19182820850396E-02
 cg2d: Sum(rhs),rhsMax =   1.52190759994397E-13  5.20544421504388E-02
 cg2d: Sum(rhs),rhsMax =  -3.92345878008626E-13  5.21899412773467E-02
 cg2d: Sum(rhs),rhsMax =   1.40179534646734E-13  5.23247751708242E-02
 cg2d: Sum(rhs),rhsMax =  -2.02338146237935E-13  5.24589339294013E-02
 cg2d: Sum(rhs),rhsMax =   6.00214322687975E-15  5.25924123425393E-02
 cg2d: Sum(rhs),rhsMax =   2.19754769936742E-14  5.27252214076572E-02
 cg2d: Sum(rhs),rhsMax =   2.02809991023400E-13  5.28573968237272E-02
 cg2d: Sum(rhs),rhsMax =  -2.83717493942959E-13  5.30007361173496E-02
 cg2d: Sum(rhs),rhsMax =  -3.82881226723697E-13  5.31590056370769E-02
 cg2d: Sum(rhs),rhsMax =   3.71772057583541E-13  5.33170844126374E-02
 cg2d: Sum(rhs),rhsMax =   9.54028522848205E-14  5.34748662566163E-02
 cg2d: Sum(rhs),rhsMax =   5.82957293548958E-13  5.36322790873072E-02
 cg2d: Sum(rhs),rhsMax =   4.23348855971284E-13  5.37892903794584E-02
 cg2d: Sum(rhs),rhsMax =  -8.03593303011496E-14  5.39459064841874E-02
 cg2d: Sum(rhs),rhsMax =   4.64767113683706E-14  5.41021728056707E-02
 cg2d: Sum(rhs),rhsMax =   1.40436273721178E-13  5.42581706276631E-02
 cg2d: Sum(rhs),rhsMax =  -2.78228828864968E-13  5.44140116541576E-02
 cg2d: Sum(rhs),rhsMax =   2.32376617947949E-13  5.45698309931793E-02
 cg2d: Sum(rhs),rhsMax =  -2.89657187124703E-13  5.47257790192242E-02
 cg2d: Sum(rhs),rhsMax =  -4.33209024208736E-13  5.48820173602675E-02
 cg2d: Sum(rhs),rhsMax =  -1.79425918567233E-13  5.50386879619304E-02
 cg2d: Sum(rhs),rhsMax =  -1.88724036398469E-13  5.51959442067041E-02
 cg2d: Sum(rhs),rhsMax =  -4.13218070871579E-13  5.53539006254824E-02
 cg2d: Sum(rhs),rhsMax =   1.23290266884624E-13  5.55126405110510E-02
 cg2d: Sum(rhs),rhsMax =   3.50372508783892E-13  5.56722302501678E-02
 cg2d: Sum(rhs),rhsMax =  -6.76222966511375E-13  5.58326788349117E-02
 cg2d: Sum(rhs),rhsMax =   4.73003580747644E-13  5.59939465244551E-02
 cg2d: Sum(rhs),rhsMax =  -3.81514264624627E-13  5.61559613146039E-02
 cg2d: Sum(rhs),rhsMax =  -4.80754325238308E-13  5.63186026762347E-02
 cg2d: Sum(rhs),rhsMax =  -1.61752555793981E-13  5.64817092170836E-02
 cg2d: Sum(rhs),rhsMax =   1.96544169828172E-13  5.66450837043933E-02
 cg2d: Sum(rhs),rhsMax =   7.53078155391051E-14  5.68085000575138E-02
 cg2d: Sum(rhs),rhsMax =  -1.88807303125316E-13  5.69717117440478E-02
 cg2d: Sum(rhs),rhsMax =   4.53706516800878E-13  5.71344611692639E-02
 cg2d: Sum(rhs),rhsMax =   2.99045510576690E-13  5.72964854706418E-02
 cg2d: Sum(rhs),rhsMax =  -2.60992616407663E-13  5.74575310743596E-02
 cg2d: Sum(rhs),rhsMax =   8.05883137999786E-14  5.76173683864191E-02
 cg2d: Sum(rhs),rhsMax =   3.22346316306010E-13  5.77758073428075E-02
 cg2d: Sum(rhs),rhsMax =  -6.72913114119211E-13  5.79326798157204E-02
 cg2d: Sum(rhs),rhsMax =   4.24174584345849E-14  5.80878625801781E-02
 cg2d: Sum(rhs),rhsMax =  -6.71220024006658E-13  5.82412671526809E-02
 cg2d: Sum(rhs),rhsMax =   6.71442068611583E-13  5.83928641400866E-02
 cg2d: Sum(rhs),rhsMax =   2.14335493797790E-13  5.85426615061925E-02
 cg2d: Sum(rhs),rhsMax =   3.54799523094584E-13  5.86906949704489E-02
 cg2d: Sum(rhs),rhsMax =   9.55763246324182E-14  5.88370431252148E-02
 cg2d: Sum(rhs),rhsMax =   5.51642065360625E-14  5.89818445030663E-02
 cg2d: Sum(rhs),rhsMax =   1.54244672589954E-13  5.91252576884541E-02
 cg2d: Sum(rhs),rhsMax =  -4.20476153895066E-13  5.92674685955479E-02
 cg2d: Sum(rhs),rhsMax =  -4.63865057476198E-14  5.94086678625090E-02
 cg2d: Sum(rhs),rhsMax =   4.19567158793654E-13  5.95490577599174E-02
 cg2d: Sum(rhs),rhsMax =   2.15182038854067E-13  5.96888237483806E-02
 cg2d: Sum(rhs),rhsMax =   1.12146403274949E-13  5.98281298817991E-02
 cg2d: Sum(rhs),rhsMax =   1.83991710756004E-13  5.99671132340691E-02
 cg2d: Sum(rhs),rhsMax =  -1.41844869183672E-13  6.01058805113358E-02
 cg2d: Sum(rhs),rhsMax =   8.62504512255668E-15  6.02445060794638E-02
 cg2d: Sum(rhs),rhsMax =   1.24844579119099E-13  6.03830307082907E-02
 cg2d: Sum(rhs),rhsMax =   2.16417161968963E-13  6.05214607271187E-02
 cg2d: Sum(rhs),rhsMax =   3.20264648134838E-13  6.06597676249571E-02
 cg2d: Sum(rhs),rhsMax =  -3.67435248893599E-13  6.07978893360280E-02
 cg2d: Sum(rhs),rhsMax =  -2.02636518675803E-13  6.09357331747975E-02
 cg2d: Sum(rhs),rhsMax =  -3.19778925561565E-13  6.10731806954009E-02
 cg2d: Sum(rhs),rhsMax =  -1.27314825348890E-13  6.12100945099050E-02
 cg2d: Sum(rhs),rhsMax =  -2.09887662805386E-13  6.13463263751899E-02
 cg2d: Sum(rhs),rhsMax =   9.10799213826863E-14  6.14817258334731E-02
 cg2d: Sum(rhs),rhsMax =   2.95458102428370E-14  6.16161489784186E-02
 cg2d: Sum(rhs),rhsMax =  -2.08819073144184E-13  6.17494667448148E-02
 cg2d: Sum(rhs),rhsMax =   2.28983498828939E-13  6.18815720179061E-02
 cg2d: Sum(rhs),rhsMax =   4.19893286807138E-13  6.20123895728923E-02
 cg2d: Sum(rhs),rhsMax =  -3.67275654333810E-13  6.21418674045638E-02
 cg2d: Sum(rhs),rhsMax =  -2.31897834268580E-14  6.22699935997937E-02
 cg2d: Sum(rhs),rhsMax =  -6.37059849317723E-14  6.23967925416351E-02
 cg2d: Sum(rhs),rhsMax =  -6.10830830360953E-14  6.25223329448654E-02
 cg2d: Sum(rhs),rhsMax =  -3.31047689261510E-13  6.26467161761577E-02
 cg2d: Sum(rhs),rhsMax =   3.17461334997660E-13  6.27700694296358E-02
 cg2d: Sum(rhs),rhsMax =   3.55881990543594E-13  6.28925450592865E-02
 cg2d: Sum(rhs),rhsMax =   2.29469221402212E-14  6.30143144707262E-02
 cg2d: Sum(rhs),rhsMax =  -4.93820262459366E-13  6.31355624573150E-02
 cg2d: Sum(rhs),rhsMax =   4.85507467562485E-13  6.32564807360088E-02
 cg2d: Sum(rhs),rhsMax =  -1.41199552050608E-13  6.33772613347958E-02
 cg2d: Sum(rhs),rhsMax =  -4.87020146433537E-13  6.34980894117613E-02
 cg2d: Sum(rhs),rhsMax =   1.05394859506447E-13  6.36191359560788E-02
 cg2d: Sum(rhs),rhsMax =   4.59958460208298E-13  6.37405509682419E-02
 cg2d: Sum(rhs),rhsMax =  -3.17593173981834E-14  6.38624575420883E-02
 cg2d: Sum(rhs),rhsMax =  -3.83026943495679E-15  6.39849469410463E-02
 cg2d: Sum(rhs),rhsMax =  -1.28529131782074E-13  6.41080747714007E-02
 cg2d: Sum(rhs),rhsMax =   7.38235861330594E-13  6.42318582310507E-02
 cg2d: Sum(rhs),rhsMax =  -5.07371922253697E-14  6.43562739647857E-02
 cg2d: Sum(rhs),rhsMax =  -7.31428806410861E-14  6.44812597945837E-02
 cg2d: Sum(rhs),rhsMax =   1.67553471097648E-13  6.46067152917045E-02
 cg2d: Sum(rhs),rhsMax =  -2.08257022737968E-13  6.47325053850352E-02
 cg2d: Sum(rhs),rhsMax =  -4.88775686591225E-13  6.48584642737737E-02
 cg2d: Sum(rhs),rhsMax =  -4.87526685688522E-14  6.49843999878090E-02
 cg2d: Sum(rhs),rhsMax =   3.43648720591005E-13  6.51100996035557E-02
 cg2d: Sum(rhs),rhsMax =   2.59924026746461E-13  6.52353356960088E-02
 cg2d: Sum(rhs),rhsMax =  -1.53765888910584E-13  6.53598736233181E-02
 cg2d: Sum(rhs),rhsMax =  -1.34912914173668E-13  6.54834793850028E-02
 cg2d: Sum(rhs),rhsMax =   4.38364622379339E-13  6.56059278235206E-02
 cg2d: Sum(rhs),rhsMax =   2.52686760404686E-13  6.57270093017646E-02
 cg2d: Sum(rhs),rhsMax =  -4.00568467284756E-13  6.58465358586106E-02
 cg2d: Sum(rhs),rhsMax =  -1.67289793129299E-13  6.59643463417697E-02
 cg2d: Sum(rhs),rhsMax =   7.24323379053260E-13  6.60803142879283E-02
 cg2d: Sum(rhs),rhsMax =  -2.14751827432025E-13  6.61943445916255E-02
 cg2d: Sum(rhs),rhsMax =   1.88765669761892E-13  6.63063698006257E-02
 cg2d: Sum(rhs),rhsMax =  -7.13318293321663E-14  6.64163552975958E-02
 cg2d: Sum(rhs),rhsMax =   1.73631942157471E-13  6.65243007929364E-02
 cg2d: Sum(rhs),rhsMax =  -1.86656246015104E-15  6.66302401405555E-02
 cg2d: Sum(rhs),rhsMax =   3.56221996344885E-13  6.67342398222273E-02
 cg2d: Sum(rhs),rhsMax =  -2.47787901308527E-14  6.68363961302597E-02
 cg2d: Sum(rhs),rhsMax =   1.62127256064792E-13  6.69368336577509E-02
 cg2d: Sum(rhs),rhsMax =   1.37653777265712E-13  6.70356929801173E-02
 cg2d: Sum(rhs),rhsMax =  -4.14425438410859E-13  6.71331334137814E-02
 cg2d: Sum(rhs),rhsMax =  -1.37723166204751E-13  6.72293263413422E-02
 cg2d: Sum(rhs),rhsMax =  -5.91693360973977E-13  6.73244492790504E-02
 cg2d: Sum(rhs),rhsMax =   1.99160132829945E-13  6.74186795736798E-02
 cg2d: Sum(rhs),rhsMax =  -2.80053757961696E-14  6.75121888754893E-02
 cg2d: Sum(rhs),rhsMax =   7.92560461704284E-14  6.76051346718252E-02
 cg2d: Sum(rhs),rhsMax =   2.60617916136852E-13  6.76976680996072E-02
 cg2d: Sum(rhs),rhsMax =   9.55555079507064E-14  6.77899246799429E-02
 cg2d: Sum(rhs),rhsMax =   7.83054177055931E-14  6.78820134284724E-02
 cg2d: Sum(rhs),rhsMax =   1.75894021570144E-13  6.79740259762177E-02
 cg2d: Sum(rhs),rhsMax =  -4.08978406696292E-14  6.80660335969280E-02
 cg2d: Sum(rhs),rhsMax =   7.37632177560954E-13  6.81690605532266E-02
 cg2d: Sum(rhs),rhsMax =  -4.75661177112841E-14  6.82757450159170E-02
 cg2d: Sum(rhs),rhsMax =   4.10241285386803E-13  6.83821558774363E-02
 cg2d: Sum(rhs),rhsMax =   2.55975796115138E-14  6.84882927463150E-02
 cg2d: Sum(rhs),rhsMax =  -2.42146580564651E-13  6.85941411833910E-02
 cg2d: Sum(rhs),rhsMax =  -3.87967435955261E-13  6.86996747456929E-02
 cg2d: Sum(rhs),rhsMax =   6.63635812969687E-14  6.88048573871783E-02
 cg2d: Sum(rhs),rhsMax =   1.51260948211274E-13  6.89096460899236E-02
 cg2d: Sum(rhs),rhsMax =   3.95627974825175E-13  6.90139929448190E-02
 cg2d: Sum(rhs),rhsMax =  -4.33889035811319E-14  6.91178476415177E-02
 cg2d: Sum(rhs),rhsMax =   3.02112501682217E-13  6.92211601803028E-02
 cg2d: Sum(rhs),rhsMax =  -2.48141784897626E-13  6.93238837033884E-02
 cg2d: Sum(rhs),rhsMax =   2.10838291270221E-13  6.94259765737093E-02
 cg2d: Sum(rhs),rhsMax =   2.86014267825152E-13  6.95274041858496E-02
 cg2d: Sum(rhs),rhsMax =  -6.19920781375072E-14  6.96281405340145E-02
 cg2d: Sum(rhs),rhsMax =  -7.66817165320788E-14  6.97281695021991E-02
 cg2d: Sum(rhs),rhsMax =  -4.26554624954889E-13  6.98274817644877E-02
 cg2d: Sum(rhs),rhsMax =  -3.59642871039512E-14  6.99261021835597E-02
 cg2d: Sum(rhs),rhsMax =  -2.17194318086200E-13  7.00240542212699E-02
 cg2d: Sum(rhs),rhsMax =  -3.24788806960186E-13  7.01213563815443E-02
 cg2d: Sum(rhs),rhsMax =   1.18551002348255E-13  7.02180401701639E-02
 cg2d: Sum(rhs),rhsMax =   2.82072976087733E-13  7.03141483599456E-02
 cg2d: Sum(rhs),rhsMax =  -3.95586341461751E-14  7.04097336629963E-02
 cg2d: Sum(rhs),rhsMax =  -3.25087179398054E-13  7.05048523063772E-02
 cg2d: Sum(rhs),rhsMax =  -4.64697724744667E-14  7.05995716989687E-02
 cg2d: Sum(rhs),rhsMax =   4.73662775668515E-13  7.06939579913289E-02
 cg2d: Sum(rhs),rhsMax =   1.58970059338515E-13  7.07880766015525E-02
 cg2d: Sum(rhs),rhsMax =  -4.20379009380412E-13  7.08819929910030E-02
 cg2d: Sum(rhs),rhsMax =  -1.65464864032572E-13  7.09789065562053E-02
 cg2d: Sum(rhs),rhsMax =  -2.45081732686003E-13  7.10835074442684E-02
 cg2d: Sum(rhs),rhsMax =  -2.46615228238767E-13  7.11880887432224E-02
 cg2d: Sum(rhs),rhsMax =  -4.52485271473790E-13  7.12926837700953E-02
 cg2d: Sum(rhs),rhsMax =  -1.76476888658073E-13  7.13973170874709E-02
 cg2d: Sum(rhs),rhsMax =   4.81135964403023E-13  7.15020061863447E-02
 cg2d: Sum(rhs),rhsMax =  -1.76400560825130E-13  7.16067612895596E-02
 cg2d: Sum(rhs),rhsMax =   3.89632770492199E-13  7.17115872128406E-02
 cg2d: Sum(rhs),rhsMax =  -1.75755243692066E-13  7.18164803920567E-02
 cg2d: Sum(rhs),rhsMax =  -1.80799819560207E-13  7.19214340893165E-02
 cg2d: Sum(rhs),rhsMax =  -3.01383917822307E-13  7.20264380233489E-02
 cg2d: Sum(rhs),rhsMax =   9.57081636165924E-14  7.21314770785535E-02
 cg2d: Sum(rhs),rhsMax =  -2.34569308421584E-13  7.22365292265634E-02
 cg2d: Sum(rhs),rhsMax =  -2.56565602096970E-13  7.23415666908020E-02
 cg2d: Sum(rhs),rhsMax =   2.12503625807159E-13  7.24465552658205E-02
 cg2d: Sum(rhs),rhsMax =  -1.54709578481516E-13  7.25514598415350E-02
 cg2d: Sum(rhs),rhsMax =  -2.78804757058992E-13  7.26562400825079E-02
 cg2d: Sum(rhs),rhsMax =  -1.61468061143921E-13  7.27608511222435E-02
 cg2d: Sum(rhs),rhsMax =  -1.30916111285018E-13  7.28652463700957E-02
 cg2d: Sum(rhs),rhsMax =  -2.51826337560601E-13  7.29693758876422E-02
 cg2d: Sum(rhs),rhsMax =  -3.35634298131993E-14  7.30731853281906E-02
 cg2d: Sum(rhs),rhsMax =   6.57252030578093E-14  7.31766160050221E-02
 cg2d: Sum(rhs),rhsMax =   5.56985013666633E-14  7.32796061889654E-02
 cg2d: Sum(rhs),rhsMax =  -1.31235300404597E-13  7.33820929776842E-02
 cg2d: Sum(rhs),rhsMax =  -1.16649745418584E-13  7.34840135907815E-02
 cg2d: Sum(rhs),rhsMax =   4.63171168085807E-14  7.35853082077568E-02
 cg2d: Sum(rhs),rhsMax =   3.01397795610114E-13  7.36859187773284E-02
 cg2d: Sum(rhs),rhsMax =  -2.21080098672388E-13  7.37857891970214E-02
 cg2d: Sum(rhs),rhsMax =   1.20327359187655E-13  7.38848674892396E-02
 cg2d: Sum(rhs),rhsMax =   2.08180694905025E-13  7.39831093638444E-02
 cg2d: Sum(rhs),rhsMax =   2.08083550390370E-13  7.40804816712846E-02
 cg2d: Sum(rhs),rhsMax =  -2.17950657521726E-14  7.41769648188584E-02
 cg2d: Sum(rhs),rhsMax =   2.42444953002519E-14  7.42725537608629E-02
 cg2d: Sum(rhs),rhsMax =  -1.40026878980848E-14  7.43672576847470E-02
 cg2d: Sum(rhs),rhsMax =  -3.99430488684516E-13  7.44610988848209E-02
 cg2d: Sum(rhs),rhsMax =  -5.21735432634785E-14  7.45541107742994E-02
 cg2d: Sum(rhs),rhsMax =   2.02352024025743E-13  7.46463371221194E-02
 cg2d: Sum(rhs),rhsMax =  -5.12090370108353E-14  7.47378330491479E-02
 cg2d: Sum(rhs),rhsMax =   4.96123975235463E-13  7.48286628403362E-02
 cg2d: Sum(rhs),rhsMax =  -3.42850747792056E-14  7.49189005070603E-02
 cg2d: Sum(rhs),rhsMax =   3.54119511492001E-13  7.50086295589734E-02
 cg2d: Sum(rhs),rhsMax =  -1.01404995511700E-13  7.50979413281788E-02
 cg2d: Sum(rhs),rhsMax =  -1.26551547019460E-13  7.51869351843784E-02
 cg2d: Sum(rhs),rhsMax =  -1.45980449950400E-13  7.52757155018522E-02
 cg2d: Sum(rhs),rhsMax =  -7.52939377512973E-14  7.53643947262488E-02
 cg2d: Sum(rhs),rhsMax =  -2.35478303522996E-13  7.54530826473879E-02
 cg2d: Sum(rhs),rhsMax =  -2.60083621306251E-13  7.55418794460836E-02
 cg2d: Sum(rhs),rhsMax =   9.73249258962028E-14  7.56308803504221E-02
 cg2d: Sum(rhs),rhsMax =   3.19667903259102E-13  7.57201709666521E-02
 cg2d: Sum(rhs),rhsMax =   1.78794479221978E-13  7.58101387544037E-02
 cg2d: Sum(rhs),rhsMax =   2.61686505798053E-13  7.59009990953516E-02
 cg2d: Sum(rhs),rhsMax =   9.78453429389958E-14  7.59923178916216E-02
 cg2d: Sum(rhs),rhsMax =  -8.33291768920219E-14  7.60841504678544E-02
 cg2d: Sum(rhs),rhsMax =   3.55999951739960E-13  7.61765382014674E-02
 cg2d: Sum(rhs),rhsMax =  -1.88314641658138E-13  7.62695073886887E-02
 cg2d: Sum(rhs),rhsMax =  -2.10623185559200E-13  7.63630678459822E-02
 cg2d: Sum(rhs),rhsMax =  -3.65998897855491E-13  7.64572117243652E-02
 cg2d: Sum(rhs),rhsMax =   2.17374729327702E-13  7.65519007764390E-02
 cg2d: Sum(rhs),rhsMax =  -3.13506165472432E-13  7.66470719831202E-02
 cg2d: Sum(rhs),rhsMax =  -3.82853471148081E-13  7.67426649076852E-02
 cg2d: Sum(rhs),rhsMax =   3.91284227241329E-14  7.68386121660542E-02
 cg2d: Sum(rhs),rhsMax =  -3.82659182118772E-13  7.69348378872932E-02
 cg2d: Sum(rhs),rhsMax =   4.47884784815500E-13  7.70312572866829E-02
 cg2d: Sum(rhs),rhsMax =   2.68216004961630E-13  7.71277773908462E-02
 cg2d: Sum(rhs),rhsMax =  -9.18640163938278E-14  7.72242987383876E-02
 cg2d: Sum(rhs),rhsMax =   9.06497099606440E-14  7.73207179324639E-02
 cg2d: Sum(rhs),rhsMax =  -3.79779541148650E-13  7.74169311665016E-02
 cg2d: Sum(rhs),rhsMax =   5.46264422585097E-13  7.75128405662875E-02
 cg2d: Sum(rhs),rhsMax =  -5.97716320882569E-14  7.76083563119860E-02
 cg2d: Sum(rhs),rhsMax =   5.11882203291236E-14  7.77033999645354E-02
 cg2d: Sum(rhs),rhsMax =   4.43950431971984E-14  7.77979015440437E-02
 cg2d: Sum(rhs),rhsMax =   1.50157664080552E-13  7.78918019949739E-02
 cg2d: Sum(rhs),rhsMax =   1.72799274889002E-13  7.79850526867272E-02
 cg2d: Sum(rhs),rhsMax =  -4.08673095364520E-13  7.80776166945501E-02
 cg2d: Sum(rhs),rhsMax =   3.58976737224737E-13  7.81694703515730E-02
 cg2d: Sum(rhs),rhsMax =  -1.14623588398644E-13  7.82606044549522E-02
 cg2d: Sum(rhs),rhsMax =   5.40748001931490E-14  7.83510247597737E-02
 cg2d: Sum(rhs),rhsMax =  -7.64187324531207E-13  7.84407517325855E-02
 cg2d: Sum(rhs),rhsMax =  -2.40134301332517E-13  7.85298196953575E-02
 cg2d: Sum(rhs),rhsMax =  -2.37539155012456E-13  7.86182755255453E-02
 cg2d: Sum(rhs),rhsMax =  -4.06855105161696E-13  7.87061771858941E-02
 cg2d: Sum(rhs),rhsMax =  -6.09998163092484E-14  7.87935913520097E-02
 cg2d: Sum(rhs),rhsMax =  -3.27661509036403E-13  7.88805910655263E-02
 cg2d: Sum(rhs),rhsMax =   2.91718038614164E-13  7.89672534807147E-02
 cg2d: Sum(rhs),rhsMax =  -4.94597418576603E-13  7.90536572251132E-02
 cg2d: Sum(rhs),rhsMax =  -1.10869646796630E-13  7.91398792246383E-02
 cg2d: Sum(rhs),rhsMax =   4.40480985020031E-14  7.92259940383432E-02
 cg2d: Sum(rhs),rhsMax =   1.08003883614316E-13  7.93120693490080E-02
 cg2d: Sum(rhs),rhsMax =  -1.23803745033513E-13  7.93981643136872E-02
 cg2d: Sum(rhs),rhsMax =   1.92408589061444E-13  7.94843280469365E-02
 cg2d: Sum(rhs),rhsMax =  -3.42469108627341E-13  7.95705986946846E-02
 cg2d: Sum(rhs),rhsMax =   5.16219011981178E-13  7.96570024771051E-02
 cg2d: Sum(rhs),rhsMax =  -7.42461647718073E-15  7.97435524780591E-02
 cg2d: Sum(rhs),rhsMax =  -1.97460103823488E-13  7.98302485200515E-02
 cg2d: Sum(rhs),rhsMax =  -1.27793609028259E-13  7.99170770656448E-02
 cg2d: Sum(rhs),rhsMax =  -2.17888207476591E-13  8.00040113615255E-02
 cg2d: Sum(rhs),rhsMax =  -4.96117036341559E-13  8.00910118961499E-02
 cg2d: Sum(rhs),rhsMax =   2.29261054585095E-14  8.01780273648786E-02
 cg2d: Sum(rhs),rhsMax =   8.60769788779692E-14  8.02649961897703E-02
 cg2d: Sum(rhs),rhsMax =   1.66491820330350E-13  8.03518482895444E-02
 cg2d: Sum(rhs),rhsMax =   3.56957519098700E-13  8.04385070261300E-02
 cg2d: Sum(rhs),rhsMax =   3.25690863167694E-13  8.05248912330030E-02
 cg2d: Sum(rhs),rhsMax =   1.18030585305462E-13  8.06109170020936E-02
 cg2d: Sum(rhs),rhsMax =  -1.67393876537858E-13  8.06964996542204E-02
 cg2d: Sum(rhs),rhsMax =   7.20062898196261E-13  8.07815560849870E-02
 cg2d: Sum(rhs),rhsMax =  -4.00596222860372E-13  8.08660075879306E-02
 cg2d: Sum(rhs),rhsMax =   1.30576105483726E-13  8.09497830435235E-02
 cg2d: Sum(rhs),rhsMax =  -4.91801044333329E-13  8.10328221939339E-02
 cg2d: Sum(rhs),rhsMax =  -4.31689406443780E-13  8.11150785356192E-02
 cg2d: Sum(rhs),rhsMax =   1.71515579516779E-13  8.11965214617366E-02
 cg2d: Sum(rhs),rhsMax =  -9.85739267989061E-14  8.12771376473212E-02
 cg2d: Sum(rhs),rhsMax =   1.88862814276547E-13  8.13569317802824E-02
 cg2d: Sum(rhs),rhsMax =  -1.32713284806130E-13  8.14359264334524E-02
 cg2d: Sum(rhs),rhsMax =   3.74526798463393E-13  8.15141611673651E-02
 cg2d: Sum(rhs),rhsMax =   1.30957744648441E-13  8.15916910485608E-02
 cg2d: Sum(rhs),rhsMax =  -2.24681384608516E-14  8.16685848037837E-02
 cg2d: Sum(rhs),rhsMax =  -2.03954908517545E-13  8.17449251837746E-02
 cg2d: Sum(rhs),rhsMax =  -5.97175087158064E-13  8.18207992548738E-02
 cg2d: Sum(rhs),rhsMax =   6.14369666251946E-14  8.18963026557024E-02
 cg2d: Sum(rhs),rhsMax =  -1.93484117616549E-13  8.19715354905230E-02
 cg2d: Sum(rhs),rhsMax =  -1.87523607753093E-13  8.20465995316739E-02
 cg2d: Sum(rhs),rhsMax =   2.50799381262823E-13  8.21215951517381E-02
 cg2d: Sum(rhs),rhsMax =  -7.75907116334906E-14  8.21966182078700E-02
 cg2d: Sum(rhs),rhsMax =   1.21083698623181E-13  8.22717572739503E-02
 cg2d: Sum(rhs),rhsMax =   1.33774935573427E-13  8.23470889867011E-02
 cg2d: Sum(rhs),rhsMax =   1.77816095181527E-13  8.24226830082507E-02
 cg2d: Sum(rhs),rhsMax =   1.55049584282807E-13  8.24985944714217E-02
 cg2d: Sum(rhs),rhsMax =   2.23016050071578E-14  8.25748645504537E-02
 cg2d: Sum(rhs),rhsMax =   2.55448440178441E-13  8.26515194996043E-02
 cg2d: Sum(rhs),rhsMax =  -5.06733544014537E-13  8.27285700692425E-02
 cg2d: Sum(rhs),rhsMax =   8.88247808639164E-14  8.28060114416982E-02
 cg2d: Sum(rhs),rhsMax =  -1.47083734081122E-13  8.28838236681894E-02
 cg2d: Sum(rhs),rhsMax =  -5.04672692525077E-13  8.29619637771913E-02
 cg2d: Sum(rhs),rhsMax =   4.58043325490820E-13  8.30403674219585E-02
 cg2d: Sum(rhs),rhsMax =   1.48984991010792E-13  8.31189751805209E-02
 cg2d: Sum(rhs),rhsMax =   2.11643202963074E-13  8.31977230588157E-02
 cg2d: Sum(rhs),rhsMax =  -1.67976743625786E-13  8.32765401668969E-02
 cg2d: Sum(rhs),rhsMax =   2.48509546274533E-13  8.33553468866768E-02
 cg2d: Sum(rhs),rhsMax =   2.20080897950226E-13  8.34340544469415E-02
 cg2d: Sum(rhs),rhsMax =  -1.78829173691497E-13  8.35125682756045E-02
 cg2d: Sum(rhs),rhsMax =   2.17235951449624E-13  8.35907905459423E-02
 cg2d: Sum(rhs),rhsMax =   2.47864229141470E-13  8.36686218272974E-02
 cg2d: Sum(rhs),rhsMax =  -5.83144643684363E-14  8.37459640250938E-02
 cg2d: Sum(rhs),rhsMax =  -9.65616475667730E-14  8.38227200282586E-02
 cg2d: Sum(rhs),rhsMax =   2.60236276972137E-13  8.38987972230106E-02
 cg2d: Sum(rhs),rhsMax =   7.78752062835508E-14  8.39741111120110E-02
 cg2d: Sum(rhs),rhsMax =  -4.48877046643759E-14  8.40485883847533E-02
 cg2d: Sum(rhs),rhsMax =  -4.97747676408977E-13  8.41221692017113E-02
 cg2d: Sum(rhs),rhsMax =  -4.08978406696292E-14  8.41948088126815E-02
 cg2d: Sum(rhs),rhsMax =  -3.13110648519910E-13  8.42664788017660E-02
 cg2d: Sum(rhs),rhsMax =  -2.41737185824320E-13  8.43371681810305E-02
 cg2d: Sum(rhs),rhsMax =   2.17839635219264E-13  8.44068844813159E-02
 cg2d: Sum(rhs),rhsMax =   2.51056120337267E-13  8.44756545611811E-02
 cg2d: Sum(rhs),rhsMax =   1.21729015756245E-13  8.45435248209925E-02
 cg2d: Sum(rhs),rhsMax =  -4.05578348683377E-14  8.46105606459717E-02
 cg2d: Sum(rhs),rhsMax =   4.76840789076505E-14  8.46768450422940E-02
 cg2d: Sum(rhs),rhsMax =   2.01602623484121E-13  8.47424765590123E-02
 cg2d: Sum(rhs),rhsMax =   2.79130885072476E-13  8.48075666312493E-02
 cg2d: Sum(rhs),rhsMax =   6.34908792207511E-15  8.48722371997619E-02
 cg2d: Sum(rhs),rhsMax =  -4.91551244152788E-14  8.49366152326554E-02
 cg2d: Sum(rhs),rhsMax =  -4.04919153762506E-13  8.50008317155800E-02
 cg2d: Sum(rhs),rhsMax =   7.08891279010970E-13  8.50650175356810E-02
 cg2d: Sum(rhs),rhsMax =  -6.84868828315643E-15  8.51293000006937E-02
 cg2d: Sum(rhs),rhsMax =  -4.67008376414668E-13  8.51937996030688E-02
 cg2d: Sum(rhs),rhsMax =   1.47833134622744E-13  8.52586271052488E-02
 cg2d: Sum(rhs),rhsMax =  -4.04030975342806E-13  8.53238810631366E-02
 cg2d: Sum(rhs),rhsMax =  -1.04784236842903E-13  8.53896455544548E-02
 cg2d: Sum(rhs),rhsMax =  -4.53068138561719E-13  8.54559899763528E-02
 cg2d: Sum(rhs),rhsMax =   2.36616282123236E-13  8.55229662189472E-02
 cg2d: Sum(rhs),rhsMax =   4.16930379110170E-13  8.55906081510403E-02
 cg2d: Sum(rhs),rhsMax =  -3.93539367760098E-13  8.56589311784588E-02
 cg2d: Sum(rhs),rhsMax =   1.32768795957361E-13  8.57279321864253E-02
 cg2d: Sum(rhs),rhsMax =   1.29042609930963E-13  8.57975898496810E-02
 cg2d: Sum(rhs),rhsMax =  -4.05779576606591E-13  8.58678653204276E-02
 cg2d: Sum(rhs),rhsMax =   1.26711141579250E-13  8.59387032658894E-02
 cg2d: Sum(rhs),rhsMax =  -3.26287608043430E-13  8.60100332153251E-02
 cg2d: Sum(rhs),rhsMax =   3.60406149368941E-13  8.60817711496906E-02
 cg2d: Sum(rhs),rhsMax =  -1.41650580154362E-13  8.61538212728943E-02
 cg2d: Sum(rhs),rhsMax =   8.82280359881804E-14  8.62260779201174E-02
 cg2d: Sum(rhs),rhsMax =  -5.69613800571744E-13  8.62984271575721E-02
 cg2d: Sum(rhs),rhsMax =   3.42101347250434E-13  8.63707500334552E-02
 cg2d: Sum(rhs),rhsMax =  -3.65096841647983E-13  8.64429247010340E-02
 cg2d: Sum(rhs),rhsMax =   3.11507764028107E-13  8.65148297375326E-02
 cg2d: Sum(rhs),rhsMax =   6.21239171216814E-14  8.65863445227776E-02
 cg2d: Sum(rhs),rhsMax =  -3.41005002013617E-13  8.72628187751804E-02
 cg2d: Sum(rhs),rhsMax =   2.31412111695306E-13  8.79850204099585E-02
 cg2d: Sum(rhs),rhsMax =  -3.25683924273790E-13  8.87099367370963E-02
 cg2d: Sum(rhs),rhsMax =  -6.30870355955437E-13  8.94340777389818E-02
 cg2d: Sum(rhs),rhsMax =  -1.60926827419416E-13  9.01542655962766E-02
 cg2d: Sum(rhs),rhsMax =  -3.05380720710957E-14  9.08678408830578E-02
 cg2d: Sum(rhs),rhsMax =  -1.10016162846449E-13  9.15731280389593E-02
 cg2d: Sum(rhs),rhsMax =  -5.43246003736897E-14  9.22678764007781E-02
 cg2d: Sum(rhs),rhsMax =  -8.70553629184201E-14  9.29502395837215E-02
 cg2d: Sum(rhs),rhsMax =   4.21364332314766E-13  9.36149266210281E-02
 cg2d: Sum(rhs),rhsMax =  -4.24563162404468E-13  9.42617904070756E-02
 cg2d: Sum(rhs),rhsMax =   3.22929183393939E-13  9.48908564755723E-02
 cg2d: Sum(rhs),rhsMax =   3.10862446895044E-13  9.55023785916575E-02
 cg2d: Sum(rhs),rhsMax =  -2.30357399821912E-13  9.60954410960625E-02
 cg2d: Sum(rhs),rhsMax =  -2.19498030862297E-13  9.66719671276566E-02
 cg2d: Sum(rhs),rhsMax =  -1.89785687165767E-13  9.72348635194090E-02
 cg2d: Sum(rhs),rhsMax =   2.41889841490206E-13  9.77877215399956E-02
 cg2d: Sum(rhs),rhsMax =   5.64201463326697E-14  9.83339145649072E-02
 cg2d: Sum(rhs),rhsMax =  -2.50077736296817E-14  9.88722185414568E-02
 cg2d: Sum(rhs),rhsMax =   4.58112714429859E-13  9.94063724153078E-02
 cg2d: Sum(rhs),rhsMax =  -3.91839338753641E-14  9.99396620787931E-02
 cg2d: Sum(rhs),rhsMax =   1.46334333539500E-13  1.00475594831955E-01
 cg2d: Sum(rhs),rhsMax =   5.89965576391904E-13  1.01017668995095E-01
 cg2d: Sum(rhs),rhsMax =  -3.21846715944929E-13  1.01569200083543E-01
 cg2d: Sum(rhs),rhsMax =   1.09551256954887E-13  1.02132827882099E-01
 cg2d: Sum(rhs),rhsMax =   3.88300502862649E-13  1.02711348681551E-01
 cg2d: Sum(rhs),rhsMax =  -2.03927152941930E-13  1.03306970384814E-01
 cg2d: Sum(rhs),rhsMax =  -9.72208424876442E-14  1.03919547815248E-01
 cg2d: Sum(rhs),rhsMax =   1.17100773522338E-13  1.04551741284187E-01
 cg2d: Sum(rhs),rhsMax =  -7.65359997600967E-15  1.05204286144418E-01
 cg2d: Sum(rhs),rhsMax =   2.25555685240408E-13  1.05876235676475E-01
 cg2d: Sum(rhs),rhsMax =   2.82725232114700E-13  1.06565297404734E-01
 cg2d: Sum(rhs),rhsMax =   4.03573008345148E-13  1.07268761708749E-01
 cg2d: Sum(rhs),rhsMax =   4.52245879634106E-13  1.07986303798780E-01
 cg2d: Sum(rhs),rhsMax =   1.82524134695328E-13  1.08718197328141E-01
 cg2d: Sum(rhs),rhsMax =  -7.52869988573934E-16  1.09463032691602E-01
 cg2d: Sum(rhs),rhsMax =  -4.72882150104326E-13  1.10219791451732E-01
 cg2d: Sum(rhs),rhsMax =   7.77850006628000E-14  1.10987313561046E-01
 cg2d: Sum(rhs),rhsMax =   6.22175921893842E-14  1.11764267531245E-01
 cg2d: Sum(rhs),rhsMax =   2.53533305460962E-13  1.12549172972458E-01
 cg2d: Sum(rhs),rhsMax =  -1.81889225903120E-13  1.13340356583364E-01
 cg2d: Sum(rhs),rhsMax =   1.21722076862341E-13  1.14135848341159E-01
 cg2d: Sum(rhs),rhsMax =   1.98938088225020E-14  1.14933034637665E-01
 cg2d: Sum(rhs),rhsMax =  -2.76671047183541E-13  1.15730419621554E-01
 cg2d: Sum(rhs),rhsMax =  -5.31449884100255E-14  1.16526561956521E-01
 cg2d: Sum(rhs),rhsMax =  -2.65364119567124E-13  1.17318090636318E-01
 cg2d: Sum(rhs),rhsMax =   2.03968786305353E-14  1.18103592067422E-01
 cg2d: Sum(rhs),rhsMax =   7.68760055613882E-14  1.18882429532059E-01
 cg2d: Sum(rhs),rhsMax =   1.09356967925578E-14  1.19653277628620E-01
 cg2d: Sum(rhs),rhsMax =   2.56843157853126E-14  1.20414232007011E-01
 cg2d: Sum(rhs),rhsMax =   7.41663674919124E-14  1.21164115899833E-01
 cg2d: Sum(rhs),rhsMax =   2.46764414457701E-13  1.21903070234586E-01
 cg2d: Sum(rhs),rhsMax =  -1.84467024988422E-13  1.22631677188063E-01
 cg2d: Sum(rhs),rhsMax =  -1.25389282290556E-13  1.23350537708052E-01
 cg2d: Sum(rhs),rhsMax =   2.49029963317327E-13  1.24058751812623E-01
 cg2d: Sum(rhs),rhsMax =  -2.40429204323434E-13  1.24754430905157E-01
 cg2d: Sum(rhs),rhsMax =   2.06851896722426E-13  1.25440185208511E-01
 cg2d: Sum(rhs),rhsMax =  -1.71664765735713E-13  1.26146302392624E-01
 cg2d: Sum(rhs),rhsMax =   6.12218609141735E-14  1.26999339118710E-01
 cg2d: Sum(rhs),rhsMax =   7.81388842518993E-14  1.27837479273602E-01
 cg2d: Sum(rhs),rhsMax =  -2.61214661012588E-14  1.28658887285732E-01
 cg2d: Sum(rhs),rhsMax =   4.14338702237060E-13  1.29462898216975E-01
 cg2d: Sum(rhs),rhsMax =   3.36560640468164E-13  1.30247610296335E-01
 cg2d: Sum(rhs),rhsMax =   1.27703403407509E-13  1.31013067640531E-01
 cg2d: Sum(rhs),rhsMax =   1.40658318326103E-13  1.31757389270587E-01
 cg2d: Sum(rhs),rhsMax =  -3.04874181455972E-13  1.32480304838042E-01
 cg2d: Sum(rhs),rhsMax =  -8.93764229292771E-14  1.33183129090293E-01
 cg2d: Sum(rhs),rhsMax =  -2.07830280762877E-13  1.33867721036017E-01
 cg2d: Sum(rhs),rhsMax =   1.01627040116625E-13  1.34536496500482E-01
 cg2d: Sum(rhs),rhsMax =   1.08951042632199E-13  1.35368110798472E-01
 cg2d: Sum(rhs),rhsMax =  -3.07670555699247E-14  1.36220425717570E-01
 cg2d: Sum(rhs),rhsMax =  -2.38555702969379E-13  1.37073522052311E-01
 cg2d: Sum(rhs),rhsMax =   3.36536354339501E-16  1.37927416512373E-01
 cg2d: Sum(rhs),rhsMax =  -1.53280166337311E-14  1.38781588965729E-01
 cg2d: Sum(rhs),rhsMax =  -1.42382633461224E-13  1.39635270320649E-01
 cg2d: Sum(rhs),rhsMax =  -1.66984481797527E-14  1.40487573404978E-01
 cg2d: Sum(rhs),rhsMax =   9.42614042376277E-14  1.41337873779045E-01
 cg2d: Sum(rhs),rhsMax =   8.03489219602938E-14  1.42187436043472E-01
 cg2d: Sum(rhs),rhsMax =  -8.79747663606878E-14  1.43034442550325E-01
 cg2d: Sum(rhs),rhsMax =  -9.34495536508706E-14  1.43878020468321E-01
 cg2d: Sum(rhs),rhsMax =  -1.40183004093686E-13  1.44718407656405E-01
 cg2d: Sum(rhs),rhsMax =  -2.14227940942280E-13  1.45555156346706E-01
 cg2d: Sum(rhs),rhsMax =   6.38863961732739E-14  1.46388227757740E-01
 cg2d: Sum(rhs),rhsMax =  -1.40703421136479E-13  1.47217880951695E-01
 cg2d: Sum(rhs),rhsMax =  -5.57574819648465E-14  1.48045617322181E-01
 cg2d: Sum(rhs),rhsMax =   1.05221387158849E-13  1.48871565681169E-01
 cg2d: Sum(rhs),rhsMax =  -8.34228519597247E-14  1.49695892882485E-01
 cg2d: Sum(rhs),rhsMax =   5.99659211175663E-14  1.50519316437454E-01
 cg2d: Sum(rhs),rhsMax =   1.43409589759003E-13  1.51341687064957E-01
 cg2d: Sum(rhs),rhsMax =  -9.33385313484081E-14  1.52162692735685E-01
 cg2d: Sum(rhs),rhsMax =   7.50233208890450E-14  1.52987471985976E-01
 cg2d: Sum(rhs),rhsMax =   3.43978318051441E-13  1.53810605525200E-01
 cg2d: Sum(rhs),rhsMax =   1.16746889933239E-13  1.54634862324125E-01
 cg2d: Sum(rhs),rhsMax =   1.43877965097516E-14  1.55461061146750E-01
 cg2d: Sum(rhs),rhsMax =   1.73736025566029E-13  1.56290561831099E-01
 cg2d: Sum(rhs),rhsMax =  -1.32793082086025E-13  1.57124102489800E-01
 cg2d: Sum(rhs),rhsMax =  -2.82725232114700E-14  1.57962446474309E-01
 cg2d: Sum(rhs),rhsMax =  -1.53627111032506E-13  1.58806672234743E-01
 cg2d: Sum(rhs),rhsMax =   9.84282100269240E-15  1.59661412735110E-01
 cg2d: Sum(rhs),rhsMax =  -2.29993107891957E-13  1.60523585958829E-01
 cg2d: Sum(rhs),rhsMax =   2.23578100477795E-13  1.61394560234686E-01
 cg2d: Sum(rhs),rhsMax =  -2.35270136705878E-13  1.62274988990949E-01
 cg2d: Sum(rhs),rhsMax =   7.47769901554562E-14  1.63165684758346E-01
 cg2d: Sum(rhs),rhsMax =  -6.19261586454201E-14  1.64064720175055E-01
 cg2d: Sum(rhs),rhsMax =  -1.32706345912226E-14  1.64970463215959E-01
 cg2d: Sum(rhs),rhsMax =  -1.14333889578155E-13  1.65882467818572E-01
 cg2d: Sum(rhs),rhsMax =   1.10663214702988E-13  1.66799932474840E-01
 cg2d: Sum(rhs),rhsMax =   3.55960053100013E-13  1.67721099178021E-01
 cg2d: Sum(rhs),rhsMax =  -6.46965120365550E-14  1.68650282791839E-01
 cg2d: Sum(rhs),rhsMax =  -1.01262748186670E-13  1.69583635354045E-01
 cg2d: Sum(rhs),rhsMax =   1.42023545701697E-13  1.70518391333791E-01
 cg2d: Sum(rhs),rhsMax =   7.59062951383171E-14  1.71454884316503E-01
 cg2d: Sum(rhs),rhsMax =   1.78317430266084E-13  1.72392869643652E-01
 cg2d: Sum(rhs),rhsMax =  -1.44778286581548E-13  1.73332169872246E-01
 cg2d: Sum(rhs),rhsMax =   1.12361508985970E-13  1.74272138176897E-01
 cg2d: Sum(rhs),rhsMax =   1.13469997287119E-13  1.75212502991206E-01
 cg2d: Sum(rhs),rhsMax =  -6.65249105802346E-14  1.76152626529849E-01
 cg2d: Sum(rhs),rhsMax =  -1.11619047338252E-13  1.77091497892023E-01
 cg2d: Sum(rhs),rhsMax =   3.37958827589802E-14  1.78027913008706E-01
 cg2d: Sum(rhs),rhsMax =   8.17193535063154E-14  1.78959181968341E-01
 cg2d: Sum(rhs),rhsMax =   1.83551090993106E-14  1.79884665453075E-01
 cg2d: Sum(rhs),rhsMax =  -7.90704307584988E-14  1.80807626643531E-01
 cg2d: Sum(rhs),rhsMax =  -5.41129641096205E-14  1.81716307065163E-01
 cg2d: Sum(rhs),rhsMax =   2.46816456161980E-14  1.82612787655247E-01
 cg2d: Sum(rhs),rhsMax =  -2.48100151534203E-14  1.83500059622437E-01
 cg2d: Sum(rhs),rhsMax =   1.50580936608691E-13  1.84380995597225E-01
 cg2d: Sum(rhs),rhsMax =  -7.40674882537817E-14  1.85256798648570E-01
 cg2d: Sum(rhs),rhsMax =   7.64839580558174E-14  1.86129812267048E-01
 cg2d: Sum(rhs),rhsMax =   6.53765236391379E-14  1.87000942348026E-01
 cg2d: Sum(rhs),rhsMax =   2.27042343259320E-13  1.87872254069578E-01
 cg2d: Sum(rhs),rhsMax =  -1.52407600428894E-13  1.88745673938981E-01
 cg2d: Sum(rhs),rhsMax =   1.11900072541360E-13  1.89615292304714E-01
 cg2d: Sum(rhs),rhsMax =  -1.01620101222721E-14  1.90480965219240E-01
 cg2d: Sum(rhs),rhsMax =  -6.73246181026599E-14  1.91349233546505E-01
 cg2d: Sum(rhs),rhsMax =   1.59773236307892E-13  1.92216602044739E-01
 cg2d: Sum(rhs),rhsMax =  -3.41497663480794E-14  1.93077332357995E-01
 cg2d: Sum(rhs),rhsMax =   4.23671514537816E-14  1.93934976347458E-01
 cg2d: Sum(rhs),rhsMax =  -4.16021384008758E-14  1.94790185438015E-01
 cg2d: Sum(rhs),rhsMax =  -1.14261031192164E-13  1.95644948048075E-01
 cg2d: Sum(rhs),rhsMax =   8.97216329009964E-14  1.96501202021555E-01
 cg2d: Sum(rhs),rhsMax =  -8.70831184940357E-16  1.97363921879551E-01
 cg2d: Sum(rhs),rhsMax =   3.00072466874468E-14  1.98235393240920E-01
 cg2d: Sum(rhs),rhsMax =   1.52452703239270E-13  1.99118069657611E-01
 cg2d: Sum(rhs),rhsMax =  -2.12552198064486E-13  2.00021079817217E-01
 cg2d: Sum(rhs),rhsMax =  -1.66627128761476E-13  2.00935812786117E-01
 cg2d: Sum(rhs),rhsMax =   1.81151968425830E-13  2.01865401738653E-01
 cg2d: Sum(rhs),rhsMax =   3.03186295513846E-13  2.02810318226196E-01
 cg2d: Sum(rhs),rhsMax =  -3.95083271653718E-14  2.03771281964376E-01
 cg2d: Sum(rhs),rhsMax =   5.37937749900408E-15  2.04746965939012E-01
 cg2d: Sum(rhs),rhsMax =   1.33244110189779E-14  2.05737447464693E-01
 cg2d: Sum(rhs),rhsMax =  -1.40207290222349E-13  2.06734184996921E-01
 cg2d: Sum(rhs),rhsMax =  -8.78758871225571E-14  2.07733570540009E-01
 cg2d: Sum(rhs),rhsMax =  -4.89018547877862E-14  2.08739702763837E-01
 cg2d: Sum(rhs),rhsMax =  -1.93099009004882E-13  2.09750897913303E-01
 cg2d: Sum(rhs),rhsMax =   6.77079919908508E-14  2.10760162253918E-01
 cg2d: Sum(rhs),rhsMax =   6.85475981532235E-14  2.11769029543949E-01
 cg2d: Sum(rhs),rhsMax =  -5.00779973044985E-14  2.12776555286776E-01
 cg2d: Sum(rhs),rhsMax =   2.19713136573318E-13  2.13779574494391E-01
 cg2d: Sum(rhs),rhsMax =  -9.65061364155417E-14  2.14776289483012E-01
 cg2d: Sum(rhs),rhsMax =  -1.04916075827077E-14  2.15766091678896E-01
 cg2d: Sum(rhs),rhsMax =   7.31567584288939E-14  2.16746983042387E-01
 cg2d: Sum(rhs),rhsMax =   6.05349104176867E-14  2.17717558793262E-01
 cg2d: Sum(rhs),rhsMax =   6.08020578329871E-15  2.18676137465941E-01
 cg2d: Sum(rhs),rhsMax =   1.70020247880487E-14  2.19621208347011E-01
 cg2d: Sum(rhs),rhsMax =   4.13783590724748E-14  2.20550869209191E-01
 cg2d: Sum(rhs),rhsMax =  -1.97140914703908E-13  2.21457505629811E-01
 cg2d: Sum(rhs),rhsMax =  -5.03295322085151E-14  2.22345807329735E-01
 cg2d: Sum(rhs),rhsMax =   5.86093673593524E-14  2.23202995852016E-01
 cg2d: Sum(rhs),rhsMax =  -7.90860432697826E-15  2.24037292040584E-01
 cg2d: Sum(rhs),rhsMax =  -3.87363752185621E-14  2.24855329898733E-01
 cg2d: Sum(rhs),rhsMax =   2.12992817827384E-13  2.25661402913545E-01
 cg2d: Sum(rhs),rhsMax =  -8.00678967571855E-14  2.26459433328603E-01
 cg2d: Sum(rhs),rhsMax =  -1.69829428298129E-14  2.27251555910279E-01
 cg2d: Sum(rhs),rhsMax =  -1.36023137198293E-13  2.28042055022353E-01
 cg2d: Sum(rhs),rhsMax =   6.83463702300102E-14  2.28833886267076E-01
 cg2d: Sum(rhs),rhsMax =  -1.02751140929058E-13  2.29628908913302E-01
 cg2d: Sum(rhs),rhsMax =   8.61220816883446E-14  2.30430948295318E-01
 cg2d: Sum(rhs),rhsMax =   6.62490895475543E-15  2.31243512352638E-01
 cg2d: Sum(rhs),rhsMax =  -1.19154686117895E-13  2.32063659455671E-01
 cg2d: Sum(rhs),rhsMax =  -1.15992285221189E-13  2.32873029671701E-01
 cg2d: Sum(rhs),rhsMax =   7.21176590667838E-14  2.33681986141631E-01
 cg2d: Sum(rhs),rhsMax =   2.18523116268798E-13  2.34493555572516E-01
 cg2d: Sum(rhs),rhsMax =  -4.97241137153992E-14  2.35310913846149E-01
 cg2d: Sum(rhs),rhsMax =   1.07861636289286E-13  2.36136122236097E-01
 cg2d: Sum(rhs),rhsMax =  -7.14116266120612E-14  2.36968904773791E-01
 cg2d: Sum(rhs),rhsMax =  -4.00790511889682E-14  2.37812709610496E-01
 cg2d: Sum(rhs),rhsMax =  -3.11757564208648E-13  2.38671398190813E-01
 cg2d: Sum(rhs),rhsMax =  -2.27663374263720E-13  2.39548824161145E-01
 cg2d: Sum(rhs),rhsMax =   4.08891670522493E-14  2.40457450861345E-01
 cg2d: Sum(rhs),rhsMax =  -1.91974908192449E-13  2.41380116884901E-01
 cg2d: Sum(rhs),rhsMax =  -1.89468232769663E-13  2.42323651165585E-01
 cg2d: Sum(rhs),rhsMax =  -1.06590083981395E-13  2.43289061000144E-01
 cg2d: Sum(rhs),rhsMax =   6.69447136614210E-14  2.44274870437988E-01
 cg2d: Sum(rhs),rhsMax =  -1.12160281062756E-13  2.45278662999145E-01
 cg2d: Sum(rhs),rhsMax =   1.68337566108789E-14  2.46297599109443E-01
 cg2d: Sum(rhs),rhsMax =  -1.36234773462363E-13  2.47328212976139E-01
 cg2d: Sum(rhs),rhsMax =   1.32393228324812E-13  2.48365490234828E-01
 cg2d: Sum(rhs),rhsMax =   8.65193333643433E-14  2.49400888144495E-01
 cg2d: Sum(rhs),rhsMax =   1.53891656362592E-13  2.50428007072140E-01
 cg2d: Sum(rhs),rhsMax =   1.22731685925359E-14  2.51449189814072E-01
 cg2d: Sum(rhs),rhsMax =  -1.27938458438503E-13  2.52459531180862E-01
 cg2d: Sum(rhs),rhsMax =  -3.13143608265953E-14  2.53455745621751E-01
 cg2d: Sum(rhs),rhsMax =  -3.63797533764476E-14  2.54435888419866E-01
 cg2d: Sum(rhs),rhsMax =  -1.27523859527745E-13  2.55396922725465E-01
 cg2d: Sum(rhs),rhsMax =   1.22238157096444E-13  2.56338140846133E-01
 cg2d: Sum(rhs),rhsMax =   6.16390619101459E-14  2.57262032657510E-01
 cg2d: Sum(rhs),rhsMax =  -2.25791607633141E-13  2.58169174839958E-01
 cg2d: Sum(rhs),rhsMax =  -1.24110791088761E-13  2.59052170110647E-01
 cg2d: Sum(rhs),rhsMax =  -6.67001176513082E-16  2.59910260935140E-01
 cg2d: Sum(rhs),rhsMax =   5.33106545019812E-14  2.60743030192341E-01
 cg2d: Sum(rhs),rhsMax =  -4.99704444489879E-14  2.61734845475887E-01
 cg2d: Sum(rhs),rhsMax =  -3.44273221042357E-13  2.62779505148060E-01
 cg2d: Sum(rhs),rhsMax =  -1.35023069114393E-13  2.63822446345732E-01
 cg2d: Sum(rhs),rhsMax =  -1.05035771746920E-13  2.64869060878078E-01
 cg2d: Sum(rhs),rhsMax =  -1.19626530903361E-13  2.65911415995191E-01
 cg2d: Sum(rhs),rhsMax =   1.06231863583606E-13  2.66952267505113E-01
 cg2d: Sum(rhs),rhsMax =   2.92385907152415E-13  2.67991911886115E-01
 cg2d: Sum(rhs),rhsMax =   1.62370117351429E-13  2.69031171282007E-01
 cg2d: Sum(rhs),rhsMax =  -5.21440529643868E-14  2.70071306613549E-01
 cg2d: Sum(rhs),rhsMax =  -4.13957063072345E-14  2.71116938242481E-01
 cg2d: Sum(rhs),rhsMax =  -8.98985746955461E-14  2.72168751817501E-01
 cg2d: Sum(rhs),rhsMax =  -3.19570758744447E-14  2.73227340391380E-01
